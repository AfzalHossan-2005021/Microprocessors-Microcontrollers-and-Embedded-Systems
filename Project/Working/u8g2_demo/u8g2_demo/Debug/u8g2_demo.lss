
u8g2_demo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003c04  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000138  00800060  00003c04  00003c98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000498  00800198  00800198  00003dd0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003dd0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003e00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00002c18  00000000  00000000  00003e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0005c451  00000000  00000000  00006a54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002990  00000000  00000000  00062ea5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000ff65  00000000  00000000  00065835  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000116ec  00000000  00000000  0007579c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000150df  00000000  00000000  00086e88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0006e962  00000000  00000000  0009bf67  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00002c08  00000000  00000000  0010a8c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__ctors_end>
       4:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
       8:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
       c:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      10:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      14:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      18:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      1c:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      20:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      24:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      28:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      2c:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      30:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      34:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      38:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      3c:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      40:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      44:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      48:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      4c:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      50:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__bad_interrupt>
      54:	07 63       	ori	r16, 0x37	; 55
      56:	42 36       	cpi	r20, 0x62	; 98
      58:	b7 9b       	sbis	0x16, 7	; 22
      5a:	d8 a7       	std	Y+40, r29	; 0x28
      5c:	1a 39       	cpi	r17, 0x9A	; 154
      5e:	68 56       	subi	r22, 0x68	; 104
      60:	18 ae       	std	Y+56, r1	; 0x38
      62:	ba ab       	std	Y+50, r27	; 0x32
      64:	55 8c       	ldd	r5, Z+29	; 0x1d
      66:	1d 3c       	cpi	r17, 0xCD	; 205
      68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
      6a:	57 63       	ori	r21, 0x37	; 55
      6c:	bd 6d       	ori	r27, 0xDD	; 221
      6e:	ed fd       	.word	0xfded	; ????
      70:	75 3e       	cpi	r23, 0xE5	; 229
      72:	f6 17       	cp	r31, r22
      74:	72 31       	cpi	r23, 0x12	; 18
      76:	bf 00       	.word	0x00bf	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	08 00       	.word	0x0008	; ????
      7e:	00 00       	nop
      80:	be 92       	st	-X, r11
      82:	24 49       	sbci	r18, 0x94	; 148
      84:	12 3e       	cpi	r17, 0xE2	; 226
      86:	ab aa       	std	Y+51, r10	; 0x33
      88:	aa 2a       	or	r10, r26
      8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
      8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
      8e:	4c 3e       	cpi	r20, 0xEC	; 236
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	be ab       	std	Y+54, r27	; 0x36
      96:	aa aa       	std	Y+50, r10	; 0x32
      98:	aa 3e       	cpi	r26, 0xEA	; 234
      9a:	00 00       	nop
      9c:	00 00       	nop
      9e:	bf 00       	.word	0x00bf	; ????
      a0:	00 00       	nop
      a2:	80 3f       	cpi	r24, 0xF0	; 240
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	00 08       	sbc	r0, r0
      aa:	41 78       	andi	r20, 0x81	; 129
      ac:	d3 bb       	out	0x13, r29	; 19
      ae:	43 87       	std	Z+11, r20	; 0x0b
      b0:	d1 13       	cpse	r29, r17
      b2:	3d 19       	sub	r19, r13
      b4:	0e 3c       	cpi	r16, 0xCE	; 206
      b6:	c3 bd       	out	0x23, r28	; 35
      b8:	42 82       	std	Z+2, r4	; 0x02
      ba:	ad 2b       	or	r26, r29
      bc:	3e 68       	ori	r19, 0x8E	; 142
      be:	ec 82       	std	Y+4, r14	; 0x04
      c0:	76 be       	out	0x36, r7	; 54
      c2:	d9 8f       	std	Y+25, r29	; 0x19
      c4:	e1 a9       	ldd	r30, Z+49	; 0x31
      c6:	3e 4c       	sbci	r19, 0xCE	; 206
      c8:	80 ef       	ldi	r24, 0xF0	; 240
      ca:	ff be       	out	0x3f, r15	; 63
      cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__stack+0x71>
      ce:	ff 7f       	andi	r31, 0xFF	; 255
      d0:	3f 00       	.word	0x003f	; ????
      d2:	00 00       	nop
	...

000000d6 <__trampolines_end>:
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	03 03       	mulsu	r16, r19
      da:	04 05       	cpc	r16, r4
      dc:	03 05       	cpc	r16, r3
      de:	06 0f       	add	r16, r22
      e0:	14 ff       	sbrs	r17, 4
      e2:	fc 0c       	add	r15, r12
      e4:	fc 0c       	add	r15, r12
      e6:	fd 01       	movw	r30, r26
      e8:	e6 04       	cpc	r14, r6
      ea:	18 0c       	add	r1, r8
      ec:	ae 20       	and	r10, r14
      ee:	05 00       	.word	0x0005	; ????
      f0:	18 4b       	sbci	r17, 0xB8	; 184
      f2:	21 09       	sbc	r18, r1
      f4:	c2 0c       	add	r12, r2
      f6:	4d 1c       	adc	r4, r13
      f8:	2c 69       	ori	r18, 0x9C	; 156
      fa:	04 22       	and	r0, r20
      fc:	0a 45       	sbci	r16, 0x5A	; 90
      fe:	8a 51       	subi	r24, 0x1A	; 26
     100:	48 58       	subi	r20, 0x88	; 136
     102:	24 a1       	ldd	r18, Z+36	; 0x24
     104:	00 23       	and	r16, r16
     106:	1b c9       	rjmp	.-3530   	; 0xfffff33e <__eeprom_end+0xff7ef33e>
     108:	08 d3       	rcall	.+1552   	; 0x71a <__EEPROM_REGION_LENGTH__+0x31a>
     10a:	49 84       	ldd	r4, Y+9	; 0x09
     10c:	12 a1       	ldd	r17, Z+34	; 0x22
     10e:	44 74       	andi	r20, 0x44	; 68
     110:	88 1c       	adc	r8, r8
     112:	42 12       	cpse	r4, r18
     114:	a1 44       	sbci	r26, 0x41	; 65
     116:	74 88       	ldd	r7, Z+20	; 0x14
     118:	1c 42       	sbci	r17, 0x2C	; 44
     11a:	12 a1       	ldd	r17, Z+34	; 0x22
     11c:	44 28       	or	r4, r4
     11e:	91 01       	movw	r18, r2
     120:	24 14       	cp	r2, r4
     122:	e7 fa       	bst	r14, 7
     124:	d2 05       	cpc	r29, r2
     126:	2b 07       	cpc	r18, r27
     128:	49 84       	ldd	r4, Y+9	; 0x09
     12a:	12 23       	and	r17, r18
     12c:	72 8b       	std	Z+18, r23	; 0x12
     12e:	50 22       	and	r5, r16
     130:	07 49       	sbci	r16, 0x97	; 151
     132:	31 06       	cpc	r3, r17
     134:	25 1f       	adc	r18, r21
     136:	cd 08       	sbc	r12, r13
     138:	5d 49       	sbci	r21, 0x9D	; 157
     13a:	83 b4       	in	r8, 0x23	; 35
     13c:	a0 48       	sbci	r26, 0x80	; 128
     13e:	14 14       	cp	r1, r4
     140:	49 c2       	rjmp	.+1170   	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
     142:	a4 b8       	out	0x04, r10	; 4
     144:	28 0e       	add	r2, r24
     146:	0d c9       	rjmp	.-3558   	; 0xfffff362 <__eeprom_end+0xff7ef362>
     148:	43 e4       	ldi	r20, 0x43	; 67
     14a:	88 48       	sbci	r24, 0x88	; 136
     14c:	18 52       	subi	r17, 0x28	; 40
     14e:	8c 11       	cpse	r24, r12
     150:	a3 22       	and	r10, r19
     152:	00 26       	eor	r0, r16
     154:	16 ca       	rjmp	.-3028   	; 0xfffff582 <__eeprom_end+0xff7ef582>
     156:	0a 59       	subi	r16, 0x9A	; 154
     158:	51 8d       	ldd	r21, Z+25	; 0x19
     15a:	22 a1       	ldd	r18, Z+34	; 0x22
     15c:	48 4a       	sbci	r20, 0xA8	; 168
     15e:	9e 49       	sbci	r25, 0x9E	; 158
     160:	9a 2a       	or	r9, r26
     162:	b2 91       	ld	r27, -Z
     164:	6c 76       	andi	r22, 0x6C	; 108
     166:	88 8d       	ldd	r24, Y+24	; 0x18
     168:	06 27       	eor	r16, r22
     16a:	07 42       	sbci	r16, 0x27	; 39
     16c:	8a 49       	sbci	r24, 0x9A	; 154
     16e:	58 02       	muls	r21, r24
     170:	28 0c       	add	r2, r8
     172:	f4 da       	rcall	.-2584   	; 0xfffff75c <__eeprom_end+0xff7ef75c>
     174:	4c 49       	sbci	r20, 0x9C	; 156
     176:	26 4a       	sbci	r18, 0xA6	; 166
     178:	fa 9b       	sbis	0x1f, 2	; 31
     17a:	68 24       	eor	r6, r8
     17c:	29 0e       	add	r2, r25
     17e:	f4 d8       	rcall	.-3608   	; 0xfffff368 <__eeprom_end+0xff7ef368>
     180:	4c 88       	ldd	r4, Y+20	; 0x14
     182:	46 32       	cpi	r20, 0x26	; 38
     184:	91 fe       	sbrs	r9, 1
     186:	22 99       	sbic	0x04, 2	; 4
     188:	88 00       	.word	0x0088	; ????
     18a:	2a 0b       	sbc	r18, r26
     18c:	55 78       	andi	r21, 0x85	; 133
     18e:	4d a5       	ldd	r20, Y+45	; 0x2d
     190:	a4 8c       	ldd	r10, Z+28	; 0x1c
     192:	26 b1       	in	r18, 0x06	; 6
     194:	00 2b       	or	r16, r16
     196:	0d 88       	ldd	r0, Y+21	; 0x15
     198:	0a d5       	rcall	.+2580   	; 0xbae <__stack+0x34f>
     19a:	89 d5       	rcall	.+2834   	; 0xcae <__stack+0x44f>
     19c:	0e 07       	cpc	r16, r30
     19e:	99 58       	subi	r25, 0x89	; 137
     1a0:	0d 00       	.word	0x000d	; ????
     1a2:	2c 09       	sbc	r18, r12
     1a4:	52 da       	rcall	.-2908   	; 0xfffff64a <__eeprom_end+0xff7ef64a>
     1a6:	48 50       	subi	r20, 0x08	; 8
     1a8:	22 12       	cpse	r2, r18
     1aa:	00 2d       	mov	r16, r0
     1ac:	07 24       	eor	r0, r7
     1ae:	38 4b       	sbci	r19, 0xB8	; 184
     1b0:	1c 02       	muls	r17, r28
     1b2:	2e 06       	cpc	r2, r30
     1b4:	22 0a       	sbc	r2, r18
     1b6:	49 10       	cpse	r4, r9
     1b8:	2f 0f       	add	r18, r31
     1ba:	c4 08       	sbc	r12, r4
     1bc:	cb 25       	eor	r28, r11
     1be:	89 62       	ori	r24, 0x29	; 41
     1c0:	21 51       	subi	r18, 0x11	; 17
     1c2:	2c 24       	eor	r2, r12
     1c4:	8a a5       	ldd	r24, Y+42	; 0x2a
     1c6:	01 30       	cpi	r16, 0x01	; 1
     1c8:	0f c8       	rjmp	.-4066   	; 0xfffff1e8 <__eeprom_end+0xff7ef1e8>
     1ca:	08 53       	subi	r16, 0x38	; 56
     1cc:	d1 2c       	mov	r13, r1
     1ce:	a3 22       	and	r10, r19
     1d0:	1f 4b       	sbci	r17, 0xBF	; 191
     1d2:	13 1b       	sub	r17, r19
     1d4:	09 00       	.word	0x0009	; ????
     1d6:	31 0a       	sbc	r3, r17
     1d8:	c5 0a       	sbc	r12, r21
     1da:	53 c6       	rjmp	.+3238   	; 0xe82 <QR_CODE+0xe1>
     1dc:	0e 35       	cpi	r16, 0x5E	; 94
     1de:	fd 01       	movw	r30, r26
     1e0:	32 0f       	add	r19, r18
     1e2:	c8 08       	sbc	r12, r8
     1e4:	53 d1       	rcall	.+678    	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
     1e6:	2c a3       	std	Y+36, r18	; 0x24
     1e8:	22 51       	subi	r18, 0x12	; 18
     1ea:	3a dc       	rcall	.-1932   	; 0xfffffa60 <__eeprom_end+0xff7efa60>
     1ec:	f1 70       	andi	r31, 0x01	; 1
     1ee:	10 33       	cpi	r17, 0x30	; 48
     1f0:	12 c8       	rjmp	.-4060   	; 0xfffff216 <__eeprom_end+0xff7ef216>
     1f2:	08 53       	subi	r16, 0x38	; 56
     1f4:	d1 2c       	mov	r13, r1
     1f6:	a3 a2       	std	Z+35, r10	; 0x23
     1f8:	74 46       	sbci	r23, 0x64	; 100
     1fa:	24 17       	cp	r18, r20
     1fc:	4b 13       	cpse	r20, r27
     1fe:	1b 09       	sbc	r17, r11
     200:	00 34       	cpi	r16, 0x40	; 64
     202:	13 c8       	rjmp	.-4058   	; 0xfffff22a <__eeprom_end+0xff7ef22a>
     204:	08 53       	subi	r16, 0x38	; 56
     206:	0e 69       	ori	r16, 0x9E	; 158
     208:	12 99       	sbic	0x02, 2	; 2
     20a:	44 a4       	ldd	r4, Z+44	; 0x2c
     20c:	8b 4c       	sbci	r24, 0xCB	; 203
     20e:	72 38       	cpi	r23, 0x82	; 130
     210:	48 c5       	rjmp	.+2704   	; 0xca2 <__stack+0x443>
     212:	2a 00       	.word	0x002a	; ????
     214:	35 11       	cpse	r19, r5
     216:	c8 08       	sbc	r12, r8
     218:	53 39       	cpi	r21, 0x93	; 147
     21a:	89 a5       	ldd	r24, Y+41	; 0x29
     21c:	35 53       	subi	r19, 0x35	; 53
     21e:	6c 2c       	mov	r6, r12
     220:	2e 4d       	sbci	r18, 0xDE	; 222
     222:	6c 24       	eor	r6, r12
     224:	00 36       	cpi	r16, 0x60	; 96
     226:	12 c8       	rjmp	.-4060   	; 0xfffff24c <__eeprom_end+0xff7ef24c>
     228:	08 53       	subi	r16, 0x38	; 56
     22a:	d1 2c       	mov	r13, r1
     22c:	a3 b2       	in	r10, 0x13	; 19
     22e:	64 74       	andi	r22, 0x44	; 68
     230:	19 15       	cp	r17, r9
     232:	89 a5       	ldd	r24, Y+41	; 0x29
     234:	89 8d       	ldd	r24, Y+25	; 0x19
     236:	04 37       	cpi	r16, 0x74	; 116
     238:	0f c8       	rjmp	.-4066   	; 0xfffff258 <__eeprom_end+0xff7ef258>
     23a:	08 53       	subi	r16, 0x38	; 56
     23c:	3c 48       	sbci	r19, 0x8C	; 140
     23e:	c5 52       	subi	r28, 0x25	; 37
     240:	b1 54       	subi	r27, 0x41	; 65
     242:	ac 2a       	or	r10, r28
     244:	56 04       	cpc	r5, r6
     246:	38 13       	cpse	r19, r24
     248:	c8 08       	sbc	r12, r8
     24a:	53 d1       	rcall	.+678    	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
     24c:	2c a3       	std	Y+36, r18	; 0x24
     24e:	a2 44       	sbci	r26, 0x42	; 66
     250:	24 a3       	std	Z+36, r18	; 0x24
     252:	59 46       	sbci	r21, 0x69	; 105
     254:	c5 d2       	rcall	.+1418   	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
     256:	c4 46       	sbci	r28, 0x64	; 100
     258:	02 39       	cpi	r16, 0x92	; 146
     25a:	12 c8       	rjmp	.-4060   	; 0xfffff280 <__eeprom_end+0xff7ef280>
     25c:	08 53       	subi	r16, 0x38	; 56
     25e:	d1 2c       	mov	r13, r1
     260:	a3 22       	and	r10, r19
     262:	b1 34       	cpi	r27, 0x41	; 65
     264:	39 4d       	sbci	r19, 0xD9	; 217
     266:	c4 a5       	ldd	r28, Z+44	; 0x2c
     268:	89 8d       	ldd	r24, Y+25	; 0x19
     26a:	04 3a       	cpi	r16, 0xA4	; 164
     26c:	08 82       	st	Y, r0
     26e:	0c 4b       	sbci	r16, 0xBC	; 188
     270:	d0 21       	and	r29, r0
     272:	04 3b       	cpi	r16, 0xB4	; 180
     274:	0b b2       	in	r0, 0x1b	; 27
     276:	dc 4a       	sbci	r29, 0xAC	; 172
     278:	d0 21       	and	r29, r0
     27a:	94 88       	ldd	r9, Z+20	; 0x14
     27c:	04 00       	.word	0x0004	; ????
     27e:	3c 0c       	add	r3, r12
     280:	88 0a       	sbc	r8, r24
     282:	55 0b       	sbc	r21, r21
     284:	49 a4       	ldd	r4, Y+41	; 0x29
     286:	e9 9c       	mul	r14, r9
     288:	4c 16       	cp	r4, r28
     28a:	3d 0b       	sbc	r19, r29
     28c:	68 1a       	sub	r6, r24
     28e:	55 3c       	cpi	r21, 0xC5	; 197
     290:	c8 91       	.word	0x91c8	; ????
     292:	0e 07       	cpc	r16, r30
     294:	01 3e       	cpi	r16, 0xE1	; 225
     296:	0c 88       	ldd	r0, Y+20	; 0x14
     298:	0a 55       	subi	r16, 0x5A	; 90
     29a:	88 d9       	rcall	.-3312   	; 0xfffff5ac <__eeprom_end+0xff7ef5ac>
     29c:	a7 23       	and	r26, r23
     29e:	46 31       	cpi	r20, 0x16	; 22
     2a0:	00 3f       	cpi	r16, 0xF0	; 240
     2a2:	10 c7       	rjmp	.+3616   	; 0x10c4 <ECG_PROMPT+0x123>
     2a4:	0a d5       	rcall	.+2580   	; 0xcba <__stack+0x45b>
     2a6:	54 0e       	add	r5, r20
     2a8:	32 9a       	sbi	0x06, 2	; 6
     2aa:	54 38       	cpi	r21, 0x84	; 132
     2ac:	54 95       	.word	0x9554	; ????
     2ae:	43 95       	inc	r20
     2b0:	00 40       	sbci	r16, 0x00	; 0
     2b2:	22 ed       	ldi	r18, 0xD2	; 210
     2b4:	ea 60       	ori	r30, 0x0A	; 10
     2b6:	5a 87       	std	Y+10, r21	; 0x0a
     2b8:	32 39       	cpi	r19, 0x92	; 146
     2ba:	24 14       	cp	r2, r4
     2bc:	ab 90       	.word	0x90ab	; ????
     2be:	64 21       	and	r22, r4
     2c0:	59 4c       	sbci	r21, 0xC9	; 201
     2c2:	a4 26       	eor	r10, r20
     2c4:	52 8b       	std	Z+18, r21	; 0x12
     2c6:	89 94       	.word	0x9489	; ????
     2c8:	48 21       	and	r20, r8
     2ca:	51 9a       	sbi	0x0a, 1	; 10
     2cc:	48 26       	eor	r4, r24
     2ce:	87 ce       	rjmp	.-754    	; 0xffffffde <__eeprom_end+0xff7effde>
     2d0:	e4 45       	sbci	r30, 0x54	; 84
     2d2:	00 41       	sbci	r16, 0x10	; 16
     2d4:	16 cb       	rjmp	.-2516   	; 0xfffff902 <__eeprom_end+0xff7ef902>
     2d6:	08 59       	subi	r16, 0x98	; 152
     2d8:	ce 21       	and	r28, r14
     2da:	f3 b2       	in	r15, 0x13	; 19
     2dc:	44 3a       	cpi	r20, 0xA4	; 164
     2de:	19 ca       	rjmp	.-3022   	; 0xfffff712 <__eeprom_end+0xff7ef712>
     2e0:	64 4b       	sbci	r22, 0xB4	; 180
     2e2:	52 d1       	rcall	.+676    	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
     2e4:	41 72       	andi	r20, 0x21	; 33
     2e6:	b0 d3       	rcall	.+1888   	; 0xa48 <__stack+0x1e9>
     2e8:	05 42       	sbci	r16, 0x25	; 37
     2ea:	14 c9       	rjmp	.-3544   	; 0xfffff514 <__eeprom_end+0xff7ef514>
     2ec:	0a 57       	subi	r16, 0x7A	; 122
     2ee:	9c 0e       	add	r9, r28
     2f0:	11 61       	ori	r17, 0x11	; 17
     2f2:	95 78       	andi	r25, 0x85	; 133
     2f4:	a0 1c       	adc	r10, r0
     2f6:	22 c2       	rjmp	.+1092   	; 0x73c <__EEPROM_REGION_LENGTH__+0x33c>
     2f8:	2a f1       	brmi	.+74     	; 0x344 <__trampolines_end+0x26e>
     2fa:	40 39       	cpi	r20, 0x90	; 144
     2fc:	01 43       	sbci	r16, 0x31	; 49
     2fe:	16 ca       	rjmp	.-3028   	; 0xfffff72c <__eeprom_end+0xff7ef72c>
     300:	0a d9       	rcall	.-3564   	; 0xfffff516 <__eeprom_end+0xff7ef516>
     302:	15 4f       	sbci	r17, 0xF5	; 245
     304:	b3 89       	ldd	r27, Z+19	; 0x13
     306:	b4 2e       	mov	r11, r20
     308:	87 c8       	rjmp	.-3826   	; 0xfffff418 <__eeprom_end+0xff7ef418>
     30a:	21 73       	andi	r18, 0x31	; 49
     30c:	88 54       	subi	r24, 0x48	; 72
     30e:	32 1b       	sub	r19, r18
     310:	1d 4b       	sbci	r17, 0xBD	; 189
     312:	00 44       	sbci	r16, 0x40	; 64
     314:	15 ca       	rjmp	.-3030   	; 0xfffff740 <__eeprom_end+0xff7ef740>
     316:	0a 59       	subi	r16, 0x9A	; 154
     318:	18 0f       	add	r17, r24
     31a:	21 e1       	ldi	r18, 0x11	; 17
     31c:	44 2a       	or	r4, r20
     31e:	91 96       	adiw	r26, 0x21	; 33
     320:	59 ab       	std	Y+49, r21	; 0x31
     322:	12 e1       	ldi	r17, 0x12	; 18
     324:	e4 10       	cpse	r14, r4
     326:	32 02       	muls	r19, r18
     328:	45 0e       	add	r4, r21
     32a:	c8 0a       	sbc	r12, r24
     32c:	55 3c       	cpi	r21, 0xC5	; 197
     32e:	90 95       	com	r25
     330:	2f 17       	cp	r18, r31
     332:	b1 f2       	breq	.-84     	; 0x2e0 <__trampolines_end+0x20a>
     334:	e1 20       	and	r14, r1
     336:	46 0d       	add	r20, r6
     338:	c8 0a       	sbc	r12, r24
     33a:	55 3c       	cpi	r21, 0xC5	; 197
     33c:	90 95       	com	r25
     33e:	2f 17       	cp	r18, r31
     340:	b1 ce       	rjmp	.-670    	; 0xa4 <__SREG__+0x65>
     342:	00 47       	sbci	r16, 0x70	; 112
     344:	16 ca       	rjmp	.-3028   	; 0xfffff772 <__eeprom_end+0xff7ef772>
     346:	0a d9       	rcall	.-3564   	; 0xfffff55c <__eeprom_end+0xff7ef55c>
     348:	15 4f       	sbci	r17, 0xF5	; 245
     34a:	b3 89       	ldd	r27, Z+19	; 0x13
     34c:	b4 2e       	mov	r11, r20
     34e:	87 08       	sbc	r8, r7
     350:	6f 14       	cp	r6, r15
     352:	a9 64       	ori	r26, 0x49	; 73
     354:	36 3a       	cpi	r19, 0xA6	; 166
     356:	c4 28       	or	r12, r4
     358:	02 48       	sbci	r16, 0x82	; 130
     35a:	0c ca       	rjmp	.-3048   	; 0xfffff774 <__eeprom_end+0xff7ef774>
     35c:	0a 59       	subi	r16, 0x9A	; 154
     35e:	88 39       	cpi	r24, 0x98	; 152
     360:	1f 1e       	adc	r1, r31
     362:	c6 7c       	andi	r28, 0xC6	; 198
     364:	16 49       	sbci	r17, 0x96	; 150
     366:	07 c2       	rjmp	.+1038   	; 0x776 <__EEPROM_REGION_LENGTH__+0x376>
     368:	0a 49       	sbci	r16, 0x9A	; 154
     36a:	7c 18       	sub	r7, r12
     36c:	4a 0c       	add	r4, r10
     36e:	c7 0a       	sbc	r12, r23
     370:	d3 ea       	ldi	r29, 0xA3	; 163
     372:	57 1a       	sub	r5, r23
     374:	ed 20       	and	r14, r13
     376:	a9 00       	.word	0x00a9	; ????
     378:	4b 19       	sub	r20, r11
     37a:	cb 0a       	sbc	r12, r27
     37c:	59 48       	sbci	r21, 0x89	; 137
     37e:	27 c2       	rjmp	.+1102   	; 0x7ce <__EEPROM_REGION_LENGTH__+0x3ce>
     380:	91 6c       	ori	r25, 0xC1	; 193
     382:	26 1a       	sub	r2, r22
     384:	4a a6       	std	Y+42, r4	; 0x2a
     386:	65 ab       	std	Z+53, r22	; 0x35
     388:	68 28       	or	r6, r8
     38a:	9b 09       	sbc	r25, r11
     38c:	47 d2       	rcall	.+1166   	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
     38e:	89 78       	andi	r24, 0x89	; 137
     390:	00 4c       	sbci	r16, 0xC0	; 192
     392:	0b c8       	rjmp	.-4074   	; 0xfffff3aa <__eeprom_end+0xff7ef3aa>
     394:	0a 55       	subi	r16, 0x5A	; 90
     396:	88 f5       	brcc	.+98     	; 0x3fa <__trampolines_end+0x324>
     398:	cf 87       	std	Y+15, r28	; 0x0f
     39a:	83 00       	.word	0x0083	; ????
     39c:	4d 19       	sub	r20, r13
     39e:	cb 0a       	sbc	r12, r27
     3a0:	5b 4c       	sbci	r21, 0xCB	; 203
     3a2:	5d 6f       	ori	r21, 0xFD	; 253
     3a4:	87 98       	cbi	0x10, 7	; 16
     3a6:	25 16       	cp	r2, r21
     3a8:	a1 a8       	ldd	r10, Z+49	; 0x31
     3aa:	50 54       	subi	r21, 0x40	; 64
     3ac:	48 91       	.word	0x9148	; ????
     3ae:	10 69       	ori	r17, 0x90	; 144
     3b0:	44 1a       	sub	r4, r20
     3b2:	d1 62       	ori	r29, 0x21	; 33
     3b4:	02 4e       	sbci	r16, 0xE2	; 226
     3b6:	15 ca       	rjmp	.-3030   	; 0xfffff7e2 <__eeprom_end+0xff7ef7e2>
     3b8:	0a 59       	subi	r16, 0x9A	; 154
     3ba:	4c 8d       	ldd	r20, Y+28	; 0x1c
     3bc:	46 8a       	std	Z+22, r4	; 0x16
     3be:	8c 22       	and	r8, r28
     3c0:	23 89       	ldd	r18, Z+19	; 0x13
     3c2:	48 22       	and	r4, r24
     3c4:	9a 84       	ldd	r9, Y+10	; 0x0a
     3c6:	26 21       	and	r18, r6
     3c8:	ba 0e       	add	r11, r26
     3ca:	4f 14       	cp	r4, r15
     3cc:	cb 0a       	sbc	r12, r27
     3ce:	db 55       	subi	r29, 0x5B	; 91
     3d0:	6f 4b       	sbci	r22, 0xBF	; 191
     3d2:	52 c9       	rjmp	.-3420   	; 0xfffff678 <__eeprom_end+0xff7ef678>
     3d4:	b4 4e       	sbci	r27, 0xE4	; 228
     3d6:	af 4e       	sbci	r26, 0xEF	; 239
     3d8:	a4 a2       	std	Z+36, r10	; 0x24
     3da:	d9 ec       	ldi	r29, 0xC9	; 201
     3dc:	5a 03       	fmul	r21, r18
     3de:	50 10       	cpse	r5, r0
     3e0:	c9 0a       	sbc	r12, r25
     3e2:	57 9c       	mul	r5, r7
     3e4:	0e 11       	cpse	r16, r14
     3e6:	61 95       	neg	r22
     3e8:	f1 40       	sbci	r31, 0x01	; 1
     3ea:	39 c9       	rjmp	.-3470   	; 0xfffff65e <__eeprom_end+0xff7ef65e>
     3ec:	b5 03       	fmuls	r19, r21
     3ee:	51 17       	cp	r21, r17
     3f0:	db fa       	.word	0xfadb	; ????
     3f2:	da 55       	subi	r29, 0x5A	; 90
     3f4:	6f 4b       	sbci	r22, 0xBF	; 191
     3f6:	52 c9       	rjmp	.-3420   	; 0xfffff69c <__eeprom_end+0xff7ef69c>
     3f8:	b4 4e       	sbci	r27, 0xE4	; 228
     3fa:	af 85       	ldd	r26, Y+15	; 0x0f
     3fc:	24 a2       	std	Z+36, r2	; 0x24
     3fe:	d2 88       	ldd	r13, Z+18	; 0x12
     400:	76 bd       	out	0x26, r23	; 38
     402:	83 42       	sbci	r24, 0x23	; 35
     404:	00 52       	subi	r16, 0x20	; 32
     406:	19 ca       	rjmp	.-3022   	; 0xfffff83a <__eeprom_end+0xff7ef83a>
     408:	0a 59       	subi	r16, 0x9A	; 154
     40a:	1c 42       	sbci	r17, 0x2C	; 44
     40c:	07 89       	ldd	r16, Z+23	; 0x17
     40e:	54 22       	and	r5, r20
     410:	95 08       	sbc	r9, r5
     412:	27 87       	std	Z+15, r18	; 0x0f
     414:	d0 21       	and	r29, r0
     416:	24 9c       	mul	r2, r4
     418:	48 25       	eor	r20, r8
     41a:	52 89       	ldd	r21, Z+18	; 0x12
     41c:	b4 3a       	cpi	r27, 0xA4	; 164
     41e:	53 11       	cpse	r21, r3
     420:	c9 0a       	sbc	r12, r25
     422:	57 d5       	rcall	.+2734   	; 0xed2 <QR_CODE+0x131>
     424:	2e b3       	in	r18, 0x1e	; 30
     426:	aa d9       	rcall	.-3244   	; 0xfffff77c <__eeprom_end+0xff7ef77c>
     428:	5a af       	std	Y+58, r21	; 0x3a
     42a:	d6 26       	eor	r13, r22
     42c:	b7 12       	cpse	r11, r23
     42e:	00 54       	subi	r16, 0x40	; 64
     430:	19 ca       	rjmp	.-3022   	; 0xfffff864 <__eeprom_end+0xff7ef864>
     432:	08 55       	subi	r16, 0x58	; 88
     434:	3c 18       	sub	r3, r12
     436:	e5 10       	cpse	r14, r5
     438:	39 44       	sbci	r19, 0x49	; 73
     43a:	0e 91       	ld	r16, -X
     43c:	43 e4       	ldi	r20, 0x43	; 67
     43e:	10 39       	cpi	r17, 0x90	; 144
     440:	44 0e       	add	r4, r20
     442:	91 43       	sbci	r25, 0x31	; 49
     444:	e4 10       	cpse	r14, r4
     446:	21 00       	.word	0x0021	; ????
     448:	55 0d       	add	r21, r5
     44a:	ca 0a       	sbc	r12, r26
     44c:	59 88       	ldd	r5, Y+17	; 0x11
     44e:	f9 e7       	ldi	r31, 0x79	; 121
     450:	e2 e4       	ldi	r30, 0x42	; 66
     452:	10 33       	cpi	r17, 0x30	; 48
     454:	01 56       	subi	r16, 0x61	; 97
     456:	18 ca       	rjmp	.-3024   	; 0xfffff888 <__eeprom_end+0xff7ef888>
     458:	08 57       	subi	r16, 0x78	; 120
     45a:	88 c9       	rjmp	.-3312   	; 0xfffff76c <__eeprom_end+0xff7ef76c>
     45c:	12 a1       	ldd	r17, Z+34	; 0x22
     45e:	48 28       	or	r4, r8
     460:	12 ca       	rjmp	.-3036   	; 0xfffff886 <__eeprom_end+0xff7ef886>
     462:	44 42       	sbci	r20, 0x24	; 36
     464:	91 50       	subi	r25, 0x01	; 1
     466:	24 25       	eor	r18, r4
     468:	d3 e5       	ldi	r29, 0x53	; 83
     46a:	10 21       	and	r17, r0
     46c:	00 57       	subi	r16, 0x70	; 112
     46e:	1e ce       	rjmp	.-964    	; 0xac <__SREG__+0x6d>
     470:	08 5f       	subi	r16, 0xF8	; 248
     472:	08 85       	ldd	r16, Y+8	; 0x08
     474:	44 21       	and	r20, r4
     476:	51 45       	sbci	r21, 0x51	; 81
     478:	a6 24       	eor	r10, r6
     47a:	22 29       	or	r18, r2
     47c:	91 64       	ori	r25, 0x41	; 65
     47e:	92 50       	subi	r25, 0x02	; 2
     480:	44 48       	sbci	r20, 0x84	; 132
     482:	22 92       	st	-Z, r2
     484:	a8 42       	sbci	r26, 0x28	; 40
     486:	b1 50       	subi	r27, 0x01	; 1
     488:	2c 94 01 58 	jmp	0x8b002	; 0x8b002 <__TEXT_REGION_LENGTH__+0x83002>
     48c:	14 c9       	rjmp	.-3544   	; 0xfffff6b6 <__eeprom_end+0xff7ef6b6>
     48e:	0a 57       	subi	r16, 0x7A	; 122
     490:	48 6b       	ori	r20, 0xB8	; 184
     492:	13 99       	sbic	0x02, 3	; 2
     494:	8a b0       	in	r8, 0x0a	; 10
     496:	3a 9e       	mul	r3, r26
     498:	16 25       	eor	r17, r6
     49a:	32 95       	swap	r19
     49c:	59 55       	subi	r21, 0x59	; 89
     49e:	00 59       	subi	r16, 0x90	; 144
     4a0:	18 ca       	rjmp	.-3024   	; 0xfffff8d2 <__eeprom_end+0xff7ef8d2>
     4a2:	08 57       	subi	r16, 0x78	; 120
     4a4:	88 8b       	std	Y+16, r24	; 0x10
     4a6:	13 a1       	ldd	r17, Z+35	; 0x23
     4a8:	4c 24       	eor	r4, r12
     4aa:	14 49       	sbci	r17, 0x94	; 148
     4ac:	c9 74       	andi	r28, 0x49	; 73
     4ae:	39 44       	sbci	r19, 0x49	; 73
     4b0:	0e 91       	ld	r16, -X
     4b2:	43 e4       	ldi	r20, 0x43	; 67
     4b4:	10 21       	and	r17, r0
     4b6:	00 5a       	subi	r16, 0xA0	; 160
     4b8:	0f c8       	rjmp	.-4066   	; 0xfffff4d8 <__eeprom_end+0xff7ef4d8>
     4ba:	0a 55       	subi	r16, 0x5A	; 90
     4bc:	3c 48       	sbci	r19, 0x8C	; 140
     4be:	a7 aa       	std	Z+55, r10	; 0x37
     4c0:	c3 a9       	ldd	r28, Z+51	; 0x33
     4c2:	ea f4       	brpl	.+58     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
     4c4:	70 10       	cpse	r7, r0
     4c6:	5b 0b       	sbc	r21, r27
     4c8:	f4 da       	rcall	.-2584   	; 0xfffffab2 <__eeprom_end+0xff7efab2>
     4ca:	4c 1c       	adc	r4, r12
     4cc:	46 fa       	bst	r4, 6
     4ce:	4f 87       	std	Y+15, r20	; 0x0f
     4d0:	00 5c       	subi	r16, 0xC0	; 192
     4d2:	0d c4       	rjmp	.+2074   	; 0xcee <__stack+0x48f>
     4d4:	08 4b       	sbci	r16, 0xB8	; 184
     4d6:	c4 62       	ori	r28, 0x24	; 36
     4d8:	b2 34       	cpi	r27, 0x42	; 66
     4da:	59 9a       	sbi	0x0b, 1	; 11
     4dc:	2c 03       	fmul	r18, r20
     4de:	5d 0b       	sbc	r21, r29
     4e0:	f4 d8       	rcall	.-3608   	; 0xfffff6ca <__eeprom_end+0xff7ef6ca>
     4e2:	4c 1c       	adc	r4, r12
     4e4:	42 fa       	bst	r4, 2
     4e6:	4f 87       	std	Y+15, r20	; 0x0f
     4e8:	01 5e       	subi	r16, 0xE1	; 225
     4ea:	0d 78       	andi	r16, 0x8D	; 141
     4ec:	5a d5       	rcall	.+2740   	; 0xfa2 <ECG_PROMPT+0x1>
     4ee:	89 a5       	ldd	r24, Y+41	; 0x29
     4f0:	34 91       	lpm	r19, Z
     4f2:	16 21       	and	r17, r6
     4f4:	51 00       	.word	0x0051	; ????
     4f6:	5f 07       	cpc	r21, r31
     4f8:	19 d8       	rcall	.-4046   	; 0xfffff52c <__eeprom_end+0xff7ef52c>
     4fa:	52 1c       	adc	r5, r2
     4fc:	04 60       	ori	r16, 0x04	; 4
     4fe:	08 33       	cpi	r16, 0x38	; 56
     500:	ac 4d       	sbci	r26, 0xDC	; 220
     502:	84 64       	ori	r24, 0x44	; 68
     504:	01 61       	ori	r16, 0x11	; 17
     506:	11 98       	cbi	0x02, 1	; 2
     508:	0a d3       	rcall	.+1556   	; 0xb1e <__stack+0x2bf>
     50a:	94 2e       	mov	r9, r20
     50c:	32 e9       	ldi	r19, 0x92	; 146
     50e:	c8 32       	cpi	r28, 0x28	; 40
     510:	92 c8       	rjmp	.-3804   	; 0xfffff636 <__eeprom_end+0xff7ef636>
     512:	24 a7       	std	Z+44, r18	; 0x2c
     514:	c9 00       	.word	0x00c9	; ????
     516:	62 11       	cpse	r22, r2
     518:	c8 0a       	sbc	r12, r24
     51a:	55 88       	ldd	r5, Z+21	; 0x15
     51c:	b5 8c       	ldd	r11, Z+29	; 0x1d
     51e:	2e a3       	std	Y+38, r18	; 0x26
     520:	22 63       	ori	r18, 0x32	; 50
     522:	e9 30       	cpi	r30, 0x09	; 9
     524:	91 8c       	ldd	r9, Z+25	; 0x19
     526:	00 63       	ori	r16, 0x30	; 48
     528:	0e 98       	cbi	0x01, 6	; 1
     52a:	0a 53       	subi	r16, 0x3A	; 58
     52c:	d1 2c       	mov	r13, r1
     52e:	a3 b2       	in	r10, 0x13	; 19
     530:	f2 68       	ori	r31, 0x82	; 130
     532:	62 23       	and	r22, r18
     534:	01 64       	ori	r16, 0x41	; 65
     536:	0f c8       	rjmp	.-4066   	; 0xfffff556 <__eeprom_end+0xff7ef556>
     538:	0a 55       	subi	r16, 0x5A	; 90
     53a:	6b b2       	in	r6, 0x1b	; 27
     53c:	1c 46       	sbci	r17, 0x6C	; 108
     53e:	45 c6       	rjmp	.+3210   	; 0x11ca <ECG_PROMPT+0x229>
     540:	d2 e4       	ldi	r29, 0x42	; 66
     542:	34 11       	cpse	r19, r4
     544:	65 0f       	add	r22, r21
     546:	98 0a       	sbc	r9, r24
     548:	55 d1       	rcall	.+682    	; 0x7f4 <__EEPROM_REGION_LENGTH__+0x3f4>
     54a:	2c c2       	rjmp	.+1112   	; 0x9a4 <__stack+0x145>
     54c:	c3 c1       	rjmp	.+902    	; 0x8d4 <__stack+0x75>
     54e:	3c 9a       	sbi	0x07, 4	; 7
     550:	d8 48       	sbci	r29, 0x88	; 136
     552:	00 66       	ori	r16, 0x60	; 96
     554:	0d c4       	rjmp	.+2074   	; 0xd70 <__stack+0x511>
     556:	0a 4d       	sbci	r16, 0xDA	; 218
     558:	49 26       	eor	r4, r25
     55a:	92 43       	sbci	r25, 0x32	; 50
     55c:	44 a4       	ldd	r4, Z+44	; 0x2c
     55e:	2f 00       	.word	0x002f	; ????
     560:	67 13       	cpse	r22, r23
     562:	d8 ca       	rjmp	.-2640   	; 0xfffffb14 <__eeprom_end+0xff7efb14>
     564:	54 4d       	sbci	r21, 0xD4	; 212
     566:	24 87       	std	Z+12, r18	; 0x0c
     568:	51 91       	ld	r21, Z+
     56a:	b1 34       	cpi	r27, 0x41	; 65
     56c:	39 4d       	sbci	r19, 0xD9	; 217
     56e:	c4 a5       	ldd	r28, Z+44	; 0x2c
     570:	89 8d       	ldd	r24, Y+25	; 0x19
     572:	04 68       	ori	r16, 0x84	; 132
     574:	0d c8       	rjmp	.-4070   	; 0xfffff590 <__eeprom_end+0xff7ef590>
     576:	0a 55       	subi	r16, 0x5A	; 90
     578:	88 b5       	in	r24, 0x28	; 40
     57a:	50 0e       	add	r5, r16
     57c:	34 22       	and	r3, r20
     57e:	1f 05       	cpc	r17, r15
     580:	69 09       	sbc	r22, r9
     582:	c2 0a       	sbc	r12, r18
     584:	49 90       	ld	r4, Y+
     586:	0e 07       	cpc	r16, r30
     588:	02 6a       	ori	r16, 0xA2	; 162
     58a:	0b 03       	fmul	r16, r19
     58c:	cb ca       	rjmp	.-2666   	; 0xfffffb24 <__eeprom_end+0xff7efb24>
     58e:	28 4a       	sbci	r18, 0xA8	; 168
     590:	f4 2f       	mov	r31, r20
     592:	17 00       	.word	0x0017	; ????
     594:	6b 14       	cp	r6, r11
     596:	c8 0a       	sbc	r12, r24
     598:	53 88       	ldd	r5, Z+19	; 0x13
     59a:	b5 95       	asr	r27
     59c:	26 92       	lac	Z, r2
     59e:	51 cd       	rjmp	.-1374   	; 0x42 <__SREG__+0x3>
     5a0:	34 11       	cpse	r19, r4
     5a2:	89 26       	eor	r8, r25
     5a4:	32 89       	ldd	r19, Z+18	; 0x12
     5a6:	6c 00       	.word	0x006c	; ????
     5a8:	6c 07       	cpc	r22, r28
     5aa:	c2 0a       	sbc	r12, r18
     5ac:	49 7c       	andi	r20, 0xC9	; 201
     5ae:	18 6d       	ori	r17, 0xD8	; 216
     5b0:	16 9c       	mul	r1, r6
     5b2:	0a 5d       	subi	r16, 0xDA	; 218
     5b4:	48 28       	or	r4, r8
     5b6:	93 c3       	rjmp	.+1830   	; 0xcde <__stack+0x47f>
     5b8:	21 34       	cpi	r18, 0x41	; 65
     5ba:	a2 c9       	rjmp	.-3260   	; 0xfffff900 <__eeprom_end+0xff7ef900>
     5bc:	68 32       	cpi	r22, 0x28	; 40
     5be:	9a 8c       	ldd	r9, Y+26	; 0x1a
     5c0:	26 a3       	std	Z+38, r18	; 0x26
     5c2:	c9 68       	ori	r28, 0x89	; 137
     5c4:	0a 6e       	ori	r16, 0xEA	; 234
     5c6:	0c 98       	cbi	0x01, 4	; 1
     5c8:	0a 55       	subi	r16, 0x5A	; 90
     5ca:	48 28       	or	r4, r8
     5cc:	07 1a       	sub	r0, r23
     5ce:	91 8f       	std	Z+25, r25	; 0x19
     5d0:	02 6f       	ori	r16, 0xF2	; 242
     5d2:	0e 98       	cbi	0x01, 6	; 1
     5d4:	0a 55       	subi	r16, 0x5A	; 90
     5d6:	d1 2c       	mov	r13, r1
     5d8:	a3 22       	and	r10, r19
     5da:	63 69       	ori	r22, 0x93	; 147
     5dc:	62 23       	and	r22, r18
     5de:	01 70       	andi	r16, 0x01	; 1
     5e0:	12 d8       	rcall	.-4060   	; 0xfffff606 <__eeprom_end+0xff7ef606>
     5e2:	ca 54       	subi	r28, 0x4A	; 74
     5e4:	48 46       	sbci	r20, 0x68	; 104
     5e6:	97 51       	subi	r25, 0x17	; 23
     5e8:	91 b1       	in	r25, 0x01	; 1
     5ea:	74 98       	cbi	0x0e, 4	; 14
     5ec:	48 46       	sbci	r20, 0x68	; 104
     5ee:	62 cd       	rjmp	.-1340   	; 0xb4 <__SREG__+0x75>
     5f0:	00 71       	andi	r16, 0x10	; 16
     5f2:	10 d8       	rcall	.-4064   	; 0xfffff614 <__eeprom_end+0xff7ef614>
     5f4:	ca 54       	subi	r28, 0x4A	; 74
     5f6:	4d 24       	eor	r4, r13
     5f8:	87 51       	subi	r24, 0x17	; 23
     5fa:	91 b1       	in	r25, 0x01	; 1
     5fc:	34 39       	cpi	r19, 0x94	; 148
     5fe:	4d c4       	rjmp	.+2202   	; 0xe9a <QR_CODE+0xf9>
     600:	3a 72       	andi	r19, 0x2A	; 42
     602:	0b 95       	.word	0x950b	; ????
     604:	0a 4d       	sbci	r16, 0xDA	; 218
     606:	48 0e       	add	r4, r24
     608:	23 99       	sbic	0x04, 3	; 4
     60a:	de 00       	.word	0x00de	; ????
     60c:	73 0e       	add	r7, r19
     60e:	97 0a       	sbc	r9, r23
     610:	d3 54       	subi	r29, 0x43	; 67
     612:	0e 32       	cpi	r16, 0x2E	; 46
     614:	63 b5       	in	r22, 0x23	; 35
     616:	76 90       	elpm	r7, Z
     618:	54 00       	.word	0x0054	; ????
     61a:	74 0d       	add	r23, r4
     61c:	b4 0a       	sbc	r11, r20
     61e:	cd 88       	ldd	r12, Y+21	; 0x15
     620:	24 87       	std	Z+12, r18	; 0x0c
     622:	88 48       	sbci	r24, 0x88	; 136
     624:	a7 91       	elpm	r26, Z+
     626:	00 75       	andi	r16, 0x50	; 80
     628:	0b 98       	cbi	0x01, 3	; 1
     62a:	0a 55       	subi	r16, 0x5A	; 90
     62c:	08 f9       	.word	0xf908	; ????
     62e:	ed 40       	sbci	r30, 0x0D	; 13
     630:	a1 08       	sbc	r10, r1
     632:	76 0f       	add	r23, r22
     634:	98 08       	sbc	r9, r8
     636:	53 08       	sbc	r5, r3
     638:	89 12       	cpse	r8, r25
     63a:	91 de       	rcall	.-734    	; 0x35e <__trampolines_end+0x288>
     63c:	88 54       	subi	r24, 0x48	; 72
     63e:	b1 0c       	add	r11, r1
     640:	00 77       	andi	r16, 0x70	; 112
     642:	15 9c       	mul	r1, r5
     644:	08 5b       	subi	r16, 0xB8	; 184
     646:	c8 64       	ori	r28, 0x48	; 72
     648:	34 15       	cp	r19, r4
     64a:	91 be       	out	0x31, r9	; 49
     64c:	50 64       	ori	r21, 0x40	; 64
     64e:	87 e0       	ldi	r24, 0x07	; 7
     650:	68 2a       	or	r6, r24
     652:	12 8b       	std	Z+18, r17	; 0x12
     654:	64 00       	.word	0x0064	; ????
     656:	78 0f       	add	r23, r24
     658:	97 0a       	sbc	r9, r23
     65a:	53 c8       	rjmp	.-3930   	; 0xfffff702 <__eeprom_end+0xff7ef702>
     65c:	68 12       	cpse	r6, r24
     65e:	a5 da       	rcall	.-2742   	; 0xfffffbaa <__eeprom_end+0xff7efbaa>
     660:	ac 24       	eor	r10, r12
     662:	51 a3       	std	Z+33, r21	; 0x21
     664:	09 79       	andi	r16, 0x99	; 153
     666:	15 d8       	rcall	.-4054   	; 0xfffff692 <__eeprom_end+0xff7ef692>
     668:	c8 52       	subi	r28, 0x28	; 40
     66a:	08 89       	ldd	r16, Y+16	; 0x10
     66c:	12 99       	sbic	0x02, 2	; 2
     66e:	44 24       	eor	r4, r4
     670:	93 c8       	rjmp	.-3802   	; 0xfffff798 <__eeprom_end+0xff7ef798>
     672:	24 32       	cpi	r18, 0x24	; 36
     674:	ea 54       	subi	r30, 0x4A	; 74
     676:	ac 38       	cpi	r26, 0x8C	; 140
     678:	95 02       	muls	r25, r21
     67a:	7a 0c       	add	r7, r10
     67c:	97 08       	sbc	r9, r7
     67e:	51 3c       	cpi	r21, 0xC1	; 193
     680:	ce 86       	std	Y+14, r12	; 0x0e
     682:	c2 d9       	rcall	.-3196   	; 0xfffffa08 <__eeprom_end+0xff7efa08>
     684:	ec 70       	andi	r30, 0x0C	; 12
     686:	7b 0e       	add	r7, r27
     688:	f4 da       	rcall	.-2584   	; 0xfffffc72 <__eeprom_end+0xff7efc72>
     68a:	4c 49       	sbci	r20, 0x9C	; 156
     68c:	26 22       	and	r2, r22
     68e:	5d 64       	ori	r21, 0x4D	; 77
     690:	22 9d       	mul	r18, r2
     692:	46 02       	muls	r20, r22
     694:	7c 07       	cpc	r23, r28
     696:	01 cb       	rjmp	.-2558   	; 0xfffffc9a <__eeprom_end+0xff7efc9a>
     698:	48 3c       	cpi	r20, 0xC8	; 200
     69a:	08 7d       	andi	r16, 0xD8	; 216
     69c:	0e f4       	brtc	.+2      	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
     69e:	da 4c       	sbci	r29, 0xCA	; 202
     6a0:	88 46       	sbci	r24, 0x68	; 104
     6a2:	7a 93       	st	-Y, r23
     6a4:	88 74       	andi	r24, 0x48	; 72
     6a6:	99 88       	ldd	r9, Y+17	; 0x11
     6a8:	00 7e       	andi	r16, 0xE0	; 224
     6aa:	0a 38       	cpi	r16, 0x8A	; 138
     6ac:	3a d5       	rcall	.+2676   	; 0x1122 <ECG_PROMPT+0x181>
     6ae:	cc 44       	sbci	r28, 0x4C	; 76
     6b0:	6a 13       	cpse	r22, r26
     6b2:	00 a0       	ldd	r0, Z+32	; 0x20
     6b4:	05 00       	.word	0x0005	; ????
     6b6:	18 4b       	sbci	r17, 0xB8	; 184
     6b8:	a1 0a       	sbc	r10, r17
     6ba:	c2 da       	rcall	.-2684   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
     6bc:	4c d0       	rcall	.+152    	; 0x756 <__EEPROM_REGION_LENGTH__+0x356>
     6be:	22 91       	ld	r18, -Z
     6c0:	83 01       	movw	r16, r6
     6c2:	a2 13       	cpse	r26, r18
     6c4:	b8 f8       	.word	0xf8b8	; ????
     6c6:	d2 06       	cpc	r13, r18
     6c8:	69 96       	adiw	r28, 0x19	; 25
     6ca:	89 29       	or	r24, r9
     6cc:	26 91       	elpm	r18, Z
     6ce:	49 82       	std	Y+1, r4	; 0x01
     6d0:	94 89       	ldd	r25, Z+20	; 0x14
     6d2:	8d 18       	sub	r8, r13
     6d4:	05 a3       	std	Z+37, r16	; 0x25
     6d6:	12 c8       	rjmp	.-4060   	; 0xfffff6fc <__eeprom_end+0xff7ef6fc>
     6d8:	08 d3       	rcall	.+1552   	; 0xcea <__stack+0x48b>
     6da:	0d 4b       	sbci	r16, 0xBD	; 189
     6dc:	32 89       	ldd	r19, Z+18	; 0x12
     6de:	4c 22       	and	r4, r28
     6e0:	97 16       	cp	r9, r23
     6e2:	c5 e2       	ldi	r28, 0x25	; 37
     6e4:	f0 e1       	ldi	r31, 0x10	; 16
     6e6:	10 a4       	ldd	r1, Z+40	; 0x28
     6e8:	0f 77       	andi	r16, 0x7F	; 127
     6ea:	2a 53       	subi	r18, 0x3A	; 58
     6ec:	44 26       	eor	r4, r20
     6ee:	91 8a       	std	Z+17, r9	; 0x11
     6f0:	8c 4d       	sbci	r24, 0xDC	; 220
     6f2:	52 89       	ldd	r21, Z+18	; 0x12
     6f4:	4c 02       	muls	r20, r28
     6f6:	a5 11       	cpse	r26, r5
     6f8:	c8 08       	sbc	r12, r8
     6fa:	53 08       	sbc	r5, r3
     6fc:	89 12       	cpse	r8, r25
     6fe:	91 36       	cpi	r25, 0x61	; 97
     700:	aa d0       	rcall	.+340    	; 0x856 <__DATA_REGION_LENGTH__+0x56>
     702:	28 34       	cpi	r18, 0x48	; 72
     704:	8a d5       	rcall	.+2836   	; 0x121a <ECG_PROMPT+0x279>
     706:	00 a6       	std	Z+40, r0	; 0x28
     708:	07 01       	movw	r0, r14
     70a:	cd 4a       	sbci	r28, 0xAD	; 173
     70c:	9c 0e       	add	r9, r28
     70e:	a7 14       	cp	r10, r7
     710:	f8 d8       	rcall	.-3600   	; 0xfffff902 <__eeprom_end+0xff7ef902>
     712:	52 d1       	rcall	.+676    	; 0x9b8 <__stack+0x159>
     714:	4c 9a       	sbi	0x09, 4	; 9
     716:	89 16       	cp	r8, r25
     718:	59 d1       	rcall	.+690    	; 0x9cc <__stack+0x16d>
     71a:	24 31       	cpi	r18, 0x14	; 20
     71c:	92 45       	sbci	r25, 0x52	; 82
     71e:	4a 36       	cpi	r20, 0x6A	; 106
     720:	12 00       	.word	0x0012	; ????
     722:	a8 08       	sbc	r10, r8
     724:	25 a8       	ldd	r2, Z+53	; 0x35
     726:	4d 48       	sbci	r20, 0x8D	; 141
     728:	28 02       	muls	r18, r24
     72a:	a9 1d       	adc	r26, r9
     72c:	cc 08       	sbc	r12, r12
     72e:	59 92       	st	Y+, r5
     730:	47 33       	cpi	r20, 0x37	; 55
     732:	b1 28       	or	r11, r1
     734:	44 8a       	std	Z+20, r4	; 0x14
     736:	28 49       	sbci	r18, 0x98	; 152
     738:	46 71       	andi	r20, 0x16	; 22
     73a:	51 7c       	andi	r21, 0xC1	; 193
     73c:	22 92       	st	-Z, r2
     73e:	48 42       	sbci	r20, 0x28	; 40
     740:	a4 90       	lpm	r10, Z
     742:	3c 36       	cpi	r19, 0x6C	; 108
     744:	1a 13       	cpse	r17, r26
     746:	01 aa       	std	Z+49, r0	; 0x31
     748:	0c 75       	andi	r16, 0x5C	; 92
     74a:	5a cd       	rjmp	.-1356   	; 0x200 <__trampolines_end+0x12a>
     74c:	88 92       	.word	0x9288	; ????
     74e:	26 a1       	ldd	r18, Z+38	; 0x26
     750:	10 b5       	in	r17, 0x20	; 32
     752:	00 ab       	std	Z+48, r16	; 0x30
     754:	0e 68       	ori	r16, 0x8E	; 142
     756:	28 53       	subi	r18, 0x38	; 56
     758:	a9 88       	ldd	r10, Y+17	; 0x11
     75a:	24 22       	and	r2, r20
     75c:	6d 22       	and	r6, r29
     75e:	99 48       	sbci	r25, 0x89	; 137
     760:	00 ac       	ldd	r0, Z+56	; 0x38
     762:	08 58       	subi	r16, 0x88	; 136
     764:	28 55       	subi	r18, 0x58	; 88
     766:	3c 88       	ldd	r3, Y+20	; 0x14
     768:	35 ad       	ldd	r19, Z+61	; 0x3d
     76a:	07 24       	eor	r0, r7
     76c:	38 4b       	sbci	r19, 0xB8	; 184
     76e:	1c 02       	muls	r17, r28
     770:	ae 1c       	adc	r10, r14
     772:	cc 08       	sbc	r12, r12
     774:	59 92       	st	Y+, r5
     776:	47 33       	cpi	r20, 0x37	; 55
     778:	b1 28       	or	r11, r1
     77a:	52 8a       	std	Z+18, r5	; 0x12
     77c:	28 49       	sbci	r18, 0x98	; 152
     77e:	46 9a       	sbi	0x08, 6	; 8
     780:	88 13       	cpse	r24, r24
     782:	25 49       	sbci	r18, 0x95	; 149
     784:	44 29       	or	r20, r4
     786:	24 96       	adiw	r28, 0x04	; 4
     788:	8d c6       	rjmp	.+3354   	; 0x14a4 <OXYMETER_PROMPT+0x103>
     78a:	44 00       	.word	0x0044	; ????
     78c:	af 06       	cpc	r10, r31
     78e:	15 a8       	ldd	r1, Z+53	; 0x35
     790:	4d 14       	cp	r4, r13
     792:	b0 0b       	sbc	r27, r16
     794:	54 7a       	andi	r21, 0xA4	; 164
     796:	cf 48       	sbci	r28, 0x8F	; 143
     798:	42 4a       	sbci	r20, 0xA2	; 162
     79a:	11 09       	sbc	r17, r1
     79c:	00 b1       	in	r16, 0x00	; 0
     79e:	0f b8       	out	0x0f, r0	; 15
     7a0:	0a d5       	rcall	.+2580   	; 0x11b6 <ECG_PROMPT+0x215>
     7a2:	89 d5       	rcall	.+2834   	; 0x12b6 <ECG_PROMPT+0x315>
     7a4:	0e 07       	cpc	r16, r30
     7a6:	99 58       	subi	r25, 0x89	; 137
     7a8:	1d 78       	andi	r17, 0x8D	; 141
     7aa:	38 08       	sbc	r3, r8
     7ac:	b2 0c       	add	r11, r2
     7ae:	75 58       	subi	r23, 0x85	; 133
     7b0:	cd 4c       	sbci	r28, 0xCD	; 205
     7b2:	24 14       	cp	r2, r4
     7b4:	91 d2       	rcall	.+1314   	; 0xcd8 <__stack+0x479>
     7b6:	61 00       	.word	0x0061	; ????
     7b8:	b3 0c       	add	r11, r3
     7ba:	75 58       	subi	r23, 0x85	; 133
     7bc:	cd 4c       	sbci	r28, 0xCD	; 205
     7be:	d4 44       	sbci	r29, 0x44	; 68
     7c0:	42 8a       	std	Z+18, r4	; 0x12
     7c2:	64 02       	muls	r22, r20
     7c4:	b4 08       	sbc	r11, r4
     7c6:	33 aa       	std	Z+51, r3	; 0x33
     7c8:	4d 45       	sbci	r20, 0x5D	; 93
     7ca:	46 00       	.word	0x0046	; ????
     7cc:	b5 0d       	add	r27, r5
     7ce:	c8 da       	rcall	.-2672   	; 0xfffffd60 <__eeprom_end+0xff7efd60>
     7d0:	54 08       	sbc	r5, r4
     7d2:	f9 ed       	ldi	r31, 0xD9	; 217
     7d4:	70 90 90 95 	lds	r7, 0x9590	; 0x809590 <__bss_end+0x8f60>
     7d8:	01 b6       	in	r0, 0x31	; 49
     7da:	20 f8       	bld	r2, 0
     7dc:	d8 d2       	rcall	.+1456   	; 0xd8e <__stack+0x52f>
     7de:	1c 48       	sbci	r17, 0x8C	; 140
     7e0:	11 52       	subi	r17, 0x21	; 33
     7e2:	84 14       	cp	r8, r4
     7e4:	21 45       	sbci	r18, 0x51	; 81
     7e6:	48 a1       	ldd	r20, Y+32	; 0x20
     7e8:	51 30       	cpi	r21, 0x01	; 1
     7ea:	14 0c       	add	r1, r4
     7ec:	05 43       	sbci	r16, 0x35	; 53
     7ee:	c1 50       	subi	r28, 0x01	; 1
     7f0:	30 14       	cp	r3, r0
     7f2:	0c 05       	cpc	r16, r12
     7f4:	43 c1       	rjmp	.+646    	; 0xa7c <__stack+0x21d>
     7f6:	50 04       	cpc	r5, r0
     7f8:	00 b7       	in	r16, 0x30	; 48
     7fa:	06 22       	and	r0, r22
     7fc:	4a 4b       	sbci	r20, 0xBA	; 186
     7fe:	10 b8       	out	0x00, r1	; 0
     800:	0b 45       	sbci	r16, 0x5B	; 91
     802:	c8 4c       	sbci	r28, 0xC8	; 200
     804:	05 25       	eor	r16, r5
     806:	21 c9       	rjmp	.-3518   	; 0xfffffa4a <__eeprom_end+0xff7efa4a>
     808:	04 00       	.word	0x0004	; ????
     80a:	b9 08       	sbc	r11, r9
     80c:	74 5a       	subi	r23, 0xA4	; 164
     80e:	4d 1d       	adc	r20, r13
     810:	46 3a       	cpi	r20, 0xA6	; 166
     812:	ba 0b       	sbc	r27, r26
     814:	75 58       	subi	r23, 0x85	; 133
     816:	cd 4c       	sbci	r28, 0xCD	; 205
     818:	24 b3       	in	r18, 0x14	; 20
     81a:	89 64       	ori	r24, 0x49	; 73
     81c:	5c bb       	out	0x1c, r21	; 28
     81e:	0f 68       	ori	r16, 0x8F	; 143
     820:	2a 53       	subi	r18, 0x3A	; 58
     822:	88 64       	ori	r24, 0x48	; 72
     824:	22 99       	sbic	0x04, 2	; 4
     826:	48 8b       	std	Y+16, r20	; 0x10
     828:	48 22       	and	r4, r24
     82a:	12 01       	movw	r2, r4
     82c:	bc 1e       	adc	r11, r28
     82e:	cd 0a       	sbc	r12, r29
     830:	5d 09       	sbc	r21, r13
     832:	65 c4       	rjmp	.+2250   	; 0x10fe <ECG_PROMPT+0x15d>
     834:	20 4d       	sbci	r18, 0xD0	; 208
     836:	2c 8b       	std	Y+20, r18	; 0x14
     838:	8b d4       	rcall	.+2326   	; 0x1150 <ECG_PROMPT+0x1af>
     83a:	44 a1       	ldd	r20, Z+36	; 0x24
     83c:	99 44       	sbci	r25, 0x49	; 73
     83e:	42 0e       	add	r4, r18
     840:	45 a4       	ldd	r4, Z+45	; 0x2d
     842:	12 d5       	rcall	.+2596   	; 0x1268 <ECG_PROMPT+0x2c7>
     844:	90 4d       	sbci	r25, 0xD0	; 208
     846:	2a 0c       	add	r2, r10
     848:	4b 00       	.word	0x004b	; ????
     84a:	bd 1c       	adc	r11, r13
     84c:	cc 08       	sbc	r12, r12
     84e:	5d 09       	sbc	r21, r13
     850:	63 34       	cpi	r22, 0x43	; 67
     852:	19 2d       	mov	r17, r9
     854:	2c 12       	cpse	r2, r28
     856:	8b e2       	ldi	r24, 0x2B	; 43
     858:	12 c9       	rjmp	.-3548   	; 0xfffffa7e <__eeprom_end+0xff7efa7e>
     85a:	4c 12       	cpse	r4, r28
     85c:	51 94       	neg	r5
     85e:	28 06       	cpc	r2, r24
     860:	d5 a4       	ldd	r13, Z+45	; 0x2d
     862:	b1 92       	st	Z+, r11
     864:	ac 00       	.word	0x00ac	; ????
     866:	be 1f       	adc	r27, r30
     868:	cd 08       	sbc	r12, r13
     86a:	dd 4c       	sbci	r29, 0xCD	; 205
     86c:	63 12       	cpse	r6, r19
     86e:	99 58       	subi	r25, 0x89	; 137
     870:	16 96       	adiw	r26, 0x06	; 6
     872:	c9 45       	sbci	r28, 0x59	; 89
     874:	21 89       	ldd	r18, Z+17	; 0x11
     876:	96 d1       	rcall	.+812    	; 0xba4 <__stack+0x345>
     878:	28 42       	sbci	r18, 0x28	; 40
     87a:	96 44       	sbci	r25, 0x46	; 70
     87c:	c4 11       	cpse	r28, r4
     87e:	55 89       	ldd	r21, Z+21	; 0x15
     880:	31 2a       	or	r3, r17
     882:	94 4a       	sbci	r25, 0xA4	; 164
     884:	00 bf       	out	0x30, r16	; 48
     886:	11 c7       	rjmp	.+3618   	; 0x16aa <OXYMETER_PROMPT+0x309>
     888:	da 54       	subi	r29, 0x4A	; 74
     88a:	49 e5       	ldi	r20, 0x59	; 89
     88c:	50 45       	sbci	r21, 0x50	; 80
     88e:	e1 50       	subi	r30, 0x01	; 1
     890:	2a a3       	std	Y+34, r18	; 0x22
     892:	1d 24       	eor	r1, r13
     894:	15 00       	.word	0x0015	; ????
     896:	c0 1b       	sub	r28, r16
     898:	0b 09       	sbc	r16, r11
     89a:	d9 c5       	rjmp	.+2994   	; 0x144e <OXYMETER_PROMPT+0xad>
     89c:	61 72       	andi	r22, 0x21	; 33
     89e:	60 1c       	adc	r6, r0
     8a0:	79 0e       	add	r7, r25
     8a2:	99 97       	sbiw	r26, 0x29	; 41
     8a4:	25 d2       	rcall	.+1098   	; 0xcf0 <__stack+0x491>
     8a6:	c9 50       	subi	r28, 0x09	; 9
     8a8:	26 5b       	subi	r18, 0xB6	; 182
     8aa:	92 8a       	std	Z+18, r9	; 0x12
     8ac:	0e 92       	st	-X, r0
     8ae:	83 9d       	mul	r24, r3
     8b0:	2e c1       	rjmp	.+604    	; 0xb0e <__stack+0x2af>
     8b2:	1b 0b       	sbc	r17, r27
     8b4:	09 59       	subi	r16, 0x99	; 153
     8b6:	c7 41       	sbci	r28, 0x17	; 23
     8b8:	72 48       	sbci	r23, 0x82	; 130
     8ba:	1c 7d       	andi	r17, 0xDC	; 220
     8bc:	0e 99       	sbic	0x01, 6	; 1
     8be:	97 25       	eor	r25, r7
     8c0:	d2 c9       	rjmp	.-3164   	; 0xfffffc66 <__eeprom_end+0xff7efc66>
     8c2:	50 26       	eor	r5, r16
     8c4:	5b 92       	.word	0x925b	; ????
     8c6:	8a 0e       	add	r8, r26
     8c8:	92 83       	std	Z+2, r25	; 0x02
     8ca:	9d 2e       	mov	r9, r29
     8cc:	c2 1b       	sub	r28, r18
     8ce:	0b 09       	sbc	r16, r11
     8d0:	d9 c6       	rjmp	.+3506   	; 0x1684 <OXYMETER_PROMPT+0x2e3>
     8d2:	41 f3       	breq	.-48     	; 0x8a4 <__stack+0x45>
     8d4:	58 1c       	adc	r5, r8
     8d6:	71 0e       	add	r7, r17
     8d8:	99 97       	sbiw	r26, 0x29	; 41
     8da:	25 d2       	rcall	.+1098   	; 0xd26 <__stack+0x4c7>
     8dc:	c9 50       	subi	r28, 0x09	; 9
     8de:	26 5b       	subi	r18, 0xB6	; 182
     8e0:	92 8a       	std	Z+18, r9	; 0x12
     8e2:	0e 92       	st	-X, r0
     8e4:	83 9d       	mul	r24, r3
     8e6:	2e c3       	rjmp	.+1628   	; 0xf44 <QR_CODE+0x1a3>
     8e8:	1b fb       	.word	0xfb1b	; ????
     8ea:	08 59       	subi	r16, 0x98	; 152
     8ec:	4e a2       	std	Y+38, r4	; 0x26
     8ee:	91 39       	cpi	r25, 0x91	; 145
     8f0:	e2 1c       	adc	r14, r2
     8f2:	32 2f       	mov	r19, r18
     8f4:	4b a4       	ldd	r4, Y+43	; 0x2b
     8f6:	93 a1       	ldd	r25, Z+35	; 0x23
     8f8:	4c b6       	in	r4, 0x3c	; 60
     8fa:	24 15       	cp	r18, r4
     8fc:	1d 24       	eor	r1, r13
     8fe:	07 3b       	cpi	r16, 0xB7	; 183
     900:	5d 00       	.word	0x005d	; ????
     902:	c4 1b       	sub	r28, r20
     904:	fb 08       	sbc	r15, r11
     906:	59 c9       	rjmp	.-3406   	; 0xfffffbba <__eeprom_end+0xff7efbba>
     908:	84 32       	cpi	r24, 0x24	; 36
     90a:	39 da       	rcall	.-2958   	; 0xfffffd7e <__eeprom_end+0xff7efd7e>
     90c:	1c 32       	cpi	r17, 0x2C	; 44
     90e:	2f 4b       	sbci	r18, 0xBF	; 191
     910:	a4 93       	xch	Z, r26
     912:	a1 4c       	sbci	r26, 0xC1	; 193
     914:	b6 24       	eor	r11, r6
     916:	15 1d       	adc	r17, r5
     918:	24 07       	cpc	r18, r20
     91a:	3b 5d       	subi	r19, 0xDB	; 219
     91c:	00 c5       	rjmp	.+2560   	; 0x131e <ECG_PROMPT+0x37d>
     91e:	1e 0b       	sbc	r17, r30
     920:	09 59       	subi	r16, 0x99	; 153
     922:	ca 21       	and	r28, r10
     924:	a1 78       	andi	r26, 0x81	; 129
     926:	28 0e       	add	r2, r24
     928:	91 83       	std	Z+1, r25	; 0x01
     92a:	e6 90       	elpm	r14, Z
     92c:	79 59       	subi	r23, 0x99	; 153
     92e:	22 9d       	mul	r18, r2
     930:	0c 65       	ori	r16, 0x5C	; 92
     932:	b2 25       	eor	r27, r2
     934:	a9 e8       	ldi	r26, 0x89	; 137
     936:	20 39       	cpi	r18, 0x90	; 144
     938:	d8 e9       	ldi	r29, 0x98	; 152
     93a:	02 c6       	rjmp	.+3076   	; 0x1540 <OXYMETER_PROMPT+0x19f>
     93c:	1c ce       	rjmp	.-968    	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
     93e:	08 df       	rcall	.-496    	; 0x750 <__EEPROM_REGION_LENGTH__+0x350>
     940:	1d 68       	ori	r17, 0x8D	; 141
     942:	07 9a       	sbi	0x00, 7	; 0
     944:	44 0e       	add	r4, r20
     946:	11 c9       	rjmp	.-3550   	; 0xfffffb6a <__eeprom_end+0xff7efb6a>
     948:	21 22       	and	r2, r17
     94a:	39 44       	sbci	r19, 0x49	; 73
     94c:	74 92       	xch	Z, r7
     94e:	9d ee       	ldi	r25, 0xED	; 237
     950:	67 a1       	ldd	r22, Z+39	; 0x27
     952:	58 78       	andi	r21, 0x88	; 136
     954:	18 1e       	adc	r1, r24
     956:	02 c7       	rjmp	.+3588   	; 0x175c <OXYMETER_PROMPT+0x3bb>
     958:	1b 0a       	sbc	r1, r27
     95a:	cb d8       	rcall	.-3690   	; 0xfffffaf2 <__eeprom_end+0xff7efaf2>
     95c:	15 4f       	sbci	r17, 0xF5	; 245
     95e:	b3 89       	ldd	r27, Z+19	; 0x13
     960:	b4 2e       	mov	r11, r20
     962:	87 c8       	rjmp	.-3826   	; 0xfffffa72 <__eeprom_end+0xff7efa72>
     964:	21 73       	andi	r18, 0x31	; 49
     966:	88 54       	subi	r24, 0x48	; 72
     968:	32 1b       	sub	r19, r18
     96a:	1d eb       	ldi	r17, 0xBD	; 189
     96c:	71 90       	ld	r7, Z+
     96e:	38 24       	eor	r3, r8
     970:	9e 01       	movw	r18, r28
     972:	c8 14       	cp	r12, r8
     974:	08 0b       	sbc	r16, r24
     976:	55 c5       	rjmp	.+2730   	; 0x1422 <OXYMETER_PROMPT+0x81>
     978:	e5 90       	lpm	r14, Z+
     97a:	38 f0       	brcs	.+14     	; 0x98a <__stack+0x12b>
     97c:	70 20       	and	r7, r0
     97e:	2b 5f       	subi	r18, 0xFB	; 251
     980:	2e 62       	ori	r18, 0x2E	; 46
     982:	e5 c3       	rjmp	.+1994   	; 0x114e <ECG_PROMPT+0x1ad>
     984:	41 00       	.word	0x0041	; ????
     986:	c9 13       	cpse	r28, r25
     988:	08 0b       	sbc	r16, r24
     98a:	d5 86       	std	Z+13, r13	; 0x0d
     98c:	a5 71       	andi	r26, 0x15	; 21
     98e:	e8 e1       	ldi	r30, 0x18	; 24
     990:	40 56       	subi	r20, 0x60	; 96
     992:	be 5c       	subi	r27, 0xCE	; 206
     994:	c4 ca       	rjmp	.-2680   	; 0xffffff1e <__eeprom_end+0xff7eff1e>
     996:	87 83       	std	Z+7, r24	; 0x07
     998:	00 ca       	rjmp	.-3072   	; 0xfffffd9a <__eeprom_end+0xff7efd9a>
     99a:	14 08       	sbc	r1, r4
     99c:	0b 55       	subi	r16, 0x5B	; 91
     99e:	86 87       	std	Z+14, r24	; 0x0e
     9a0:	b1 38       	cpi	r27, 0x81	; 129
     9a2:	e8 70       	andi	r30, 0x08	; 8
     9a4:	20 2b       	or	r18, r16
     9a6:	5f 2e       	mov	r5, r31
     9a8:	62 e5       	ldi	r22, 0x52	; 82
     9aa:	c3 41       	sbci	r28, 0x13	; 19
     9ac:	00 cb       	rjmp	.-2560   	; 0xffffffae <__eeprom_end+0xff7effae>
     9ae:	12 f8       	bld	r1, 2
     9b0:	0a d5       	rcall	.+2580   	; 0x13c6 <OXYMETER_PROMPT+0x25>
     9b2:	88 b4       	in	r8, 0x28	; 40
     9b4:	83 0e       	add	r8, r19
     9b6:	07 b2       	in	r0, 0x17	; 23
     9b8:	f2 e5       	ldi	r31, 0x52	; 82
     9ba:	22 56       	subi	r18, 0x62	; 98
     9bc:	3e 1c       	adc	r3, r14
     9be:	04 cc       	rjmp	.-2040   	; 0x1c8 <__trampolines_end+0xf2>
     9c0:	0b 03       	fmul	r16, r19
     9c2:	09 49       	sbci	r16, 0x99	; 153
     9c4:	84 64       	ori	r24, 0x44	; 68
     9c6:	41 89       	ldd	r20, Z+17	; 0x11
     9c8:	fe 07       	cpc	r31, r30
     9ca:	cd 0b       	sbc	r28, r29
     9cc:	03 0b       	sbc	r16, r19
     9ce:	49 45       	sbci	r20, 0x59	; 89
     9d0:	a6 12       	cpse	r10, r22
     9d2:	fd 2f       	mov	r31, r29
     9d4:	00 ce       	rjmp	.-1024   	; 0x5d6 <__EEPROM_REGION_LENGTH__+0x1d6>
     9d6:	0d 05       	cpc	r16, r13
     9d8:	09 49       	sbci	r16, 0x99	; 153
     9da:	c5 26       	eor	r12, r21
     9dc:	b1 b0       	in	r11, 0x01	; 1
     9de:	4c ff       	.word	0xff4c	; ????
     9e0:	13 00       	.word	0x0013	; ????
     9e2:	cf 0d       	add	r28, r15
     9e4:	f6 06       	cpc	r15, r22
     9e6:	49 88       	ldd	r4, Y+17	; 0x11
     9e8:	48 72       	andi	r20, 0x28	; 40
     9ea:	88 50       	subi	r24, 0x08	; 8
     9ec:	ff 13       	cpse	r31, r31
     9ee:	00 d0       	rcall	.+0      	; 0x9f0 <__stack+0x191>
     9f0:	19 cc       	rjmp	.-1998   	; 0x224 <__trampolines_end+0x14e>
     9f2:	08 59       	subi	r16, 0x98	; 152
     9f4:	99 0f       	add	r25, r25
     9f6:	41 e1       	ldi	r20, 0x11	; 17
     9f8:	4c 2a       	or	r4, r28
     9fa:	93 1e       	adc	r9, r19
     9fc:	84 87       	std	Z+12, r24	; 0x0c
     9fe:	a0 48       	sbci	r26, 0x80	; 128
     a00:	3a 92       	st	-Y, r3
     a02:	ca 84       	ldd	r12, Y+10	; 0x0a
     a04:	b3 43       	sbci	r27, 0x33	; 51
     a06:	d0 08       	sbc	r13, r0
     a08:	d1 1a       	sub	r13, r17
     a0a:	fa 0a       	sbc	r15, r26
     a0c:	d9 4d       	sbci	r29, 0xD9	; 217
     a0e:	82 91       	ld	r24, -Z
     a10:	39 78       	andi	r19, 0x89	; 137
     a12:	6a 34       	cpi	r22, 0x4A	; 74
     a14:	52 64       	ori	r21, 0x42	; 66
     a16:	14 19       	sub	r17, r4
     a18:	49 44       	sbci	r20, 0x49	; 73
     a1a:	12 d1       	rcall	.+548    	; 0xc40 <__stack+0x3e1>
     a1c:	24 34       	cpi	r18, 0x44	; 68
     a1e:	09 d1       	rcall	.+530    	; 0xc32 <__stack+0x3d3>
     a20:	75 00       	.word	0x0075	; ????
     a22:	d2 1a       	sub	r13, r18
     a24:	0b 0b       	sbc	r16, r27
     a26:	5b c6       	rjmp	.+3254   	; 0x16de <OXYMETER_PROMPT+0x33d>
     a28:	61 72       	andi	r22, 0x21	; 33
     a2a:	60 1c       	adc	r6, r0
     a2c:	b1 7a       	andi	r27, 0xA1	; 161
     a2e:	5b 92       	.word	0x925b	; ????
     a30:	4a a6       	std	Y+42, r4	; 0x2a
     a32:	75 7a       	andi	r23, 0xA5	; 165
     a34:	75 22       	and	r7, r21
     a36:	15 cd       	rjmp	.-1494   	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     a38:	66 d7       	rcall	.+3788   	; 0x1906 <u8g2_DrawXBMP+0x3c>
     a3a:	1a 00       	.word	0x001a	; ????
     a3c:	d3 1a       	sub	r13, r19
     a3e:	0b 0b       	sbc	r16, r27
     a40:	db c7       	rjmp	.+4022   	; 0x19f8 <u8g2_ClearBuffer+0x2>
     a42:	41 72       	andi	r20, 0x21	; 33
     a44:	48 1c       	adc	r4, r8
     a46:	b5 7a       	andi	r27, 0xA5	; 165
     a48:	5b 92       	.word	0x925b	; ????
     a4a:	4a a6       	std	Y+42, r4	; 0x2a
     a4c:	75 7a       	andi	r23, 0xA5	; 165
     a4e:	75 22       	and	r7, r21
     a50:	15 cd       	rjmp	.-1494   	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     a52:	66 d7       	rcall	.+3788   	; 0x1920 <u8g2_DrawXBMP+0x56>
     a54:	1a 00       	.word	0x001a	; ????
     a56:	d4 1a       	sub	r13, r20
     a58:	0b 0b       	sbc	r16, r27
     a5a:	db c6       	rjmp	.+3510   	; 0x1812 <u8g2_DrawHXBMP+0x32>
     a5c:	41 f3       	breq	.-48     	; 0xa2e <__stack+0x1cf>
     a5e:	58 1c       	adc	r5, r8
     a60:	ad 7a       	andi	r26, 0xAD	; 173
     a62:	5b 92       	.word	0x925b	; ????
     a64:	4a a6       	std	Y+42, r4	; 0x2a
     a66:	75 7a       	andi	r23, 0xA5	; 165
     a68:	75 22       	and	r7, r21
     a6a:	15 cd       	rjmp	.-1494   	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
     a6c:	66 d7       	rcall	.+3788   	; 0x193a <u8g2_DrawXBMP+0x70>
     a6e:	1a 00       	.word	0x001a	; ????
     a70:	d5 19       	sub	r29, r5
     a72:	fb 0a       	sbc	r15, r27
     a74:	5b 4e       	sbci	r21, 0xEB	; 235
     a76:	a2 91       	ld	r26, -Z
     a78:	39 5a       	subi	r19, 0xA9	; 169
     a7a:	f5 b6       	in	r15, 0x35	; 53
     a7c:	24 95       	.word	0x9524	; ????
     a7e:	4c eb       	ldi	r20, 0xBC	; 188
     a80:	f4 ea       	ldi	r31, 0xA4	; 164
     a82:	44 2a       	or	r4, r20
     a84:	9a cd       	rjmp	.-1228   	; 0x5ba <__EEPROM_REGION_LENGTH__+0x1ba>
     a86:	ae 35       	cpi	r26, 0x5E	; 94
     a88:	00 d6       	rcall	.+3072   	; 0x168a <OXYMETER_PROMPT+0x2e9>
     a8a:	19 fb       	.word	0xfb19	; ????
     a8c:	0a db       	rcall	.-2540   	; 0xa2 <__SREG__+0x63>
     a8e:	89 a4       	ldd	r8, Y+41	; 0x29
     a90:	22 39       	cpi	r18, 0x92	; 146
     a92:	52 f5       	brpl	.+84     	; 0xae8 <__stack+0x289>
     a94:	b6 24       	eor	r11, r6
     a96:	95 4c       	sbci	r25, 0xC5	; 197
     a98:	eb f4       	brvc	.+58     	; 0xad4 <__stack+0x275>
     a9a:	ea 44       	sbci	r30, 0x4A	; 74
     a9c:	2a 9a       	sbi	0x05, 2	; 5
     a9e:	cd ae       	std	Y+61, r12	; 0x3d
     aa0:	35 00       	.word	0x0035	; ????
     aa2:	d7 12       	cpse	r13, r23
     aa4:	99 08       	sbc	r9, r9
     aa6:	d5 44       	sbci	r29, 0x45	; 69
     aa8:	23 b3       	in	r18, 0x13	; 19
     aaa:	c9 5a       	subi	r28, 0xA9	; 169
     aac:	75 5a       	subi	r23, 0xA5	; 165
     aae:	9b ac       	ldd	r9, Y+59	; 0x3b
     ab0:	4d a2       	std	Y+37, r4	; 0x25
     ab2:	11 00       	.word	0x0011	; ????
     ab4:	d8 1c       	adc	r13, r8
     ab6:	cb 0a       	sbc	r12, r27
     ab8:	db 95       	.word	0x95db	; ????
     aba:	42 87       	std	Z+10, r20	; 0x0a
     abc:	d0 50       	subi	r29, 0x00	; 0
     abe:	24 9c       	mul	r2, r4
     ac0:	cc 24       	eor	r12, r12
     ac2:	34 11       	cpse	r19, r4
     ac4:	49 46       	sbci	r20, 0x69	; 105
     ac6:	91 4d       	sbci	r25, 0xD1	; 209
     ac8:	86 22       	and	r8, r22
     aca:	e1 e8       	ldi	r30, 0x81	; 129
     acc:	10 0a       	sbc	r1, r16
     ace:	d5 00       	.word	0x00d5	; ????
     ad0:	d9 12       	cpse	r13, r25
     ad2:	0a 0b       	sbc	r16, r26
     ad4:	d9 c5       	rjmp	.+2994   	; 0x1688 <OXYMETER_PROMPT+0x2e7>
     ad6:	41 72       	andi	r20, 0x21	; 33
     ad8:	58 1c       	adc	r5, r8
     ada:	2e e6       	ldi	r18, 0x6E	; 110
     adc:	9f 8b       	std	Y+23, r25	; 0x17
     ade:	93 43       	sbci	r25, 0x33	; 51
     ae0:	cc 04       	cpc	r12, r12
     ae2:	da 12       	cpse	r13, r26
     ae4:	0a 0b       	sbc	r16, r26
     ae6:	59 c7       	rjmp	.+3762   	; 0x199a <u8g2_send_buffer+0x3c>
     ae8:	21 f2       	breq	.-120    	; 0xa72 <__stack+0x213>
     aea:	38 8a       	std	Y+16, r3	; 0x10
     aec:	98 7f       	andi	r25, 0xF8	; 248
     aee:	2e 4e       	sbci	r18, 0xEE	; 238
     af0:	0e 31       	cpi	r16, 0x1E	; 30
     af2:	13 00       	.word	0x0013	; ????
     af4:	db 12       	cpse	r13, r27
     af6:	0a 0b       	sbc	r16, r26
     af8:	d9 c6       	rjmp	.+3506   	; 0x18ac <u8g2_DrawHXBMP+0xcc>
     afa:	21 e3       	ldi	r18, 0x31	; 49
     afc:	58 1c       	adc	r5, r8
     afe:	2a e6       	ldi	r18, 0x6A	; 106
     b00:	9f 8b       	std	Y+23, r25	; 0x17
     b02:	93 43       	sbci	r25, 0x33	; 51
     b04:	cc 04       	cpc	r12, r12
     b06:	dc 11       	cpse	r29, r12
     b08:	fa 0a       	sbc	r15, r26
     b0a:	59 29       	or	r21, r9
     b0c:	8a e4       	ldi	r24, 0x4A	; 74
     b0e:	50 31       	cpi	r21, 0x10	; 16
     b10:	ff 5c       	subi	r31, 0xCF	; 207
     b12:	9c 1c       	adc	r9, r12
     b14:	62 26       	eor	r6, r18
     b16:	00 dd       	rcall	.-1536   	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
     b18:	1c 0a       	sbc	r1, r28
     b1a:	09 57       	subi	r16, 0x79	; 121
     b1c:	c7 21       	and	r28, r7
     b1e:	f2 38       	cpi	r31, 0x82	; 130
     b20:	8a b8       	out	0x0a, r8	; 10
     b22:	38 11       	cpse	r19, r8
     b24:	ca 44       	sbci	r28, 0x4A	; 74
     b26:	42 91       	ld	r20, -Z
     b28:	94 4c       	sbci	r25, 0xC4	; 196
     b2a:	97 43       	sbci	r25, 0x37	; 55
     b2c:	e4 10       	cpse	r14, r4
     b2e:	39 44       	sbci	r19, 0x49	; 73
     b30:	0e 11       	cpse	r16, r14
     b32:	02 de       	rcall	.-1020   	; 0x738 <__EEPROM_REGION_LENGTH__+0x338>
     b34:	11 c9       	rjmp	.-3550   	; 0xfffffd58 <__eeprom_end+0xff7efd58>
     b36:	0a 57       	subi	r16, 0x7A	; 122
     b38:	c8 4f       	sbci	r28, 0xF8	; 248
     b3a:	87 88       	ldd	r8, Z+23	; 0x17
     b3c:	b0 ca       	rjmp	.-2720   	; 0x9e <__SREG__+0x5f>
     b3e:	78 a0       	ldd	r7, Y+32	; 0x20
     b40:	9c e4       	ldi	r25, 0x4C	; 76
     b42:	ea 00       	.word	0x00ea	; ????
     b44:	df 14       	cp	r13, r15
     b46:	c8 0a       	sbc	r12, r24
     b48:	d5 94       	asr	r13
     b4a:	2e 32       	cpi	r18, 0x2E	; 46
     b4c:	89 4c       	sbci	r24, 0xC9	; 201
     b4e:	22 19       	sub	r18, r2
     b50:	49 28       	or	r4, r9
     b52:	42 5e       	subi	r20, 0xE2	; 226
     b54:	28 92       	.word	0x9228	; ????
     b56:	11 00       	.word	0x0011	; ????
     b58:	e0 15       	cp	r30, r0
     b5a:	d8 0a       	sbc	r13, r24
     b5c:	53 c5       	rjmp	.+2726   	; 0x1604 <OXYMETER_PROMPT+0x263>
     b5e:	e5 90       	lpm	r14, Z+
     b60:	38 b4       	in	r3, 0x28	; 40
     b62:	74 91       	lpm	r23, Z
     b64:	49 47       	sbci	r20, 0x79	; 121
     b66:	96 91       	elpm	r25, Z
     b68:	44 26       	eor	r4, r20
     b6a:	39 4d       	sbci	r19, 0xD9	; 217
     b6c:	06 e1       	ldi	r16, 0x16	; 22
     b6e:	14 d8       	rcall	.-4056   	; 0xfffffb98 <__eeprom_end+0xff7efb98>
     b70:	0a d3       	rcall	.+1556   	; 0x1186 <ECG_PROMPT+0x1e5>
     b72:	86 a5       	ldd	r24, Z+46	; 0x2e
     b74:	71 70       	andi	r23, 0x01	; 1
     b76:	e9 22       	and	r14, r25
     b78:	93 8e       	std	Z+27, r9	; 0x1b
     b7a:	2c 23       	and	r18, r28
     b7c:	89 4c       	sbci	r24, 0xC9	; 201
     b7e:	72 9a       	sbi	0x0e, 2	; 14
     b80:	0c e2       	ldi	r16, 0x2C	; 44
     b82:	15 d8       	rcall	.-4054   	; 0xfffffbae <__eeprom_end+0xff7efbae>
     b84:	0a d3       	rcall	.+1556   	; 0x119a <ECG_PROMPT+0x1f9>
     b86:	85 87       	std	Z+13, r24	; 0x0d
     b88:	b1 38       	cpi	r27, 0x81	; 129
     b8a:	b0 74       	andi	r27, 0x40	; 64
     b8c:	91 49       	sbci	r25, 0x91	; 145
     b8e:	47 96       	adiw	r24, 0x17	; 23
     b90:	91 44       	sbci	r25, 0x41	; 65
     b92:	26 39       	cpi	r18, 0x96	; 150
     b94:	4d 06       	cpc	r4, r29
     b96:	e3 15       	cp	r30, r3
     b98:	c8 0a       	sbc	r12, r24
     b9a:	53 4d       	sbci	r21, 0xD3	; 211
     b9c:	42 91       	ld	r20, -Z
     b9e:	39 b0       	in	r3, 0x09	; 9
     ba0:	74 91       	lpm	r23, Z
     ba2:	49 47       	sbci	r20, 0x79	; 121
     ba4:	96 91       	elpm	r25, Z
     ba6:	44 26       	eor	r4, r20
     ba8:	39 4d       	sbci	r19, 0xD9	; 217
     baa:	06 e4       	ldi	r16, 0x46	; 70
     bac:	14 c8       	rjmp	.-4056   	; 0xfffffbd6 <__eeprom_end+0xff7efbd6>
     bae:	0a d3       	rcall	.+1556   	; 0x11c4 <ECG_PROMPT+0x223>
     bb0:	a8 49       	sbci	r26, 0x98	; 152
     bb2:	e4 c0       	rjmp	.+456    	; 0xd7c <__stack+0x51d>
     bb4:	d2 45       	sbci	r29, 0x52	; 82
     bb6:	26 1d       	adc	r18, r6
     bb8:	59 46       	sbci	r21, 0x69	; 105
     bba:	12 99       	sbic	0x02, 2	; 2
     bbc:	e4 34       	cpi	r30, 0x44	; 68
     bbe:	19 e5       	ldi	r17, 0x59	; 89
     bc0:	16 d8       	rcall	.-4052   	; 0xfffffbee <__eeprom_end+0xff7efbee>
     bc2:	0a d3       	rcall	.+1556   	; 0x11d8 <ECG_PROMPT+0x237>
     bc4:	49 43       	sbci	r20, 0x39	; 57
     bc6:	c1 50       	subi	r28, 0x01	; 1
     bc8:	54 58       	subi	r21, 0x84	; 132
     bca:	ba c8       	rjmp	.-3724   	; 0xfffffd40 <__eeprom_end+0xff7efd40>
     bcc:	a4 23       	and	r26, r20
     bce:	cb 48       	sbci	r28, 0x8B	; 139
     bd0:	22 93       	st	-Z, r18
     bd2:	9c 26       	eor	r9, r28
     bd4:	03 e6       	ldi	r16, 0x63	; 99
     bd6:	17 9d       	mul	r17, r7
     bd8:	0a df       	rcall	.-492    	; 0x9ee <__stack+0x18f>
     bda:	54 48       	sbci	r21, 0x84	; 132
     bdc:	87 8a       	std	Z+23, r8	; 0x17
     bde:	4c 28       	or	r4, r12
     be0:	3c 48       	sbci	r19, 0x8C	; 140
     be2:	0e 87       	std	Y+14, r16	; 0x0e
     be4:	90 58       	subi	r25, 0x80	; 128
     be6:	44 3a       	cpi	r20, 0xA4	; 164
     be8:	1c 42       	sbci	r17, 0x2C	; 44
     bea:	4c 00       	.word	0x004c	; ????
     bec:	e7 13       	cpse	r30, r23
     bee:	d8 ca       	rjmp	.-2640   	; 0x1a0 <__trampolines_end+0xca>
     bf0:	52 d1       	rcall	.+676    	; 0xe96 <QR_CODE+0xf5>
     bf2:	2c a3       	std	Y+36, r18	; 0x24
     bf4:	b2 f2       	brmi	.-84     	; 0xba2 <__stack+0x343>
     bf6:	68 62       	ori	r22, 0x28	; 40
     bf8:	a3 c6       	rjmp	.+3398   	; 0x1940 <u8g2_DrawXBMP+0x76>
     bfa:	85 21       	and	r24, r5
     bfc:	e1 0c       	add	r14, r1
     bfe:	00 e8       	ldi	r16, 0x80	; 128
     c00:	13 d8       	rcall	.-4058   	; 0xfffffc28 <__eeprom_end+0xff7efc28>
     c02:	0a 55       	subi	r16, 0x5A	; 90
     c04:	c5 e5       	ldi	r28, 0x55	; 85
     c06:	90 38       	cpi	r25, 0x80	; 128
     c08:	98 66       	ori	r25, 0x68	; 104
     c0a:	11 1e       	adc	r1, r17
     c0c:	0e e6       	ldi	r16, 0x6E	; 110
     c0e:	d1 c4       	rjmp	.+2466   	; 0x15b2 <OXYMETER_PROMPT+0x211>
     c10:	46 02       	muls	r20, r22
     c12:	e9 12       	cpse	r14, r25
     c14:	d8 0a       	sbc	r13, r24
     c16:	d5 86       	std	Z+13, r13	; 0x0d
     c18:	a5 71       	andi	r26, 0x15	; 21
     c1a:	38 cd       	rjmp	.-1424   	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
     c1c:	22 3c       	cpi	r18, 0xC2	; 194
     c1e:	1c cc       	rjmp	.-1992   	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     c20:	a3 89       	ldd	r26, Z+19	; 0x13
     c22:	8d 04       	cpc	r8, r13
     c24:	ea 13       	cpse	r30, r26
     c26:	d8 0a       	sbc	r13, r24
     c28:	55 86       	std	Z+13, r5	; 0x0d
     c2a:	87 b1       	in	r24, 0x07	; 7
     c2c:	38 90       	.word	0x9038	; ????
     c2e:	66 11       	cpse	r22, r6
     c30:	1e 0e       	add	r1, r30
     c32:	e6 d1       	rcall	.+972    	; 0x1000 <ECG_PROMPT+0x5f>
     c34:	c4 46       	sbci	r28, 0x64	; 100
     c36:	02 eb       	ldi	r16, 0xB2	; 178
     c38:	13 c8       	rjmp	.-4058   	; 0xfffffc60 <__eeprom_end+0xff7efc60>
     c3a:	0a 55       	subi	r16, 0x5A	; 90
     c3c:	49 64       	ori	r20, 0x49	; 73
     c3e:	12 39       	cpi	r17, 0x92	; 146
     c40:	90 66       	ori	r25, 0x60	; 96
     c42:	11 1e       	adc	r1, r17
     c44:	0e e6       	ldi	r16, 0x6E	; 110
     c46:	d1 c4       	rjmp	.+2466   	; 0x15ea <OXYMETER_PROMPT+0x249>
     c48:	46 02       	muls	r20, r22
     c4a:	ec 0b       	sbc	r30, r28
     c4c:	d3 08       	sbc	r13, r3
     c4e:	49 84       	ldd	r4, Y+9	; 0x09
     c50:	64 41       	sbci	r22, 0x14	; 20
     c52:	89 fe       	.word	0xfe89	; ????
     c54:	00 ed       	ldi	r16, 0xD0	; 208
     c56:	0b d3       	rcall	.+1558   	; 0x126e <ECG_PROMPT+0x2cd>
     c58:	0a 49       	sbci	r16, 0x9A	; 154
     c5a:	45 a6       	std	Z+45, r4	; 0x2d
     c5c:	12 fd       	sbrc	r17, 2
     c5e:	05 00       	.word	0x0005	; ????
     c60:	ee 0c       	add	r14, r14
     c62:	d5 08       	sbc	r13, r5
     c64:	49 c5       	rjmp	.+2706   	; 0x16f8 <OXYMETER_PROMPT+0x357>
     c66:	26 b1       	in	r18, 0x06	; 6
     c68:	b0 4c       	sbci	r27, 0xC0	; 192
     c6a:	7f 02       	muls	r23, r31
     c6c:	ef 0b       	sbc	r30, r31
     c6e:	c5 08       	sbc	r12, r5
     c70:	49 48       	sbci	r20, 0x89	; 137
     c72:	28 62       	ori	r18, 0x28	; 40
     c74:	99 fe       	.word	0xfe99	; ????
     c76:	04 f0       	brlt	.+0      	; 0xc78 <__stack+0x419>
     c78:	11 c8       	rjmp	.-4062   	; 0xfffffc9c <__eeprom_end+0xff7efc9c>
     c7a:	0a d5       	rcall	.+2580   	; 0x1690 <OXYMETER_PROMPT+0x2ef>
     c7c:	88 4b       	sbci	r24, 0xB8	; 184
     c7e:	e5 99       	sbic	0x1c, 5	; 28
     c80:	65 54       	subi	r22, 0x45	; 69
     c82:	64 2c       	mov	r6, r4
     c84:	4d 6c       	ori	r20, 0xCD	; 205
     c86:	24 00       	.word	0x0024	; ????
     c88:	f1 10       	cpse	r15, r1
     c8a:	c8 0a       	sbc	r12, r24
     c8c:	55 4d       	sbci	r21, 0xD5	; 213
     c8e:	42 91       	ld	r20, -Z
     c90:	39 4c       	sbci	r19, 0xC9	; 201
     c92:	42 39       	cpi	r20, 0x92	; 146
     c94:	d0 88       	ldd	r13, Z+16	; 0x10
     c96:	7c 14       	cp	r7, r12
     c98:	f2 13       	cpse	r31, r18
     c9a:	d8 0a       	sbc	r13, r24
     c9c:	55 c5       	rjmp	.+2730   	; 0x1748 <OXYMETER_PROMPT+0x3a7>
     c9e:	e5 90       	lpm	r14, Z+
     ca0:	38 98       	cbi	0x07, 0	; 7
     ca2:	66 19       	sub	r22, r6
     ca4:	15 19       	sub	r17, r5
     ca6:	4b 13       	cpse	r20, r27
     ca8:	1b 09       	sbc	r17, r11
     caa:	00 f3       	brcs	.-64     	; 0xc6c <__stack+0x40d>
     cac:	12 d8       	rcall	.-4060   	; 0xfffffcd2 <__eeprom_end+0xff7efcd2>
     cae:	0a 55       	subi	r16, 0x5A	; 90
     cb0:	86 a5       	ldd	r24, Z+46	; 0x2e
     cb2:	71 14       	cp	r7, r1
     cb4:	9a 65       	ori	r25, 0x5A	; 90
     cb6:	54 64       	ori	r21, 0x44	; 68
     cb8:	2c 4d       	sbci	r18, 0xDC	; 220
     cba:	6c 24       	eor	r6, r12
     cbc:	00 f4       	brcc	.+0      	; 0xcbe <__stack+0x45f>
     cbe:	13 d8       	rcall	.-4058   	; 0xfffffce6 <__eeprom_end+0xff7efce6>
     cc0:	0a d5       	rcall	.+2580   	; 0x16d6 <OXYMETER_PROMPT+0x335>
     cc2:	85 87       	std	Z+13, r24	; 0x0d
     cc4:	b1 38       	cpi	r27, 0x81	; 129
     cc6:	94 66       	ori	r25, 0x64	; 100
     cc8:	19 15       	cp	r17, r9
     cca:	19 4b       	sbci	r17, 0xB9	; 185
     ccc:	13 1b       	sub	r17, r19
     cce:	09 00       	.word	0x0009	; ????
     cd0:	f5 13       	cpse	r31, r21
     cd2:	c8 0a       	sbc	r12, r24
     cd4:	55 4d       	sbci	r21, 0xD5	; 213
     cd6:	42 91       	ld	r20, -Z
     cd8:	39 94       	.word	0x9439	; ????
     cda:	66 19       	sub	r22, r6
     cdc:	15 19       	sub	r17, r5
     cde:	4b 13       	cpse	r20, r27
     ce0:	1b 09       	sbc	r17, r11
     ce2:	00 f6       	brcc	.-128    	; 0xc64 <__stack+0x405>
     ce4:	12 c8       	rjmp	.-4060   	; 0xfffffd0a <__eeprom_end+0xff7efd0a>
     ce6:	0a d5       	rcall	.+2580   	; 0x16fc <OXYMETER_PROMPT+0x35b>
     ce8:	a8 49       	sbci	r26, 0x98	; 152
     cea:	e4 50       	subi	r30, 0x04	; 4
     cec:	9a 65       	ori	r25, 0x5A	; 90
     cee:	54 64       	ori	r21, 0x44	; 68
     cf0:	2c 4d       	sbci	r18, 0xDC	; 220
     cf2:	6c 24       	eor	r6, r12
     cf4:	00 f7       	brcc	.-64     	; 0xcb6 <__stack+0x457>
     cf6:	0e 88       	ldd	r0, Y+22	; 0x16
     cf8:	0a d5       	rcall	.+2580   	; 0x170e <OXYMETER_PROMPT+0x36d>
     cfa:	89 e5       	ldi	r24, 0x59	; 89
     cfc:	c0 c3       	rjmp	.+1920   	; 0x147e <OXYMETER_PROMPT+0xdd>
     cfe:	41 0e       	add	r4, r17
     d00:	14 cb       	rjmp	.-2520   	; 0x32a <__trampolines_end+0x254>
     d02:	00 f8       	bld	r0, 0
     d04:	12 98       	cbi	0x02, 2	; 2
     d06:	0a 55       	subi	r16, 0x5A	; 90
     d08:	51 22       	and	r5, r17
     d0a:	87 51       	subi	r24, 0x17	; 23
     d0c:	c9 22       	and	r12, r25
     d0e:	31 95       	neg	r19
     d10:	0e 93       	st	-X, r16
     d12:	08 09       	sbc	r16, r8
     d14:	00 f9       	bld	r16, 0
     d16:	10 d8       	rcall	.-4064   	; 0xfffffd38 <__eeprom_end+0xff7efd38>
     d18:	0a 55       	subi	r16, 0x5A	; 90
     d1a:	c5 e5       	ldi	r28, 0x55	; 85
     d1c:	90 38       	cpi	r25, 0x80	; 128
     d1e:	50 c8       	rjmp	.-3936   	; 0xfffffdc0 <__eeprom_end+0xff7efdc0>
     d20:	6f 07       	cpc	r22, r31
     d22:	0a 45       	sbci	r16, 0x5A	; 90
     d24:	00 fa       	bst	r0, 0
     d26:	0f d8       	rcall	.-4066   	; 0xfffffd46 <__eeprom_end+0xff7efd46>
     d28:	0a 55       	subi	r16, 0x5A	; 90
     d2a:	86 a5       	ldd	r24, Z+46	; 0x2e
     d2c:	71 b0       	in	r7, 0x01	; 1
     d2e:	90 df       	rcall	.-224    	; 0xc50 <__stack+0x3f1>
     d30:	0e 14       	cp	r0, r14
     d32:	8a 00       	.word	0x008a	; ????
     d34:	fb 10       	cpse	r15, r11
     d36:	d8 0a       	sbc	r13, r24
     d38:	d5 85       	ldd	r29, Z+13	; 0x0d
     d3a:	87 b1       	in	r24, 0x07	; 7
     d3c:	38 4c       	sbci	r19, 0xC8	; 200
     d3e:	c8 6f       	ori	r28, 0xF8	; 248
     d40:	07 0a       	sbc	r0, r23
     d42:	45 00       	.word	0x0045	; ????
     d44:	fc 0f       	add	r31, r28
     d46:	c8 0a       	sbc	r12, r24
     d48:	d5 a8       	ldd	r13, Z+53	; 0x35
     d4a:	49 e4       	ldi	r20, 0x49	; 73
     d4c:	30 21       	and	r19, r0
     d4e:	bf 1d       	adc	r27, r15
     d50:	28 14       	cp	r2, r8
     d52:	01 fd       	sbrc	r16, 1
     d54:	19 18       	sub	r1, r9
     d56:	c9 d2       	rcall	.+1426   	; 0x12ea <ECG_PROMPT+0x349>
     d58:	86 a5       	ldd	r24, Z+46	; 0x2e
     d5a:	71 a8       	ldd	r7, Z+49	; 0x31
     d5c:	90 28       	or	r9, r0
     d5e:	91 49       	sbci	r25, 0x91	; 145
     d60:	44 32       	cpi	r20, 0x24	; 36
     d62:	89 4c       	sbci	r24, 0xC9	; 201
     d64:	22 a3       	std	Z+34, r18	; 0x22
     d66:	4e c5       	rjmp	.+2716   	; 0x1804 <u8g2_DrawHXBMP+0x24>
     d68:	8a 53       	subi	r24, 0x3A	; 58
     d6a:	29 00       	.word	0x0029	; ????
     d6c:	fe 13       	cpse	r31, r30
     d6e:	08 cb       	rjmp	.-2544   	; 0x380 <__trampolines_end+0x2aa>
     d70:	54 88       	ldd	r5, Z+20	; 0x14
     d72:	b5 8c       	ldd	r11, Z+29	; 0x1d
     d74:	2e a3       	std	Y+38, r18	; 0x26
     d76:	22 63       	ori	r18, 0x32	; 50
     d78:	e9 30       	cpi	r30, 0x09	; 9
     d7a:	91 8c       	ldd	r9, Z+25	; 0x19
     d7c:	c4 9a       	sbi	0x18, 4	; 24
     d7e:	01 ff       	sbrs	r16, 1
     d80:	1a 08       	sbc	r1, r10
     d82:	c9 52       	subi	r28, 0x29	; 41
     d84:	49 64       	ori	r20, 0x49	; 73
     d86:	12 39       	cpi	r17, 0x92	; 146
     d88:	48 48       	sbci	r20, 0x88	; 136
     d8a:	94 c8       	rjmp	.-3800   	; 0xfffffeb4 <__eeprom_end+0xff7efeb4>
     d8c:	24 22       	and	r2, r20
     d8e:	99 44       	sbci	r25, 0x49	; 73
     d90:	26 91       	elpm	r18, Z
     d92:	51 a7       	std	Z+41, r21	; 0x29
     d94:	62 c5       	rjmp	.+2756   	; 0x185a <u8g2_DrawHXBMP+0x7a>
     d96:	a9 14       	cp	r10, r9
     d98:	00 00       	nop
     d9a:	00 00       	nop
     d9c:	04 ff       	sbrs	r16, 4
     d9e:	ff 00       	.word	0x00ff	; ????
	...

00000da1 <QR_CODE>:
     da1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     db1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     dc1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     dd1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     de1:	ff 00 e0 1f f8 07 00 ff ff 00 e0 1f f8 07 00 ff     ................
     df1:	ff fc e7 e1 ff e7 3f ff ff fc e7 e1 ff e7 3f ff     ......?.......?.
     e01:	ff 0c e6 7f 78 66 30 ff ff 0c e6 7f 78 67 30 ff     ....xf0.....xg0.
     e11:	ff 0c 66 7e 86 67 30 ff ff 0c 66 7c 86 67 30 ff     ..f~.g0...f|.g0.
     e21:	ff 0c 66 f8 99 67 30 ff ff fc e7 1f 80 e7 3f ff     ..f..g0.......?.
     e31:	ff fc e7 1f 80 e7 3f ff ff 00 e0 66 66 07 00 ff     ......?....ff...
     e41:	ff 00 60 66 66 06 00 ff ff ff ff 87 61 fe ff ff     ..`ff.......a...
     e51:	ff ff ff 87 61 fe ff ff ff f8 83 99 19 7e fc ff     ....a........~..
     e61:	ff f0 81 99 19 7e fc ff ff e0 91 79 66 18 02 ff     .....~.....yf...
     e71:	ff c0 99 79 66 18 03 ff ff 3c 60 e6 1f 20 33 ff     ...yf....<`.. 3.
     e81:	ff 3c 60 e6 1f 60 33 ff ff 4c fe 79 86 19 ff ff     .<`..`3..L.y....
     e91:	ff cc fe 79 86 19 ff ff ff 00 e7 19 80 9f c3 ff     ...y............
     ea1:	ff 00 e7 19 80 9f c3 ff ff 0c fe f9 1f e6 f3 ff     ................
     eb1:	ff 0c fe f9 1f e6 f3 ff ff fc 01 00 7e e6 3f ff     ............~.?.
     ec1:	ff fc 01 00 7e e6 3f ff ff 0c 78 9e 07 60 33 ff     ....~.?...x..`3.
     ed1:	ff 0c 70 9e 07 20 32 ff ff 0c e1 87 1f 00 30 ff     ..p.. 2.......0.
     ee1:	ff 8c e3 87 1f 00 20 ff ff ff 7f 60 18 7e 03 ff     ...... ....`.~..
     ef1:	ff ff 7f 60 18 7e 02 ff ff 00 60 86 1f 66 f0 ff     ...`.~....`..f..
     f01:	ff 00 60 86 1f 76 f0 ff ff fc 67 7e 78 7e cf ff     ..`..v....g~x~..
     f11:	ff fc e7 7e 38 3e df ff ff 0c e6 67 06 00 3f ff     ...~8>.....g..?.
     f21:	ff 0c e6 fb 27 8e 37 ff ff 0c e6 f9 67 9e 33 ff     ....'.7.....g.3.
     f31:	ff 0c e6 01 1e 86 3d ff ff 0c e6 01 1e 86 3c ff     ......=.......<.
     f41:	ff fc e7 86 e7 01 ff ff ff fc 67 86 e7 01 ff ff     ..........g.....
     f51:	ff 00 60 e0 81 23 1f ff ff 00 60 e0 81 67 0f ff     ..`..#....`..g..
     f61:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     f71:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     f81:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     f91:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00000fa1 <ECG_PROMPT>:
     fa1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     fb1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     fc1:	ff ff ff ff ff ff 7f 00 fc ff 07 c0 ff ff ff ff     ................
     fd1:	ff ff 1f ff ff ff 0f 00 e0 ff 00 00 ff ff ff ff     ................
     fe1:	ff ff 1f ff ff ff 07 fe c0 3f e0 0f fc ff ff ff     .........?......
     ff1:	ff ff 1f ff ff ff c3 ff 07 1f fc 7f f8 ff ff ff     ................
    1001:	ff ff 1f ff ff ff e0 ff 1f 0e ff ff f0 ff ff ff     ................
    1011:	ff ff 1f ff ff ff f8 ff 3f 84 ff ff e1 ff ff ff     ........?.......
    1021:	ff ff 1f ff ff 7f fc ff 7f c0 ff ff c3 ff ff ff     ................
    1031:	ff ff 0f fe ff 3f fc ff ff e0 ff ff c7 ff ff ff     .....?..........
    1041:	ff ff 0f fe ff 3f fe ff ff f1 ff ff 8f ff ff ff     .....?..........
    1051:	ff ff 0f fe ff 3f fe ff ff f9 ff ff 8f ff ff ff     .....?..........
    1061:	ff ff 0f fe ff 1f ff ff ff ff ff ff 8f ff ff ff     ................
    1071:	ff ff 0f fe ff 1f ff ff ff ff ff ff 8f ff ff ff     ................
    1081:	ff ff 0f fe ff 1f ff ff ff ff ff ff 1f ff ff ff     ................
    1091:	ff ff 0f fe ff 1f ff ff ff ff ff ff 8f ff ff ff     ................
    10a1:	ff ff 0f fe ff 1f fe ff ff ff ff ff 8f ff ff ff     ................
    10b1:	ff ff 07 fe 9f 3f fe ff ff ff ff ff 8f 3f ff ff     .....?.......?..
    10c1:	ff ff 07 fe 8f 3f fe ff ff ff ff ff 8f 3f fe ff     .....?.......?..
    10d1:	ff ff 07 fe 0f 3f fe ff ff ff ff ff 87 1f fe ff     .....?..........
    10e1:	ff ff 07 fc 0f 7f fc ff ff ff ff ff c7 1f fe ff     ................
    10f1:	ff ff 47 fc 0f 7f fc ff ff ff ff ff c3 1f fe ff     ..G.............
    1101:	ff ff 47 fc 0f ff f8 ff ff ff ff ff e3 1f fe ff     ..G.............
    1111:	ff ff 47 fc 07 ff f0 ff ff ff ff ff e1 1f fc ff     ..G.............
    1121:	ff ff 47 fc 07 ff f1 ff ff ff ff ff f0 1f fc ff     ..G.............
    1131:	ff ff 47 fc 07 fe e3 ff ff ff ff ff f8 1f fc ff     ..G.............
    1141:	ff ff 63 8c 07 fe c3 ff ff ff ff 7f fc 0f fc ff     ..c.............
    1151:	ff ff 63 8c 07 fe 87 ff ff ff ff 3f fc 0f fc ff     ..c........?....
    1161:	ff ff 63 84 07 fe 0f ff ff ff ff 1f fe 0f f8 ff     ..c.............
    1171:	ff ff 63 00 23 fe 1f fe ff ff ff 0f ff 8f f8 ff     ..c.#...........
    1181:	ff ff e3 00 23 be 3f fc ff ff ff 87 bf 8f f8 ff     ....#.?.........
    1191:	ff cf e3 00 22 1e 7f f8 ff ff ff c3 1f 8f f8 ff     ...."...........
    11a1:	ff c7 e3 20 62 1c fe f0 ff ff ff e1 0f c7 f8 ff     ... b...........
    11b1:	ff 87 e3 20 60 0c fe e1 ff ff ff f0 0f c6 f8 ff     ... `...........
    11c1:	ff 83 e3 70 70 0c fc c3 ff ff 3f f8 07 c6 f1 ff     ...pp.....?.....
    11d1:	ff 83 f1 70 70 0c fc 07 ff ff 1f fe 07 c6 f1 ff     ...pp...........
    11e1:	ff 81 f1 f0 70 cc f8 1f fe ff 0f ff 43 c4 f1 ff     ....p.......C...
    11f1:	ff 80 f1 f8 70 c4 f8 1f fc ff 07 ff 63 c4 f1 ff     ....p.......c...
    1201:	00 88 f1 f9 70 c0 00 00 f8 ff 03 00 60 c0 01 00     ....p.......`...
    1211:	00 88 f1 ff f9 c0 01 00 f8 ff 03 00 70 e0 03 00     ............p...
    1221:	ff 8f f1 ff ff e0 ff ff ff ff ff ff ff e0 ff ff     ................
    1231:	ff 8f f1 ff ff e0 ff ff ff ff ff ff ff e0 ff ff     ................
    1241:	ff 8f f1 ff ff e0 ff ff ff ff ff ff ff e0 ff ff     ................
    1251:	ff 9f f1 ff ff e0 ff ff ff ff ff ff ff e0 ff ff     ................
    1261:	ff 1f f9 ff ff f0 ff ff ff ff ff ff ff e1 ff ff     ................
    1271:	ff 1f f8 ff ff f0 ff ff ff ff ff ff ff e1 ff ff     ................
    1281:	ff 1f f8 ff ff f1 ff ff ff ff ff ff ff f1 ff ff     ................
    1291:	ff 1f f8 ff ff f9 ff ff ff ff ff ff ff f3 ff ff     ................
    12a1:	ff 1f f8 ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    12b1:	ff 1f f8 ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    12c1:	ff 1f f8 ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    12d1:	ff 1f f8 ff ff ff fe fd ff ef ff ff e7 ff ef ff     ................
    12e1:	ff 3f f8 bc f9 ff fc f9 ff e7 bf ff e7 ff ef ff     .?..............
    12f1:	ff 3f fc 18 f9 ff fc f9 ff e7 3f ff e7 ff e7 ff     .?........?.....
    1301:	ff 3f 7c 1a 79 e6 e4 49 df 64 3f 97 07 d3 24 fb     .?|.y..I.d?...$.
    1311:	ff 3f 7c bb f9 f6 e4 69 9e 26 3f bb 67 99 66 f9     .?|....i.&?.g.f.
    1321:	ff 3f 7c b3 19 f6 e4 09 86 66 3c bb 67 99 6e fd     .?|......f<.g.n.
    1331:	ff 3f 3c b2 d9 f6 e4 c9 9b e6 3d bb 67 9b 64 fc     .?<.......=.g.d.
    1341:	ff 3f bc 27 13 ce e4 19 83 60 7c c6 07 c3 e0 fc     .?.'.....`|.....
    1351:	ff 3f fc ff ff ff ff ff ff ff ff ff ff ff ff fc     .?..............
    1361:	ff 3f fc ff ff ff ff ff ff ff ff ff ff ff ff fe     .?..............
    1371:	ff 3f fc ff ff ff ff ff ff ff ff ff ff ff ff ff     .?..............
    1381:	ff 7f fe ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1391:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

000013a1 <OXYMETER_PROMPT>:
    13a1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13b1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13c1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13d1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13e1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13f1:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1401:	ff ff ff ff ff ff ff ff ff ff ff fd ff ff ff ff     ................
    1411:	ff 1f fe ff 1f ff ff ff ff ff c0 fc ff ff ff ff     ................
    1421:	ff 01 f0 ff 01 e0 ff ff ff ff 88 fc ff ff ff ff     ................
    1431:	7f 00 c0 ff 00 80 ff ff ff ff 9c fc ff ff ff ff     ................
    1441:	1f 00 80 3f 00 00 ff ff ff ff 9c 18 3e 0e ff ff     ...?........>...
    1451:	0f 00 00 1e 00 00 fe ff ff ff 88 1c 0c 06 fe ff     ................
    1461:	07 e0 00 0c e0 01 fc ff ff ff c0 3c cc 07 fe ff     ...........<....
    1471:	03 fc 07 00 fc 0f f8 ff ff ff f8 1c cc 07 fe ff     ................
    1481:	03 ff 0f 00 fe 1f f8 ff ff ff fc cc cc e7 ff ff     ................
    1491:	81 ff 3f 00 ff 3f f0 ff ff ff fc 0c 8c c6 fe ff     ..?..?..........
    14a1:	c1 ff 7f 80 ff 7f f0 ff ff ff fc 1c 1c 0e fe ff     ................
    14b1:	c1 ff ff c0 ff ff e0 ff ff ff ff ff ff ff ff ff     ................
    14c1:	e0 ff ff e1 ff ff e0 ff ff ff ff ff ff ff ff ff     ................
    14d1:	e0 ff ff fb ff ff e0 ff ff ff ff ff ff ff ff ff     ................
    14e1:	e0 ff ff ff ff ff e0 ff ff ff ff ff ff ff ff ff     ................
    14f1:	e0 ff ff ff ff ff e0 ff ff ff ff ff ff ff ff ff     ................
    1501:	e0 ff ff ff 03 ff e0 ff ff ff ff ff ff ff ff ff     ................
    1511:	e0 ff ff ff 00 fc e0 ff ff ff ff ff ff ff ff ff     ................
    1521:	e0 ff ff 3f 00 f0 e0 ff ff ff ff ff ff ff ff ff     ...?............
    1531:	e0 ff ff 1f 00 e0 e0 ff ff ff ff ff ff ff ff ff     ................
    1541:	c1 ff ff 1f 00 e0 e0 ff ff ff f3 fc ff ff ff ff     ................
    1551:	c1 ff ff 0f 00 40 80 ff ff ff 63 fe ff ff ff ff     .....@....c.....
    1561:	c1 ff ff 0f 00 00 00 fc ff ff 67 fe ff ff ff ff     ..........g.....
    1571:	83 ff ff 07 00 00 00 f8 ff ff 07 87 77 b6 ff ff     ............w...
    1581:	03 ff ff 07 00 00 00 f0 ff ff 0f 03 73 86 ff ff     ............s...
    1591:	07 fe ff 07 00 00 00 e0 ff ff 8f 31 72 e6 ff ff     ...........1r...
    15a1:	07 fe ff 07 00 00 00 c0 ff ff 9f 79 72 e6 ff ff     ...........yr...
    15b1:	0f fc ff 07 00 00 00 c0 ff ff 9f 79 72 e6 ff ff     ...........yr...
    15c1:	1f f8 ff 07 00 00 00 80 ff ff 9f 33 23 e6 ff ff     ...........3#...
    15d1:	3f f0 ff 07 00 00 00 80 ff ff 9f 83 07 e6 ff ff     ?...............
    15e1:	3f c0 ff 07 00 00 00 80 ff ff ff ff ff ff ff ff     ?...............
    15f1:	7f 80 ff 0f 00 00 00 80 ff ff ff ff ff ff ff ff     ................
    1601:	ff 00 ff 0f 00 00 00 80 ff ff ff ff ff ff ff ff     ................
    1611:	ff 01 fe 1f 00 00 00 80 ff ff ff ff ff ff ff ff     ................
    1621:	ff 07 fc 1f 00 00 00 c0 ff ff ff ff ff ff ff ff     ................
    1631:	ff 0f f8 3f 00 00 00 c0 ff ff ff ff ff ff ff ff     ...?............
    1641:	ff 1f e0 3f 00 00 00 c0 ff ff ff ff ff ff ff ff     ...?............
    1651:	ff 3f c0 7f 00 00 00 e0 ff ff ff ff ff ff ff ff     .?..............
    1661:	ff 7f 80 7f 00 00 00 f0 ff ff ff ff ff ff ff ff     ................
    1671:	ff ff 01 1f 00 00 00 f8 ff ff ff ff ff ff ff ff     ................
    1681:	ff ff 03 0e 00 00 00 fc ff 1f c8 ff ff ff ff ff     ................
    1691:	ff ff 07 0c 00 00 00 fe ff 1f ce ff ff ff ff ff     ................
    16a1:	ff ff 0f 00 00 00 80 ff ff 9f ff ff ff ff ff ff     ................
    16b1:	ff ff 1f 00 03 00 e0 ff ff 9f df c4 83 e3 e5 ff     ................
    16c1:	ff ff 3f 80 07 00 f8 ff ff 1f cf 80 81 c1 e0 ff     ..?.............
    16d1:	ff ff 7f c0 07 00 ff ff ff 1f c8 98 c9 80 f8 ff     ................
    16e1:	ff ff ff e0 0f c0 ff ff ff 1f cf 9c c1 80 fc ff     ................
    16f1:	ff ff ff f1 0f f8 ff ff ff 9f cf 9c e1 fc f8 ff     ................
    1701:	ff ff ff ff 1f fe ff ff ff 9f cf 9c f9 d8 fc ff     ................
    1711:	ff ff ff ff bf ff ff ff ff 9f cf 9c c1 c1 fc ff     ................
    1721:	ff ff ff ff ff ff ff ff ff ff ff ff 98 ff ff ff     ................
    1731:	ff ff ff ff ff ff ff ff ff ff ff ff 9c ff ff ff     ................
    1741:	ff ff ff ff ff ff ff ff ff ff ff ff c0 ff ff ff     ................
    1751:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1761:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1771:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1781:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1791:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
	...

000017a2 <__ctors_end>:
    17a2:	11 24       	eor	r1, r1
    17a4:	1f be       	out	0x3f, r1	; 63
    17a6:	cf e5       	ldi	r28, 0x5F	; 95
    17a8:	d8 e0       	ldi	r29, 0x08	; 8
    17aa:	de bf       	out	0x3e, r29	; 62
    17ac:	cd bf       	out	0x3d, r28	; 61

000017ae <__do_copy_data>:
    17ae:	11 e0       	ldi	r17, 0x01	; 1
    17b0:	a0 e6       	ldi	r26, 0x60	; 96
    17b2:	b0 e0       	ldi	r27, 0x00	; 0
    17b4:	e4 e0       	ldi	r30, 0x04	; 4
    17b6:	fc e3       	ldi	r31, 0x3C	; 60
    17b8:	02 c0       	rjmp	.+4      	; 0x17be <__do_copy_data+0x10>
    17ba:	05 90       	lpm	r0, Z+
    17bc:	0d 92       	st	X+, r0
    17be:	a8 39       	cpi	r26, 0x98	; 152
    17c0:	b1 07       	cpc	r27, r17
    17c2:	d9 f7       	brne	.-10     	; 0x17ba <__do_copy_data+0xc>

000017c4 <__do_clear_bss>:
    17c4:	26 e0       	ldi	r18, 0x06	; 6
    17c6:	a8 e9       	ldi	r26, 0x98	; 152
    17c8:	b1 e0       	ldi	r27, 0x01	; 1
    17ca:	01 c0       	rjmp	.+2      	; 0x17ce <.do_clear_bss_start>

000017cc <.do_clear_bss_loop>:
    17cc:	1d 92       	st	X+, r1

000017ce <.do_clear_bss_start>:
    17ce:	a0 33       	cpi	r26, 0x30	; 48
    17d0:	b2 07       	cpc	r27, r18
    17d2:	e1 f7       	brne	.-8      	; 0x17cc <.do_clear_bss_loop>
    17d4:	0e 94 ae 18 	call	0x315c	; 0x315c <main>
    17d8:	0c 94 00 1e 	jmp	0x3c00	; 0x3c00 <_exit>

000017dc <__bad_interrupt>:
    17dc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000017e0 <u8g2_DrawHXBMP>:




void u8g2_DrawHXBMP(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, const uint8_t *b)
{
    17e0:	2f 92       	push	r2
    17e2:	3f 92       	push	r3
    17e4:	4f 92       	push	r4
    17e6:	5f 92       	push	r5
    17e8:	6f 92       	push	r6
    17ea:	7f 92       	push	r7
    17ec:	8f 92       	push	r8
    17ee:	9f 92       	push	r9
    17f0:	af 92       	push	r10
    17f2:	bf 92       	push	r11
    17f4:	cf 92       	push	r12
    17f6:	df 92       	push	r13
    17f8:	ef 92       	push	r14
    17fa:	ff 92       	push	r15
    17fc:	0f 93       	push	r16
    17fe:	1f 93       	push	r17
    1800:	cf 93       	push	r28
    1802:	df 93       	push	r29
    1804:	5c 01       	movw	r10, r24
    1806:	7b 01       	movw	r14, r22
    1808:	4a 01       	movw	r8, r20
    180a:	e9 01       	movw	r28, r18
    180c:	68 01       	movw	r12, r16
  uint8_t mask;
  uint8_t color = u8g2->draw_color;
    180e:	fc 01       	movw	r30, r24
    1810:	ec 58       	subi	r30, 0x8C	; 140
    1812:	ff 4f       	sbci	r31, 0xFF	; 255
    1814:	30 80       	ld	r3, Z
  uint8_t ncolor = (color == 0 ? 1 : 0);
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+len, y+1) == 0 ) 
    1816:	8a 01       	movw	r16, r20
    1818:	0f 5f       	subi	r16, 0xFF	; 255
    181a:	1f 4f       	sbci	r17, 0xFF	; 255
    181c:	9b 01       	movw	r18, r22
    181e:	2c 0f       	add	r18, r28
    1820:	3d 1f       	adc	r19, r29
    1822:	0e 94 5f 12 	call	0x24be	; 0x24be <u8g2_IsIntersection>
    1826:	88 23       	and	r24, r24
    1828:	09 f4       	brne	.+2      	; 0x182c <u8g2_DrawHXBMP+0x4c>
    182a:	3c c0       	rjmp	.+120    	; 0x18a4 <u8g2_DrawHXBMP+0xc4>
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  mask = 1;
  while(len > 0)
    182c:	20 97       	sbiw	r28, 0x00	; 0
    182e:	b1 f1       	breq	.+108    	; 0x189c <u8g2_DrawHXBMP+0xbc>
    1830:	11 e0       	ldi	r17, 0x01	; 1
  {
    if( u8x8_pgm_read(b) & mask ) {
      u8g2->draw_color = color;
      u8g2_DrawHVLine(u8g2, x, y, 1, 0);
    } else if( u8g2->bitmap_transparency == 0 ) {
    1832:	35 01       	movw	r6, r10
    1834:	83 e7       	ldi	r24, 0x73	; 115
    1836:	68 0e       	add	r6, r24
    1838:	71 1c       	adc	r7, r1
      u8g2->draw_color = ncolor;
    183a:	25 01       	movw	r4, r10
    183c:	e4 e7       	ldi	r30, 0x74	; 116
    183e:	4e 0e       	add	r4, r30
    1840:	51 1c       	adc	r5, r1
    1842:	22 24       	eor	r2, r2
    1844:	23 94       	inc	r2
#endif /* U8G2_WITH_INTERSECTION */
  
  mask = 1;
  while(len > 0)
  {
    if( u8x8_pgm_read(b) & mask ) {
    1846:	f6 01       	movw	r30, r12
    1848:	84 91       	lpm	r24, Z
    184a:	81 23       	and	r24, r17
    184c:	59 f0       	breq	.+22     	; 0x1864 <u8g2_DrawHXBMP+0x84>
      u8g2->draw_color = color;
    184e:	f2 01       	movw	r30, r4
    1850:	30 82       	st	Z, r3
      u8g2_DrawHVLine(u8g2, x, y, 1, 0);
    1852:	00 e0       	ldi	r16, 0x00	; 0
    1854:	21 e0       	ldi	r18, 0x01	; 1
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	a4 01       	movw	r20, r8
    185a:	b7 01       	movw	r22, r14
    185c:	c5 01       	movw	r24, r10
    185e:	0e 94 90 11 	call	0x2320	; 0x2320 <u8g2_DrawHVLine>
    1862:	11 c0       	rjmp	.+34     	; 0x1886 <u8g2_DrawHXBMP+0xa6>
    } else if( u8g2->bitmap_transparency == 0 ) {
    1864:	f3 01       	movw	r30, r6
    1866:	80 81       	ld	r24, Z
    1868:	81 11       	cpse	r24, r1
    186a:	0d c0       	rjmp	.+26     	; 0x1886 <u8g2_DrawHXBMP+0xa6>
      u8g2->draw_color = ncolor;
    186c:	82 2d       	mov	r24, r2
    186e:	31 10       	cpse	r3, r1
    1870:	80 e0       	ldi	r24, 0x00	; 0
    1872:	f2 01       	movw	r30, r4
    1874:	80 83       	st	Z, r24
      u8g2_DrawHVLine(u8g2, x, y, 1, 0);
    1876:	00 e0       	ldi	r16, 0x00	; 0
    1878:	21 e0       	ldi	r18, 0x01	; 1
    187a:	30 e0       	ldi	r19, 0x00	; 0
    187c:	a4 01       	movw	r20, r8
    187e:	b7 01       	movw	r22, r14
    1880:	c5 01       	movw	r24, r10
    1882:	0e 94 90 11 	call	0x2320	; 0x2320 <u8g2_DrawHVLine>
    }
   
    x++;
    1886:	ff ef       	ldi	r31, 0xFF	; 255
    1888:	ef 1a       	sub	r14, r31
    188a:	ff 0a       	sbc	r15, r31
    mask <<= 1;
    188c:	11 0f       	add	r17, r17
    if ( mask == 0 )
    188e:	21 f4       	brne	.+8      	; 0x1898 <u8g2_DrawHXBMP+0xb8>
    {
      mask = 1;
      b++;
    1890:	8f ef       	ldi	r24, 0xFF	; 255
    1892:	c8 1a       	sub	r12, r24
    1894:	d8 0a       	sbc	r13, r24
   
    x++;
    mask <<= 1;
    if ( mask == 0 )
    {
      mask = 1;
    1896:	11 e0       	ldi	r17, 0x01	; 1
      b++;
    }
    len--;
    1898:	21 97       	sbiw	r28, 0x01	; 1
  if ( u8g2_IsIntersection(u8g2, x, y, x+len, y+1) == 0 ) 
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  mask = 1;
  while(len > 0)
    189a:	a9 f6       	brne	.-86     	; 0x1846 <u8g2_DrawHXBMP+0x66>
      mask = 1;
      b++;
    }
    len--;
  }
  u8g2->draw_color = color;
    189c:	f5 01       	movw	r30, r10
    189e:	ec 58       	subi	r30, 0x8C	; 140
    18a0:	ff 4f       	sbci	r31, 0xFF	; 255
    18a2:	30 82       	st	Z, r3
}
    18a4:	df 91       	pop	r29
    18a6:	cf 91       	pop	r28
    18a8:	1f 91       	pop	r17
    18aa:	0f 91       	pop	r16
    18ac:	ff 90       	pop	r15
    18ae:	ef 90       	pop	r14
    18b0:	df 90       	pop	r13
    18b2:	cf 90       	pop	r12
    18b4:	bf 90       	pop	r11
    18b6:	af 90       	pop	r10
    18b8:	9f 90       	pop	r9
    18ba:	8f 90       	pop	r8
    18bc:	7f 90       	pop	r7
    18be:	6f 90       	pop	r6
    18c0:	5f 90       	pop	r5
    18c2:	4f 90       	pop	r4
    18c4:	3f 90       	pop	r3
    18c6:	2f 90       	pop	r2
    18c8:	08 95       	ret

000018ca <u8g2_DrawXBMP>:


void u8g2_DrawXBMP(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h, const uint8_t *bitmap)
{
    18ca:	4f 92       	push	r4
    18cc:	5f 92       	push	r5
    18ce:	6f 92       	push	r6
    18d0:	7f 92       	push	r7
    18d2:	8f 92       	push	r8
    18d4:	9f 92       	push	r9
    18d6:	af 92       	push	r10
    18d8:	bf 92       	push	r11
    18da:	cf 92       	push	r12
    18dc:	df 92       	push	r13
    18de:	ef 92       	push	r14
    18e0:	ff 92       	push	r15
    18e2:	0f 93       	push	r16
    18e4:	1f 93       	push	r17
    18e6:	cf 93       	push	r28
    18e8:	df 93       	push	r29
    18ea:	2c 01       	movw	r4, r24
    18ec:	5b 01       	movw	r10, r22
    18ee:	ea 01       	movw	r28, r20
    18f0:	39 01       	movw	r6, r18
    18f2:	68 01       	movw	r12, r16
  u8g2_uint_t blen;
  blen = w;
  blen += 7;
  blen >>= 3;
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
    18f4:	8a 01       	movw	r16, r20
    18f6:	0c 0d       	add	r16, r12
    18f8:	1d 1d       	adc	r17, r13
    18fa:	26 0f       	add	r18, r22
    18fc:	37 1f       	adc	r19, r23
    18fe:	0e 94 5f 12 	call	0x24be	; 0x24be <u8g2_IsIntersection>
    1902:	88 23       	and	r24, r24
    1904:	d9 f0       	breq	.+54     	; 0x193c <u8g2_DrawXBMP+0x72>
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  while( h > 0 )
    1906:	c1 14       	cp	r12, r1
    1908:	d1 04       	cpc	r13, r1
    190a:	c1 f0       	breq	.+48     	; 0x193c <u8g2_DrawXBMP+0x72>

void u8g2_DrawXBMP(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h, const uint8_t *bitmap)
{
  u8g2_uint_t blen;
  blen = w;
  blen += 7;
    190c:	43 01       	movw	r8, r6
    190e:	87 e0       	ldi	r24, 0x07	; 7
    1910:	88 0e       	add	r8, r24
    1912:	91 1c       	adc	r9, r1
  blen >>= 3;
    1914:	96 94       	lsr	r9
    1916:	87 94       	ror	r8
    1918:	96 94       	lsr	r9
    191a:	87 94       	ror	r8
    191c:	96 94       	lsr	r9
    191e:	87 94       	ror	r8
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  while( h > 0 )
  {
    u8g2_DrawHXBMP(u8g2, x, y, w, bitmap);
    1920:	87 01       	movw	r16, r14
    1922:	93 01       	movw	r18, r6
    1924:	ae 01       	movw	r20, r28
    1926:	b5 01       	movw	r22, r10
    1928:	c2 01       	movw	r24, r4
    192a:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <u8g2_DrawHXBMP>
    bitmap += blen;
    192e:	e8 0c       	add	r14, r8
    1930:	f9 1c       	adc	r15, r9
    y++;
    1932:	21 96       	adiw	r28, 0x01	; 1
    h--;
    1934:	81 e0       	ldi	r24, 0x01	; 1
    1936:	c8 1a       	sub	r12, r24
    1938:	d1 08       	sbc	r13, r1
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  while( h > 0 )
    193a:	91 f7       	brne	.-28     	; 0x1920 <u8g2_DrawXBMP+0x56>
    u8g2_DrawHXBMP(u8g2, x, y, w, bitmap);
    bitmap += blen;
    y++;
    h--;
  }
}
    193c:	df 91       	pop	r29
    193e:	cf 91       	pop	r28
    1940:	1f 91       	pop	r17
    1942:	0f 91       	pop	r16
    1944:	ff 90       	pop	r15
    1946:	ef 90       	pop	r14
    1948:	df 90       	pop	r13
    194a:	cf 90       	pop	r12
    194c:	bf 90       	pop	r11
    194e:	af 90       	pop	r10
    1950:	9f 90       	pop	r9
    1952:	8f 90       	pop	r8
    1954:	7f 90       	pop	r7
    1956:	6f 90       	pop	r6
    1958:	5f 90       	pop	r5
    195a:	4f 90       	pop	r4
    195c:	08 95       	ret

0000195e <u8g2_send_buffer>:
  For most displays, this will make the content visible to the user.
  Some displays (like the SSD1606) require a u8x8_RefreshDisplay()
*/
static void u8g2_send_buffer(u8g2_t *u8g2) U8X8_NOINLINE;
static void u8g2_send_buffer(u8g2_t *u8g2)
{
    195e:	af 92       	push	r10
    1960:	bf 92       	push	r11
    1962:	cf 92       	push	r12
    1964:	df 92       	push	r13
    1966:	ef 92       	push	r14
    1968:	ff 92       	push	r15
    196a:	0f 93       	push	r16
    196c:	1f 93       	push	r17
    196e:	cf 93       	push	r28
    1970:	df 93       	push	r29
    1972:	7c 01       	movw	r14, r24
  uint8_t src_max;
  uint8_t dest_row;
  uint8_t dest_max;

  src_row = 0;
  src_max = u8g2->tile_buf_height;
    1974:	dc 01       	movw	r26, r24
    1976:	94 96       	adiw	r26, 0x24	; 36
    1978:	bc 90       	ld	r11, X
    197a:	94 97       	sbiw	r26, 0x24	; 36
  dest_row = u8g2->tile_curr_row;
    197c:	95 96       	adiw	r26, 0x25	; 37
    197e:	dc 91       	ld	r29, X
    1980:	95 97       	sbiw	r26, 0x25	; 37
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
    1982:	ed 91       	ld	r30, X+
    1984:	fc 91       	ld	r31, X
    1986:	a1 88       	ldd	r10, Z+17	; 0x11
  uint8_t dest_row;
  uint8_t dest_max;

  src_row = 0;
  src_max = u8g2->tile_buf_height;
  dest_row = u8g2->tile_curr_row;
    1988:	cd 2f       	mov	r28, r29
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
    198a:	c1 2c       	mov	r12, r1
    198c:	d1 2c       	mov	r13, r1
{
  uint8_t *ptr;
  uint16_t offset;
  uint8_t w;
  
  w = u8g2_GetU8x8(u8g2)->display_info->tile_width;
    198e:	d7 01       	movw	r26, r14
    1990:	ed 91       	ld	r30, X+
    1992:	fc 91       	ld	r31, X
    1994:	11 97       	sbiw	r26, 0x01	; 1
    1996:	20 89       	ldd	r18, Z+16	; 0x10
  offset = src_tile_row;
  ptr = u8g2->tile_buf_ptr;
    1998:	92 96       	adiw	r26, 0x22	; 34
    199a:	0d 91       	ld	r16, X+
    199c:	1c 91       	ld	r17, X
    199e:	93 97       	sbiw	r26, 0x23	; 35
  offset *= w;
  offset *= 8;
  ptr += offset;
  u8x8_DrawTile(u8g2_GetU8x8(u8g2), 0, dest_tile_row, w, ptr);
    19a0:	42 2f       	mov	r20, r18
    19a2:	50 e0       	ldi	r21, 0x00	; 0
    19a4:	44 0f       	add	r20, r20
    19a6:	55 1f       	adc	r21, r21
    19a8:	44 0f       	add	r20, r20
    19aa:	55 1f       	adc	r21, r21
    19ac:	44 0f       	add	r20, r20
    19ae:	55 1f       	adc	r21, r21
    19b0:	4c 9d       	mul	r20, r12
    19b2:	c0 01       	movw	r24, r0
    19b4:	4d 9d       	mul	r20, r13
    19b6:	90 0d       	add	r25, r0
    19b8:	5c 9d       	mul	r21, r12
    19ba:	90 0d       	add	r25, r0
    19bc:	11 24       	eor	r1, r1
    19be:	08 0f       	add	r16, r24
    19c0:	19 1f       	adc	r17, r25
    19c2:	4c 2f       	mov	r20, r28
    19c4:	60 e0       	ldi	r22, 0x00	; 0
    19c6:	c7 01       	movw	r24, r14
    19c8:	0e 94 5a 16 	call	0x2cb4	; 0x2cb4 <u8x8_DrawTile>
  
  do
  {
    u8g2_send_tile_row(u8g2, src_row, dest_row);
    src_row++;
    dest_row++;
    19cc:	cf 5f       	subi	r28, 0xFF	; 255
  } while( src_row < src_max && dest_row < dest_max );
    19ce:	8c 2f       	mov	r24, r28
    19d0:	8d 1b       	sub	r24, r29
    19d2:	8b 15       	cp	r24, r11
    19d4:	28 f4       	brcc	.+10     	; 0x19e0 <u8g2_send_buffer+0x82>
    19d6:	bf ef       	ldi	r27, 0xFF	; 255
    19d8:	cb 1a       	sub	r12, r27
    19da:	db 0a       	sbc	r13, r27
    19dc:	ca 15       	cp	r28, r10
    19de:	b8 f2       	brcs	.-82     	; 0x198e <u8g2_send_buffer+0x30>
}
    19e0:	df 91       	pop	r29
    19e2:	cf 91       	pop	r28
    19e4:	1f 91       	pop	r17
    19e6:	0f 91       	pop	r16
    19e8:	ff 90       	pop	r15
    19ea:	ef 90       	pop	r14
    19ec:	df 90       	pop	r13
    19ee:	cf 90       	pop	r12
    19f0:	bf 90       	pop	r11
    19f2:	af 90       	pop	r10
    19f4:	08 95       	ret

000019f6 <u8g2_ClearBuffer>:
#include "u8g2.h"
#include <string.h>

/*============================================*/
void u8g2_ClearBuffer(u8g2_t *u8g2)
{
    19f6:	fc 01       	movw	r30, r24
  size_t cnt;
  cnt = u8g2_GetU8x8(u8g2)->display_info->tile_width;
    19f8:	a0 81       	ld	r26, Z
    19fa:	b1 81       	ldd	r27, Z+1	; 0x01
    19fc:	50 96       	adiw	r26, 0x10	; 16
    19fe:	9c 91       	ld	r25, X
  cnt *= u8g2->tile_buf_height;
    1a00:	44 a1       	ldd	r20, Z+36	; 0x24
    1a02:	94 9f       	mul	r25, r20
    1a04:	a0 01       	movw	r20, r0
    1a06:	11 24       	eor	r1, r1
  cnt *= 8;
  memset(u8g2->tile_buf_ptr, 0, cnt);
    1a08:	44 0f       	add	r20, r20
    1a0a:	55 1f       	adc	r21, r21
    1a0c:	44 0f       	add	r20, r20
    1a0e:	55 1f       	adc	r21, r21
    1a10:	44 0f       	add	r20, r20
    1a12:	55 1f       	adc	r21, r21
    1a14:	60 e0       	ldi	r22, 0x00	; 0
    1a16:	70 e0       	ldi	r23, 0x00	; 0
    1a18:	82 a1       	ldd	r24, Z+34	; 0x22
    1a1a:	93 a1       	ldd	r25, Z+35	; 0x23
    1a1c:	0e 94 ee 1d 	call	0x3bdc	; 0x3bdc <memset>
    1a20:	08 95       	ret

00001a22 <u8g2_SendBuffer>:
  } while( src_row < src_max && dest_row < dest_max );
}

/* same as u8g2_send_buffer but also send the DISPLAY_REFRESH message (used by SSD1606) */
void u8g2_SendBuffer(u8g2_t *u8g2)
{
    1a22:	cf 93       	push	r28
    1a24:	df 93       	push	r29
    1a26:	ec 01       	movw	r28, r24
  u8g2_send_buffer(u8g2);
    1a28:	0e 94 af 0c 	call	0x195e	; 0x195e <u8g2_send_buffer>
  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  
    1a2c:	ce 01       	movw	r24, r28
    1a2e:	0e 94 9e 16 	call	0x2d3c	; 0x2d3c <u8x8_RefreshDisplay>
}
    1a32:	df 91       	pop	r29
    1a34:	cf 91       	pop	r28
    1a36:	08 95       	ret

00001a38 <u8g2_m_16_8_f>:
  #ifdef U8G2_USE_DYNAMIC_ALLOC
  *page_cnt = 8;
  return 0;
  #else
  static uint8_t buf[1024];
  *page_cnt = 8;
    1a38:	28 e0       	ldi	r18, 0x08	; 8
    1a3a:	fc 01       	movw	r30, r24
    1a3c:	20 83       	st	Z, r18
  return buf;
  #endif
}
    1a3e:	88 e9       	ldi	r24, 0x98	; 152
    1a40:	91 e0       	ldi	r25, 0x01	; 1
    1a42:	08 95       	ret

00001a44 <u8g2_Setup_sh1106_i2c_128x64_noname_f>:
  buf = u8g2_m_16_8_2(&tile_buf_height);
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
}
/* sh1106 f */
void u8g2_Setup_sh1106_i2c_128x64_noname_f(u8g2_t *u8g2, const u8g2_cb_t *rotation, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    1a44:	cf 92       	push	r12
    1a46:	df 92       	push	r13
    1a48:	ef 92       	push	r14
    1a4a:	ff 92       	push	r15
    1a4c:	0f 93       	push	r16
    1a4e:	1f 93       	push	r17
    1a50:	cf 93       	push	r28
    1a52:	df 93       	push	r29
    1a54:	1f 92       	push	r1
    1a56:	cd b7       	in	r28, 0x3d	; 61
    1a58:	de b7       	in	r29, 0x3e	; 62
    1a5a:	7c 01       	movw	r14, r24
    1a5c:	6b 01       	movw	r12, r22
  uint8_t tile_buf_height;
  uint8_t *buf;
  u8g2_SetupDisplay(u8g2, u8x8_d_sh1106_128x64_noname, u8x8_cad_ssd13xx_fast_i2c, byte_cb, gpio_and_delay_cb);
    1a5e:	89 01       	movw	r16, r18
    1a60:	9a 01       	movw	r18, r20
    1a62:	4f e9       	ldi	r20, 0x9F	; 159
    1a64:	55 e1       	ldi	r21, 0x15	; 21
    1a66:	62 e3       	ldi	r22, 0x32	; 50
    1a68:	77 e1       	ldi	r23, 0x17	; 23
    1a6a:	0e 94 77 17 	call	0x2eee	; 0x2eee <u8x8_Setup>
  buf = u8g2_m_16_8_f(&tile_buf_height);
    1a6e:	ce 01       	movw	r24, r28
    1a70:	01 96       	adiw	r24, 0x01	; 1
    1a72:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <u8g2_m_16_8_f>
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
    1a76:	86 01       	movw	r16, r12
    1a78:	2b e4       	ldi	r18, 0x4B	; 75
    1a7a:	33 e1       	ldi	r19, 0x13	; 19
    1a7c:	49 81       	ldd	r20, Y+1	; 0x01
    1a7e:	bc 01       	movw	r22, r24
    1a80:	c7 01       	movw	r24, r14
    1a82:	0e 94 88 14 	call	0x2910	; 0x2910 <u8g2_SetupBuffer>
}
    1a86:	0f 90       	pop	r0
    1a88:	df 91       	pop	r29
    1a8a:	cf 91       	pop	r28
    1a8c:	1f 91       	pop	r17
    1a8e:	0f 91       	pop	r16
    1a90:	ff 90       	pop	r15
    1a92:	ef 90       	pop	r14
    1a94:	df 90       	pop	r13
    1a96:	cf 90       	pop	r12
    1a98:	08 95       	ret

00001a9a <u8g2_font_get_word>:
  return tmp;
}

void u8g2_SetFontPosCenter(u8g2_t *u8g2)
{
  u8g2->font_calc_vref = u8g2_font_calc_vref_center;
    1a9a:	fc 01       	movw	r30, r24
    1a9c:	e6 0f       	add	r30, r22
    1a9e:	f1 1d       	adc	r31, r1
    1aa0:	84 91       	lpm	r24, Z
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	98 2f       	mov	r25, r24
    1aa6:	88 27       	eor	r24, r24
    1aa8:	31 96       	adiw	r30, 0x01	; 1
    1aaa:	e4 91       	lpm	r30, Z
    1aac:	8e 0f       	add	r24, r30
    1aae:	91 1d       	adc	r25, r1
    1ab0:	08 95       	ret

00001ab2 <u8g2_font_calc_vref_font>:
    1ab2:	80 e0       	ldi	r24, 0x00	; 0
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	08 95       	ret

00001ab8 <u8g2_font_calc_vref_top>:
    1ab8:	80 59       	subi	r24, 0x90	; 144
    1aba:	9f 4f       	sbci	r25, 0xFF	; 255
    1abc:	fc 01       	movw	r30, r24
    1abe:	80 81       	ld	r24, Z
    1ac0:	08 2e       	mov	r0, r24
    1ac2:	00 0c       	add	r0, r0
    1ac4:	99 0b       	sbc	r25, r25
    1ac6:	01 96       	adiw	r24, 0x01	; 1
    1ac8:	08 95       	ret

00001aca <u8g2_read_font_info>:
    1aca:	0f 93       	push	r16
    1acc:	1f 93       	push	r17
    1ace:	cf 93       	push	r28
    1ad0:	df 93       	push	r29
    1ad2:	ec 01       	movw	r28, r24
    1ad4:	8b 01       	movw	r16, r22
    1ad6:	fb 01       	movw	r30, r22
    1ad8:	84 91       	lpm	r24, Z
    1ada:	88 83       	st	Y, r24
    1adc:	31 96       	adiw	r30, 0x01	; 1
    1ade:	e4 91       	lpm	r30, Z
    1ae0:	e9 83       	std	Y+1, r30	; 0x01
    1ae2:	fb 01       	movw	r30, r22
    1ae4:	32 96       	adiw	r30, 0x02	; 2
    1ae6:	e4 91       	lpm	r30, Z
    1ae8:	ea 83       	std	Y+2, r30	; 0x02
    1aea:	fb 01       	movw	r30, r22
    1aec:	33 96       	adiw	r30, 0x03	; 3
    1aee:	e4 91       	lpm	r30, Z
    1af0:	eb 83       	std	Y+3, r30	; 0x03
    1af2:	fb 01       	movw	r30, r22
    1af4:	34 96       	adiw	r30, 0x04	; 4
    1af6:	e4 91       	lpm	r30, Z
    1af8:	ec 83       	std	Y+4, r30	; 0x04
    1afa:	fb 01       	movw	r30, r22
    1afc:	35 96       	adiw	r30, 0x05	; 5
    1afe:	e4 91       	lpm	r30, Z
    1b00:	ed 83       	std	Y+5, r30	; 0x05
    1b02:	fb 01       	movw	r30, r22
    1b04:	36 96       	adiw	r30, 0x06	; 6
    1b06:	e4 91       	lpm	r30, Z
    1b08:	ee 83       	std	Y+6, r30	; 0x06
    1b0a:	fb 01       	movw	r30, r22
    1b0c:	37 96       	adiw	r30, 0x07	; 7
    1b0e:	e4 91       	lpm	r30, Z
    1b10:	ef 83       	std	Y+7, r30	; 0x07
    1b12:	fb 01       	movw	r30, r22
    1b14:	38 96       	adiw	r30, 0x08	; 8
    1b16:	e4 91       	lpm	r30, Z
    1b18:	e8 87       	std	Y+8, r30	; 0x08
    1b1a:	fb 01       	movw	r30, r22
    1b1c:	39 96       	adiw	r30, 0x09	; 9
    1b1e:	e4 91       	lpm	r30, Z
    1b20:	e9 87       	std	Y+9, r30	; 0x09
    1b22:	fb 01       	movw	r30, r22
    1b24:	3a 96       	adiw	r30, 0x0a	; 10
    1b26:	e4 91       	lpm	r30, Z
    1b28:	ea 87       	std	Y+10, r30	; 0x0a
    1b2a:	fb 01       	movw	r30, r22
    1b2c:	3b 96       	adiw	r30, 0x0b	; 11
    1b2e:	e4 91       	lpm	r30, Z
    1b30:	eb 87       	std	Y+11, r30	; 0x0b
    1b32:	fb 01       	movw	r30, r22
    1b34:	3c 96       	adiw	r30, 0x0c	; 12
    1b36:	e4 91       	lpm	r30, Z
    1b38:	ec 87       	std	Y+12, r30	; 0x0c
    1b3a:	fb 01       	movw	r30, r22
    1b3c:	3d 96       	adiw	r30, 0x0d	; 13
    1b3e:	e4 91       	lpm	r30, Z
    1b40:	ed 87       	std	Y+13, r30	; 0x0d
    1b42:	fb 01       	movw	r30, r22
    1b44:	3e 96       	adiw	r30, 0x0e	; 14
    1b46:	e4 91       	lpm	r30, Z
    1b48:	ee 87       	std	Y+14, r30	; 0x0e
    1b4a:	fb 01       	movw	r30, r22
    1b4c:	3f 96       	adiw	r30, 0x0f	; 15
    1b4e:	e4 91       	lpm	r30, Z
    1b50:	ef 87       	std	Y+15, r30	; 0x0f
    1b52:	fb 01       	movw	r30, r22
    1b54:	70 96       	adiw	r30, 0x10	; 16
    1b56:	e4 91       	lpm	r30, Z
    1b58:	e8 8b       	std	Y+16, r30	; 0x10
    1b5a:	61 e1       	ldi	r22, 0x11	; 17
    1b5c:	c8 01       	movw	r24, r16
    1b5e:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <u8g2_font_get_word>
    1b62:	9a 8b       	std	Y+18, r25	; 0x12
    1b64:	89 8b       	std	Y+17, r24	; 0x11
    1b66:	63 e1       	ldi	r22, 0x13	; 19
    1b68:	c8 01       	movw	r24, r16
    1b6a:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <u8g2_font_get_word>
    1b6e:	9c 8b       	std	Y+20, r25	; 0x14
    1b70:	8b 8b       	std	Y+19, r24	; 0x13
    1b72:	65 e1       	ldi	r22, 0x15	; 21
    1b74:	c8 01       	movw	r24, r16
    1b76:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <u8g2_font_get_word>
    1b7a:	9e 8b       	std	Y+22, r25	; 0x16
    1b7c:	8d 8b       	std	Y+21, r24	; 0x15
    1b7e:	df 91       	pop	r29
    1b80:	cf 91       	pop	r28
    1b82:	1f 91       	pop	r17
    1b84:	0f 91       	pop	r16
    1b86:	08 95       	ret

00001b88 <u8g2_font_decode_get_unsigned_bits>:
    1b88:	dc 01       	movw	r26, r24
    1b8a:	1a 96       	adiw	r26, 0x0a	; 10
    1b8c:	9c 91       	ld	r25, X
    1b8e:	1a 97       	sbiw	r26, 0x0a	; 10
    1b90:	ed 91       	ld	r30, X+
    1b92:	fc 91       	ld	r31, X
    1b94:	11 97       	sbiw	r26, 0x01	; 1
    1b96:	24 91       	lpm	r18, Z
    1b98:	30 e0       	ldi	r19, 0x00	; 0
    1b9a:	09 2e       	mov	r0, r25
    1b9c:	02 c0       	rjmp	.+4      	; 0x1ba2 <u8g2_font_decode_get_unsigned_bits+0x1a>
    1b9e:	35 95       	asr	r19
    1ba0:	27 95       	ror	r18
    1ba2:	0a 94       	dec	r0
    1ba4:	e2 f7       	brpl	.-8      	; 0x1b9e <u8g2_font_decode_get_unsigned_bits+0x16>
    1ba6:	89 2f       	mov	r24, r25
    1ba8:	86 0f       	add	r24, r22
    1baa:	88 30       	cpi	r24, 0x08	; 8
    1bac:	10 f4       	brcc	.+4      	; 0x1bb2 <u8g2_font_decode_get_unsigned_bits+0x2a>
    1bae:	e2 2f       	mov	r30, r18
    1bb0:	0f c0       	rjmp	.+30     	; 0x1bd0 <u8g2_font_decode_get_unsigned_bits+0x48>
    1bb2:	31 96       	adiw	r30, 0x01	; 1
    1bb4:	11 96       	adiw	r26, 0x01	; 1
    1bb6:	fc 93       	st	X, r31
    1bb8:	ee 93       	st	-X, r30
    1bba:	e4 91       	lpm	r30, Z
    1bbc:	f0 e0       	ldi	r31, 0x00	; 0
    1bbe:	38 e0       	ldi	r19, 0x08	; 8
    1bc0:	39 1b       	sub	r19, r25
    1bc2:	02 c0       	rjmp	.+4      	; 0x1bc8 <u8g2_font_decode_get_unsigned_bits+0x40>
    1bc4:	ee 0f       	add	r30, r30
    1bc6:	ff 1f       	adc	r31, r31
    1bc8:	3a 95       	dec	r19
    1bca:	e2 f7       	brpl	.-8      	; 0x1bc4 <u8g2_font_decode_get_unsigned_bits+0x3c>
    1bcc:	e2 2b       	or	r30, r18
    1bce:	88 50       	subi	r24, 0x08	; 8
    1bd0:	1a 96       	adiw	r26, 0x0a	; 10
    1bd2:	8c 93       	st	X, r24
    1bd4:	81 e0       	ldi	r24, 0x01	; 1
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	02 c0       	rjmp	.+4      	; 0x1bde <u8g2_font_decode_get_unsigned_bits+0x56>
    1bda:	88 0f       	add	r24, r24
    1bdc:	99 1f       	adc	r25, r25
    1bde:	6a 95       	dec	r22
    1be0:	e2 f7       	brpl	.-8      	; 0x1bda <u8g2_font_decode_get_unsigned_bits+0x52>
    1be2:	81 50       	subi	r24, 0x01	; 1
    1be4:	8e 23       	and	r24, r30
    1be6:	08 95       	ret

00001be8 <u8g2_font_setup_decode>:
    1be8:	0f 93       	push	r16
    1bea:	1f 93       	push	r17
    1bec:	cf 93       	push	r28
    1bee:	df 93       	push	r29
    1bf0:	8c 01       	movw	r16, r24
    1bf2:	ec 01       	movw	r28, r24
    1bf4:	c8 5b       	subi	r28, 0xB8	; 184
    1bf6:	df 4f       	sbci	r29, 0xFF	; 255
    1bf8:	79 83       	std	Y+1, r23	; 0x01
    1bfa:	68 83       	st	Y, r22
    1bfc:	1a 86       	std	Y+10, r1	; 0x0a
    1bfe:	fc 01       	movw	r30, r24
    1c00:	e5 5a       	subi	r30, 0xA5	; 165
    1c02:	ff 4f       	sbci	r31, 0xFF	; 255
    1c04:	60 81       	ld	r22, Z
    1c06:	ce 01       	movw	r24, r28
    1c08:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <u8g2_font_decode_get_unsigned_bits>
    1c0c:	88 87       	std	Y+8, r24	; 0x08
    1c0e:	f8 01       	movw	r30, r16
    1c10:	e4 5a       	subi	r30, 0xA4	; 164
    1c12:	ff 4f       	sbci	r31, 0xFF	; 255
    1c14:	60 81       	ld	r22, Z
    1c16:	ce 01       	movw	r24, r28
    1c18:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <u8g2_font_decode_get_unsigned_bits>
    1c1c:	89 87       	std	Y+9, r24	; 0x09
    1c1e:	f8 01       	movw	r30, r16
    1c20:	ec 58       	subi	r30, 0x8C	; 140
    1c22:	ff 4f       	sbci	r31, 0xFF	; 255
    1c24:	80 81       	ld	r24, Z
    1c26:	8c 87       	std	Y+12, r24	; 0x0c
    1c28:	91 e0       	ldi	r25, 0x01	; 1
    1c2a:	81 11       	cpse	r24, r1
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	9d 87       	std	Y+13, r25	; 0x0d
    1c30:	df 91       	pop	r29
    1c32:	cf 91       	pop	r28
    1c34:	1f 91       	pop	r17
    1c36:	0f 91       	pop	r16
    1c38:	08 95       	ret

00001c3a <u8g2_font_decode_get_signed_bits>:
    1c3a:	cf 93       	push	r28
    1c3c:	c6 2f       	mov	r28, r22
    1c3e:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <u8g2_font_decode_get_unsigned_bits>
    1c42:	c1 50       	subi	r28, 0x01	; 1
    1c44:	21 e0       	ldi	r18, 0x01	; 1
    1c46:	30 e0       	ldi	r19, 0x00	; 0
    1c48:	02 c0       	rjmp	.+4      	; 0x1c4e <u8g2_font_decode_get_signed_bits+0x14>
    1c4a:	22 0f       	add	r18, r18
    1c4c:	33 1f       	adc	r19, r19
    1c4e:	ca 95       	dec	r28
    1c50:	e2 f7       	brpl	.-8      	; 0x1c4a <u8g2_font_decode_get_signed_bits+0x10>
    1c52:	82 1b       	sub	r24, r18
    1c54:	cf 91       	pop	r28
    1c56:	08 95       	ret

00001c58 <u8g2_add_vector_y>:
    1c58:	21 30       	cpi	r18, 0x01	; 1
    1c5a:	49 f0       	breq	.+18     	; 0x1c6e <u8g2_add_vector_y+0x16>
    1c5c:	18 f0       	brcs	.+6      	; 0x1c64 <u8g2_add_vector_y+0xc>
    1c5e:	22 30       	cpi	r18, 0x02	; 2
    1c60:	59 f0       	breq	.+22     	; 0x1c78 <u8g2_add_vector_y+0x20>
    1c62:	0f c0       	rjmp	.+30     	; 0x1c82 <u8g2_add_vector_y+0x2a>
    1c64:	84 0f       	add	r24, r20
    1c66:	91 1d       	adc	r25, r1
    1c68:	47 fd       	sbrc	r20, 7
    1c6a:	9a 95       	dec	r25
    1c6c:	08 95       	ret
    1c6e:	86 0f       	add	r24, r22
    1c70:	91 1d       	adc	r25, r1
    1c72:	67 fd       	sbrc	r22, 7
    1c74:	9a 95       	dec	r25
    1c76:	08 95       	ret
    1c78:	84 1b       	sub	r24, r20
    1c7a:	91 09       	sbc	r25, r1
    1c7c:	47 fd       	sbrc	r20, 7
    1c7e:	93 95       	inc	r25
    1c80:	08 95       	ret
    1c82:	86 1b       	sub	r24, r22
    1c84:	91 09       	sbc	r25, r1
    1c86:	67 fd       	sbrc	r22, 7
    1c88:	93 95       	inc	r25
    1c8a:	08 95       	ret

00001c8c <u8g2_add_vector_x>:
    1c8c:	21 30       	cpi	r18, 0x01	; 1
    1c8e:	49 f0       	breq	.+18     	; 0x1ca2 <u8g2_add_vector_x+0x16>
    1c90:	18 f0       	brcs	.+6      	; 0x1c98 <u8g2_add_vector_x+0xc>
    1c92:	22 30       	cpi	r18, 0x02	; 2
    1c94:	59 f0       	breq	.+22     	; 0x1cac <u8g2_add_vector_x+0x20>
    1c96:	0f c0       	rjmp	.+30     	; 0x1cb6 <u8g2_add_vector_x+0x2a>
    1c98:	86 0f       	add	r24, r22
    1c9a:	91 1d       	adc	r25, r1
    1c9c:	67 fd       	sbrc	r22, 7
    1c9e:	9a 95       	dec	r25
    1ca0:	08 95       	ret
    1ca2:	84 1b       	sub	r24, r20
    1ca4:	91 09       	sbc	r25, r1
    1ca6:	47 fd       	sbrc	r20, 7
    1ca8:	93 95       	inc	r25
    1caa:	08 95       	ret
    1cac:	86 1b       	sub	r24, r22
    1cae:	91 09       	sbc	r25, r1
    1cb0:	67 fd       	sbrc	r22, 7
    1cb2:	93 95       	inc	r25
    1cb4:	08 95       	ret
    1cb6:	84 0f       	add	r24, r20
    1cb8:	91 1d       	adc	r25, r1
    1cba:	47 fd       	sbrc	r20, 7
    1cbc:	9a 95       	dec	r25
    1cbe:	08 95       	ret

00001cc0 <u8g2_font_decode_len>:
    1cc0:	2f 92       	push	r2
    1cc2:	3f 92       	push	r3
    1cc4:	4f 92       	push	r4
    1cc6:	5f 92       	push	r5
    1cc8:	6f 92       	push	r6
    1cca:	7f 92       	push	r7
    1ccc:	8f 92       	push	r8
    1cce:	9f 92       	push	r9
    1cd0:	af 92       	push	r10
    1cd2:	bf 92       	push	r11
    1cd4:	cf 92       	push	r12
    1cd6:	df 92       	push	r13
    1cd8:	ef 92       	push	r14
    1cda:	ff 92       	push	r15
    1cdc:	0f 93       	push	r16
    1cde:	1f 93       	push	r17
    1ce0:	cf 93       	push	r28
    1ce2:	df 93       	push	r29
    1ce4:	4c 01       	movw	r8, r24
    1ce6:	d6 2f       	mov	r29, r22
    1ce8:	34 2e       	mov	r3, r20
    1cea:	fc 01       	movw	r30, r24
    1cec:	e8 5b       	subi	r30, 0xB8	; 184
    1cee:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf0:	56 80       	ldd	r5, Z+6	; 0x06
    1cf2:	17 81       	ldd	r17, Z+7	; 0x07
    1cf4:	7f 01       	movw	r14, r30
    1cf6:	3c 01       	movw	r6, r24
    1cf8:	e4 e7       	ldi	r30, 0x74	; 116
    1cfa:	6e 0e       	add	r6, r30
    1cfc:	71 1c       	adc	r7, r1
    1cfe:	f7 01       	movw	r30, r14
    1d00:	c0 85       	ldd	r28, Z+8	; 0x08
    1d02:	c5 19       	sub	r28, r5
    1d04:	2d 2e       	mov	r2, r29
    1d06:	cd 17       	cp	r28, r29
    1d08:	08 f4       	brcc	.+2      	; 0x1d0c <u8g2_font_decode_len+0x4c>
    1d0a:	2c 2e       	mov	r2, r28
    1d0c:	f7 01       	movw	r30, r14
    1d0e:	c4 80       	ldd	r12, Z+4	; 0x04
    1d10:	d5 80       	ldd	r13, Z+5	; 0x05
    1d12:	06 85       	ldd	r16, Z+14	; 0x0e
    1d14:	41 2e       	mov	r4, r17
    1d16:	20 2f       	mov	r18, r16
    1d18:	41 2f       	mov	r20, r17
    1d1a:	65 2d       	mov	r22, r5
    1d1c:	82 81       	ldd	r24, Z+2	; 0x02
    1d1e:	93 81       	ldd	r25, Z+3	; 0x03
    1d20:	0e 94 46 0e 	call	0x1c8c	; 0x1c8c <u8g2_add_vector_x>
    1d24:	5c 01       	movw	r10, r24
    1d26:	20 2f       	mov	r18, r16
    1d28:	41 2f       	mov	r20, r17
    1d2a:	65 2d       	mov	r22, r5
    1d2c:	c6 01       	movw	r24, r12
    1d2e:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <u8g2_add_vector_y>
    1d32:	33 20       	and	r3, r3
    1d34:	61 f0       	breq	.+24     	; 0x1d4e <u8g2_font_decode_len+0x8e>
    1d36:	f7 01       	movw	r30, r14
    1d38:	24 85       	ldd	r18, Z+12	; 0x0c
    1d3a:	f3 01       	movw	r30, r6
    1d3c:	20 83       	st	Z, r18
    1d3e:	22 2d       	mov	r18, r2
    1d40:	30 e0       	ldi	r19, 0x00	; 0
    1d42:	ac 01       	movw	r20, r24
    1d44:	b5 01       	movw	r22, r10
    1d46:	c4 01       	movw	r24, r8
    1d48:	0e 94 90 11 	call	0x2320	; 0x2320 <u8g2_DrawHVLine>
    1d4c:	0e c0       	rjmp	.+28     	; 0x1d6a <u8g2_font_decode_len+0xaa>
    1d4e:	f7 01       	movw	r30, r14
    1d50:	23 85       	ldd	r18, Z+11	; 0x0b
    1d52:	21 11       	cpse	r18, r1
    1d54:	0a c0       	rjmp	.+20     	; 0x1d6a <u8g2_font_decode_len+0xaa>
    1d56:	25 85       	ldd	r18, Z+13	; 0x0d
    1d58:	f3 01       	movw	r30, r6
    1d5a:	20 83       	st	Z, r18
    1d5c:	22 2d       	mov	r18, r2
    1d5e:	30 e0       	ldi	r19, 0x00	; 0
    1d60:	ac 01       	movw	r20, r24
    1d62:	b5 01       	movw	r22, r10
    1d64:	c4 01       	movw	r24, r8
    1d66:	0e 94 90 11 	call	0x2320	; 0x2320 <u8g2_DrawHVLine>
    1d6a:	dc 17       	cp	r29, r28
    1d6c:	20 f0       	brcs	.+8      	; 0x1d76 <u8g2_font_decode_len+0xb6>
    1d6e:	dc 1b       	sub	r29, r28
    1d70:	1f 5f       	subi	r17, 0xFF	; 255
    1d72:	51 2c       	mov	r5, r1
    1d74:	c4 cf       	rjmp	.-120    	; 0x1cfe <u8g2_font_decode_len+0x3e>
    1d76:	f4 01       	movw	r30, r8
    1d78:	e8 5b       	subi	r30, 0xB8	; 184
    1d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7c:	d5 0d       	add	r29, r5
    1d7e:	d6 83       	std	Z+6, r29	; 0x06
    1d80:	47 82       	std	Z+7, r4	; 0x07
    1d82:	df 91       	pop	r29
    1d84:	cf 91       	pop	r28
    1d86:	1f 91       	pop	r17
    1d88:	0f 91       	pop	r16
    1d8a:	ff 90       	pop	r15
    1d8c:	ef 90       	pop	r14
    1d8e:	df 90       	pop	r13
    1d90:	cf 90       	pop	r12
    1d92:	bf 90       	pop	r11
    1d94:	af 90       	pop	r10
    1d96:	9f 90       	pop	r9
    1d98:	8f 90       	pop	r8
    1d9a:	7f 90       	pop	r7
    1d9c:	6f 90       	pop	r6
    1d9e:	5f 90       	pop	r5
    1da0:	4f 90       	pop	r4
    1da2:	3f 90       	pop	r3
    1da4:	2f 90       	pop	r2
    1da6:	08 95       	ret

00001da8 <u8g2_font_decode_glyph>:
    1da8:	6f 92       	push	r6
    1daa:	7f 92       	push	r7
    1dac:	8f 92       	push	r8
    1dae:	9f 92       	push	r9
    1db0:	af 92       	push	r10
    1db2:	bf 92       	push	r11
    1db4:	cf 92       	push	r12
    1db6:	df 92       	push	r13
    1db8:	ef 92       	push	r14
    1dba:	ff 92       	push	r15
    1dbc:	0f 93       	push	r16
    1dbe:	1f 93       	push	r17
    1dc0:	cf 93       	push	r28
    1dc2:	df 93       	push	r29
    1dc4:	ec 01       	movw	r28, r24
    1dc6:	7c 01       	movw	r14, r24
    1dc8:	88 e4       	ldi	r24, 0x48	; 72
    1dca:	e8 0e       	add	r14, r24
    1dcc:	f1 1c       	adc	r15, r1
    1dce:	ce 01       	movw	r24, r28
    1dd0:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <u8g2_font_setup_decode>
    1dd4:	fe 01       	movw	r30, r28
    1dd6:	ef 5a       	subi	r30, 0xAF	; 175
    1dd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dda:	60 80       	ld	r6, Z
    1ddc:	3c 96       	adiw	r30, 0x0c	; 12
    1dde:	60 81       	ld	r22, Z
    1de0:	c7 01       	movw	r24, r14
    1de2:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <u8g2_font_decode_get_signed_bits>
    1de6:	98 2e       	mov	r9, r24
    1de8:	fe 01       	movw	r30, r28
    1dea:	e2 5a       	subi	r30, 0xA2	; 162
    1dec:	ff 4f       	sbci	r31, 0xFF	; 255
    1dee:	60 81       	ld	r22, Z
    1df0:	c7 01       	movw	r24, r14
    1df2:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <u8g2_font_decode_get_signed_bits>
    1df6:	18 2f       	mov	r17, r24
    1df8:	fe 01       	movw	r30, r28
    1dfa:	e1 5a       	subi	r30, 0xA1	; 161
    1dfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dfe:	60 81       	ld	r22, Z
    1e00:	c7 01       	movw	r24, r14
    1e02:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <u8g2_font_decode_get_signed_bits>
    1e06:	78 2e       	mov	r7, r24
    1e08:	f7 01       	movw	r30, r14
    1e0a:	80 84       	ldd	r8, Z+8	; 0x08
    1e0c:	18 14       	cp	r1, r8
    1e0e:	0c f0       	brlt	.+2      	; 0x1e12 <u8g2_font_decode_glyph+0x6a>
    1e10:	a4 c0       	rjmp	.+328    	; 0x1f5a <u8g2_font_decode_glyph+0x1b2>
    1e12:	06 85       	ldd	r16, Z+14	; 0x0e
    1e14:	16 0d       	add	r17, r6
    1e16:	11 95       	neg	r17
    1e18:	20 2f       	mov	r18, r16
    1e1a:	41 2f       	mov	r20, r17
    1e1c:	69 2d       	mov	r22, r9
    1e1e:	82 81       	ldd	r24, Z+2	; 0x02
    1e20:	93 81       	ldd	r25, Z+3	; 0x03
    1e22:	0e 94 46 0e 	call	0x1c8c	; 0x1c8c <u8g2_add_vector_x>
    1e26:	6c 01       	movw	r12, r24
    1e28:	f7 01       	movw	r30, r14
    1e2a:	93 83       	std	Z+3, r25	; 0x03
    1e2c:	82 83       	std	Z+2, r24	; 0x02
    1e2e:	20 2f       	mov	r18, r16
    1e30:	41 2f       	mov	r20, r17
    1e32:	69 2d       	mov	r22, r9
    1e34:	84 81       	ldd	r24, Z+4	; 0x04
    1e36:	95 81       	ldd	r25, Z+5	; 0x05
    1e38:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <u8g2_add_vector_y>
    1e3c:	f7 01       	movw	r30, r14
    1e3e:	95 83       	std	Z+5, r25	; 0x05
    1e40:	84 83       	std	Z+4, r24	; 0x04
    1e42:	01 30       	cpi	r16, 0x01	; 1
    1e44:	89 f0       	breq	.+34     	; 0x1e68 <u8g2_font_decode_glyph+0xc0>
    1e46:	28 f0       	brcs	.+10     	; 0x1e52 <u8g2_font_decode_glyph+0xaa>
    1e48:	02 30       	cpi	r16, 0x02	; 2
    1e4a:	f9 f0       	breq	.+62     	; 0x1e8a <u8g2_font_decode_glyph+0xe2>
    1e4c:	03 30       	cpi	r16, 0x03	; 3
    1e4e:	99 f1       	breq	.+102    	; 0x1eb6 <u8g2_font_decode_glyph+0x10e>
    1e50:	43 c0       	rjmp	.+134    	; 0x1ed8 <u8g2_font_decode_glyph+0x130>
    1e52:	96 01       	movw	r18, r12
    1e54:	28 0d       	add	r18, r8
    1e56:	31 1d       	adc	r19, r1
    1e58:	87 fc       	sbrc	r8, 7
    1e5a:	3a 95       	dec	r19
    1e5c:	8c 01       	movw	r16, r24
    1e5e:	06 0d       	add	r16, r6
    1e60:	11 1d       	adc	r17, r1
    1e62:	67 fc       	sbrc	r6, 7
    1e64:	1a 95       	dec	r17
    1e66:	3a c0       	rjmp	.+116    	; 0x1edc <u8g2_font_decode_glyph+0x134>
    1e68:	41 e0       	ldi	r20, 0x01	; 1
    1e6a:	50 e0       	ldi	r21, 0x00	; 0
    1e6c:	46 19       	sub	r20, r6
    1e6e:	51 09       	sbc	r21, r1
    1e70:	67 fc       	sbrc	r6, 7
    1e72:	53 95       	inc	r21
    1e74:	96 01       	movw	r18, r12
    1e76:	2f 5f       	subi	r18, 0xFF	; 255
    1e78:	3f 4f       	sbci	r19, 0xFF	; 255
    1e7a:	8c 01       	movw	r16, r24
    1e7c:	08 0d       	add	r16, r8
    1e7e:	11 1d       	adc	r17, r1
    1e80:	87 fc       	sbrc	r8, 7
    1e82:	1a 95       	dec	r17
    1e84:	c4 0e       	add	r12, r20
    1e86:	d5 1e       	adc	r13, r21
    1e88:	29 c0       	rjmp	.+82     	; 0x1edc <u8g2_font_decode_glyph+0x134>
    1e8a:	41 e0       	ldi	r20, 0x01	; 1
    1e8c:	50 e0       	ldi	r21, 0x00	; 0
    1e8e:	ba 01       	movw	r22, r20
    1e90:	68 19       	sub	r22, r8
    1e92:	71 09       	sbc	r23, r1
    1e94:	87 fc       	sbrc	r8, 7
    1e96:	73 95       	inc	r23
    1e98:	96 01       	movw	r18, r12
    1e9a:	2f 5f       	subi	r18, 0xFF	; 255
    1e9c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e9e:	46 19       	sub	r20, r6
    1ea0:	51 09       	sbc	r21, r1
    1ea2:	67 fc       	sbrc	r6, 7
    1ea4:	53 95       	inc	r21
    1ea6:	8c 01       	movw	r16, r24
    1ea8:	0f 5f       	subi	r16, 0xFF	; 255
    1eaa:	1f 4f       	sbci	r17, 0xFF	; 255
    1eac:	84 0f       	add	r24, r20
    1eae:	95 1f       	adc	r25, r21
    1eb0:	c6 0e       	add	r12, r22
    1eb2:	d7 1e       	adc	r13, r23
    1eb4:	13 c0       	rjmp	.+38     	; 0x1edc <u8g2_font_decode_glyph+0x134>
    1eb6:	96 01       	movw	r18, r12
    1eb8:	26 0d       	add	r18, r6
    1eba:	31 1d       	adc	r19, r1
    1ebc:	67 fc       	sbrc	r6, 7
    1ebe:	3a 95       	dec	r19
    1ec0:	41 e0       	ldi	r20, 0x01	; 1
    1ec2:	50 e0       	ldi	r21, 0x00	; 0
    1ec4:	48 19       	sub	r20, r8
    1ec6:	51 09       	sbc	r21, r1
    1ec8:	87 fc       	sbrc	r8, 7
    1eca:	53 95       	inc	r21
    1ecc:	8c 01       	movw	r16, r24
    1ece:	0f 5f       	subi	r16, 0xFF	; 255
    1ed0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ed2:	84 0f       	add	r24, r20
    1ed4:	95 1f       	adc	r25, r21
    1ed6:	02 c0       	rjmp	.+4      	; 0x1edc <u8g2_font_decode_glyph+0x134>
    1ed8:	8c 01       	movw	r16, r24
    1eda:	96 01       	movw	r18, r12
    1edc:	ac 01       	movw	r20, r24
    1ede:	b6 01       	movw	r22, r12
    1ee0:	ce 01       	movw	r24, r28
    1ee2:	0e 94 5f 12 	call	0x24be	; 0x24be <u8g2_IsIntersection>
    1ee6:	88 23       	and	r24, r24
    1ee8:	c1 f1       	breq	.+112    	; 0x1f5a <u8g2_font_decode_glyph+0x1b2>
    1eea:	fe 01       	movw	r30, r28
    1eec:	e8 5b       	subi	r30, 0xB8	; 184
    1eee:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef0:	16 82       	std	Z+6, r1	; 0x06
    1ef2:	17 82       	std	Z+7, r1	; 0x07
    1ef4:	4e 01       	movw	r8, r28
    1ef6:	f9 e5       	ldi	r31, 0x59	; 89
    1ef8:	8f 0e       	add	r8, r31
    1efa:	91 1c       	adc	r9, r1
    1efc:	5e 01       	movw	r10, r28
    1efe:	8a e5       	ldi	r24, 0x5A	; 90
    1f00:	a8 0e       	add	r10, r24
    1f02:	b1 1c       	adc	r11, r1
    1f04:	6e 01       	movw	r12, r28
    1f06:	e8 e4       	ldi	r30, 0x48	; 72
    1f08:	ce 0e       	add	r12, r30
    1f0a:	d1 1c       	adc	r13, r1
    1f0c:	f4 01       	movw	r30, r8
    1f0e:	60 81       	ld	r22, Z
    1f10:	c7 01       	movw	r24, r14
    1f12:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <u8g2_font_decode_get_unsigned_bits>
    1f16:	08 2f       	mov	r16, r24
    1f18:	f5 01       	movw	r30, r10
    1f1a:	60 81       	ld	r22, Z
    1f1c:	c7 01       	movw	r24, r14
    1f1e:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <u8g2_font_decode_get_unsigned_bits>
    1f22:	18 2f       	mov	r17, r24
    1f24:	40 e0       	ldi	r20, 0x00	; 0
    1f26:	60 2f       	mov	r22, r16
    1f28:	ce 01       	movw	r24, r28
    1f2a:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <u8g2_font_decode_len>
    1f2e:	41 e0       	ldi	r20, 0x01	; 1
    1f30:	61 2f       	mov	r22, r17
    1f32:	ce 01       	movw	r24, r28
    1f34:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <u8g2_font_decode_len>
    1f38:	61 e0       	ldi	r22, 0x01	; 1
    1f3a:	c7 01       	movw	r24, r14
    1f3c:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <u8g2_font_decode_get_unsigned_bits>
    1f40:	81 11       	cpse	r24, r1
    1f42:	f0 cf       	rjmp	.-32     	; 0x1f24 <u8g2_font_decode_glyph+0x17c>
    1f44:	f6 01       	movw	r30, r12
    1f46:	87 81       	ldd	r24, Z+7	; 0x07
    1f48:	86 15       	cp	r24, r6
    1f4a:	04 f3       	brlt	.-64     	; 0x1f0c <u8g2_font_decode_glyph+0x164>
    1f4c:	fe 01       	movw	r30, r28
    1f4e:	ec 58       	subi	r30, 0x8C	; 140
    1f50:	ff 4f       	sbci	r31, 0xFF	; 255
    1f52:	c8 5b       	subi	r28, 0xB8	; 184
    1f54:	df 4f       	sbci	r29, 0xFF	; 255
    1f56:	8c 85       	ldd	r24, Y+12	; 0x0c
    1f58:	80 83       	st	Z, r24
    1f5a:	87 2d       	mov	r24, r7
    1f5c:	df 91       	pop	r29
    1f5e:	cf 91       	pop	r28
    1f60:	1f 91       	pop	r17
    1f62:	0f 91       	pop	r16
    1f64:	ff 90       	pop	r15
    1f66:	ef 90       	pop	r14
    1f68:	df 90       	pop	r13
    1f6a:	cf 90       	pop	r12
    1f6c:	bf 90       	pop	r11
    1f6e:	af 90       	pop	r10
    1f70:	9f 90       	pop	r9
    1f72:	8f 90       	pop	r8
    1f74:	7f 90       	pop	r7
    1f76:	6f 90       	pop	r6
    1f78:	08 95       	ret

00001f7a <u8g2_font_get_glyph_data>:
    1f7a:	ef 92       	push	r14
    1f7c:	ff 92       	push	r15
    1f7e:	0f 93       	push	r16
    1f80:	1f 93       	push	r17
    1f82:	cf 93       	push	r28
    1f84:	df 93       	push	r29
    1f86:	fc 01       	movw	r30, r24
    1f88:	ec 5b       	subi	r30, 0xBC	; 188
    1f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8c:	c0 81       	ld	r28, Z
    1f8e:	d1 81       	ldd	r29, Z+1	; 0x01
    1f90:	67 96       	adiw	r28, 0x17	; 23
    1f92:	6f 3f       	cpi	r22, 0xFF	; 255
    1f94:	71 05       	cpc	r23, r1
    1f96:	11 f0       	breq	.+4      	; 0x1f9c <u8g2_font_get_glyph_data+0x22>
    1f98:	08 f0       	brcs	.+2      	; 0x1f9c <u8g2_font_get_glyph_data+0x22>
    1f9a:	35 c0       	rjmp	.+106    	; 0x2006 <u8g2_font_get_glyph_data+0x8c>
    1f9c:	61 36       	cpi	r22, 0x61	; 97
    1f9e:	71 05       	cpc	r23, r1
    1fa0:	30 f0       	brcs	.+12     	; 0x1fae <u8g2_font_get_glyph_data+0x34>
    1fa2:	b6 96       	adiw	r30, 0x26	; 38
    1fa4:	80 81       	ld	r24, Z
    1fa6:	91 81       	ldd	r25, Z+1	; 0x01
    1fa8:	c8 0f       	add	r28, r24
    1faa:	d9 1f       	adc	r29, r25
    1fac:	0a c0       	rjmp	.+20     	; 0x1fc2 <u8g2_font_get_glyph_data+0x48>
    1fae:	61 34       	cpi	r22, 0x41	; 65
    1fb0:	71 05       	cpc	r23, r1
    1fb2:	38 f0       	brcs	.+14     	; 0x1fc2 <u8g2_font_get_glyph_data+0x48>
    1fb4:	fc 01       	movw	r30, r24
    1fb6:	e8 59       	subi	r30, 0x98	; 152
    1fb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fba:	80 81       	ld	r24, Z
    1fbc:	91 81       	ldd	r25, Z+1	; 0x01
    1fbe:	c8 0f       	add	r28, r24
    1fc0:	d9 1f       	adc	r29, r25
    1fc2:	ce 01       	movw	r24, r28
    1fc4:	01 96       	adiw	r24, 0x01	; 1
    1fc6:	fc 01       	movw	r30, r24
    1fc8:	24 91       	lpm	r18, Z
    1fca:	22 23       	and	r18, r18
    1fcc:	09 f4       	brne	.+2      	; 0x1fd0 <u8g2_font_get_glyph_data+0x56>
    1fce:	5a c0       	rjmp	.+180    	; 0x2084 <u8g2_font_get_glyph_data+0x10a>
    1fd0:	fe 01       	movw	r30, r28
    1fd2:	24 91       	lpm	r18, Z
    1fd4:	30 e0       	ldi	r19, 0x00	; 0
    1fd6:	62 17       	cp	r22, r18
    1fd8:	73 07       	cpc	r23, r19
    1fda:	51 f4       	brne	.+20     	; 0x1ff0 <u8g2_font_get_glyph_data+0x76>
    1fdc:	06 c0       	rjmp	.+12     	; 0x1fea <u8g2_font_get_glyph_data+0x70>
    1fde:	fe 01       	movw	r30, r28
    1fe0:	24 91       	lpm	r18, Z
    1fe2:	30 e0       	ldi	r19, 0x00	; 0
    1fe4:	62 17       	cp	r22, r18
    1fe6:	73 07       	cpc	r23, r19
    1fe8:	19 f4       	brne	.+6      	; 0x1ff0 <u8g2_font_get_glyph_data+0x76>
    1fea:	ce 01       	movw	r24, r28
    1fec:	02 96       	adiw	r24, 0x02	; 2
    1fee:	52 c0       	rjmp	.+164    	; 0x2094 <u8g2_font_get_glyph_data+0x11a>
    1ff0:	fc 01       	movw	r30, r24
    1ff2:	84 91       	lpm	r24, Z
    1ff4:	c8 0f       	add	r28, r24
    1ff6:	d1 1d       	adc	r29, r1
    1ff8:	ce 01       	movw	r24, r28
    1ffa:	01 96       	adiw	r24, 0x01	; 1
    1ffc:	fc 01       	movw	r30, r24
    1ffe:	24 91       	lpm	r18, Z
    2000:	21 11       	cpse	r18, r1
    2002:	ed cf       	rjmp	.-38     	; 0x1fde <u8g2_font_get_glyph_data+0x64>
    2004:	42 c0       	rjmp	.+132    	; 0x208a <u8g2_font_get_glyph_data+0x110>
    2006:	8b 01       	movw	r16, r22
    2008:	fc 01       	movw	r30, r24
    200a:	e4 59       	subi	r30, 0x94	; 148
    200c:	ff 4f       	sbci	r31, 0xFF	; 255
    200e:	80 81       	ld	r24, Z
    2010:	91 81       	ldd	r25, Z+1	; 0x01
    2012:	c8 0f       	add	r28, r24
    2014:	d9 1f       	adc	r29, r25
    2016:	7e 01       	movw	r14, r28
    2018:	60 e0       	ldi	r22, 0x00	; 0
    201a:	c7 01       	movw	r24, r14
    201c:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <u8g2_font_get_word>
    2020:	c8 0f       	add	r28, r24
    2022:	d9 1f       	adc	r29, r25
    2024:	62 e0       	ldi	r22, 0x02	; 2
    2026:	c7 01       	movw	r24, r14
    2028:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <u8g2_font_get_word>
    202c:	f4 e0       	ldi	r31, 0x04	; 4
    202e:	ef 0e       	add	r14, r31
    2030:	f1 1c       	adc	r15, r1
    2032:	80 17       	cp	r24, r16
    2034:	91 07       	cpc	r25, r17
    2036:	80 f3       	brcs	.-32     	; 0x2018 <u8g2_font_get_glyph_data+0x9e>
    2038:	fe 01       	movw	r30, r28
    203a:	84 91       	lpm	r24, Z
    203c:	90 e0       	ldi	r25, 0x00	; 0
    203e:	98 2f       	mov	r25, r24
    2040:	88 27       	eor	r24, r24
    2042:	31 96       	adiw	r30, 0x01	; 1
    2044:	e4 91       	lpm	r30, Z
    2046:	8e 2b       	or	r24, r30
    2048:	00 97       	sbiw	r24, 0x00	; 0
    204a:	11 f1       	breq	.+68     	; 0x2090 <u8g2_font_get_glyph_data+0x116>
    204c:	08 17       	cp	r16, r24
    204e:	19 07       	cpc	r17, r25
    2050:	39 f4       	brne	.+14     	; 0x2060 <u8g2_font_get_glyph_data+0xe6>
    2052:	03 c0       	rjmp	.+6      	; 0x205a <u8g2_font_get_glyph_data+0xe0>
    2054:	08 17       	cp	r16, r24
    2056:	19 07       	cpc	r17, r25
    2058:	19 f4       	brne	.+6      	; 0x2060 <u8g2_font_get_glyph_data+0xe6>
    205a:	ce 01       	movw	r24, r28
    205c:	03 96       	adiw	r24, 0x03	; 3
    205e:	1a c0       	rjmp	.+52     	; 0x2094 <u8g2_font_get_glyph_data+0x11a>
    2060:	fe 01       	movw	r30, r28
    2062:	32 96       	adiw	r30, 0x02	; 2
    2064:	e4 91       	lpm	r30, Z
    2066:	ce 0f       	add	r28, r30
    2068:	d1 1d       	adc	r29, r1
    206a:	fe 01       	movw	r30, r28
    206c:	84 91       	lpm	r24, Z
    206e:	90 e0       	ldi	r25, 0x00	; 0
    2070:	98 2f       	mov	r25, r24
    2072:	88 27       	eor	r24, r24
    2074:	31 96       	adiw	r30, 0x01	; 1
    2076:	e4 91       	lpm	r30, Z
    2078:	8e 2b       	or	r24, r30
    207a:	00 97       	sbiw	r24, 0x00	; 0
    207c:	59 f7       	brne	.-42     	; 0x2054 <u8g2_font_get_glyph_data+0xda>
    207e:	80 e0       	ldi	r24, 0x00	; 0
    2080:	90 e0       	ldi	r25, 0x00	; 0
    2082:	08 c0       	rjmp	.+16     	; 0x2094 <u8g2_font_get_glyph_data+0x11a>
    2084:	80 e0       	ldi	r24, 0x00	; 0
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	05 c0       	rjmp	.+10     	; 0x2094 <u8g2_font_get_glyph_data+0x11a>
    208a:	80 e0       	ldi	r24, 0x00	; 0
    208c:	90 e0       	ldi	r25, 0x00	; 0
    208e:	02 c0       	rjmp	.+4      	; 0x2094 <u8g2_font_get_glyph_data+0x11a>
    2090:	80 e0       	ldi	r24, 0x00	; 0
    2092:	90 e0       	ldi	r25, 0x00	; 0
    2094:	df 91       	pop	r29
    2096:	cf 91       	pop	r28
    2098:	1f 91       	pop	r17
    209a:	0f 91       	pop	r16
    209c:	ff 90       	pop	r15
    209e:	ef 90       	pop	r14
    20a0:	08 95       	ret

000020a2 <u8g2_DrawGlyph>:
    20a2:	cf 92       	push	r12
    20a4:	df 92       	push	r13
    20a6:	ef 92       	push	r14
    20a8:	ff 92       	push	r15
    20aa:	0f 93       	push	r16
    20ac:	1f 93       	push	r17
    20ae:	cf 93       	push	r28
    20b0:	df 93       	push	r29
    20b2:	ec 01       	movw	r28, r24
    20b4:	7b 01       	movw	r14, r22
    20b6:	8a 01       	movw	r16, r20
    20b8:	69 01       	movw	r12, r18
    20ba:	fc 01       	movw	r30, r24
    20bc:	ea 5a       	subi	r30, 0xAA	; 170
    20be:	ff 4f       	sbci	r31, 0xFF	; 255
    20c0:	80 81       	ld	r24, Z
    20c2:	81 30       	cpi	r24, 0x01	; 1
    20c4:	89 f0       	breq	.+34     	; 0x20e8 <u8g2_DrawGlyph+0x46>
    20c6:	28 f0       	brcs	.+10     	; 0x20d2 <u8g2_DrawGlyph+0x30>
    20c8:	82 30       	cpi	r24, 0x02	; 2
    20ca:	c9 f0       	breq	.+50     	; 0x20fe <u8g2_DrawGlyph+0x5c>
    20cc:	83 30       	cpi	r24, 0x03	; 3
    20ce:	11 f1       	breq	.+68     	; 0x2114 <u8g2_DrawGlyph+0x72>
    20d0:	2b c0       	rjmp	.+86     	; 0x2128 <u8g2_DrawGlyph+0x86>
    20d2:	fe 01       	movw	r30, r28
    20d4:	ea 5b       	subi	r30, 0xBA	; 186
    20d6:	ff 4f       	sbci	r31, 0xFF	; 255
    20d8:	01 90       	ld	r0, Z+
    20da:	f0 81       	ld	r31, Z
    20dc:	e0 2d       	mov	r30, r0
    20de:	ce 01       	movw	r24, r28
    20e0:	09 95       	icall
    20e2:	08 0f       	add	r16, r24
    20e4:	19 1f       	adc	r17, r25
    20e6:	20 c0       	rjmp	.+64     	; 0x2128 <u8g2_DrawGlyph+0x86>
    20e8:	fe 01       	movw	r30, r28
    20ea:	ea 5b       	subi	r30, 0xBA	; 186
    20ec:	ff 4f       	sbci	r31, 0xFF	; 255
    20ee:	01 90       	ld	r0, Z+
    20f0:	f0 81       	ld	r31, Z
    20f2:	e0 2d       	mov	r30, r0
    20f4:	ce 01       	movw	r24, r28
    20f6:	09 95       	icall
    20f8:	e8 1a       	sub	r14, r24
    20fa:	f9 0a       	sbc	r15, r25
    20fc:	15 c0       	rjmp	.+42     	; 0x2128 <u8g2_DrawGlyph+0x86>
    20fe:	fe 01       	movw	r30, r28
    2100:	ea 5b       	subi	r30, 0xBA	; 186
    2102:	ff 4f       	sbci	r31, 0xFF	; 255
    2104:	01 90       	ld	r0, Z+
    2106:	f0 81       	ld	r31, Z
    2108:	e0 2d       	mov	r30, r0
    210a:	ce 01       	movw	r24, r28
    210c:	09 95       	icall
    210e:	08 1b       	sub	r16, r24
    2110:	19 0b       	sbc	r17, r25
    2112:	0a c0       	rjmp	.+20     	; 0x2128 <u8g2_DrawGlyph+0x86>
    2114:	fe 01       	movw	r30, r28
    2116:	ea 5b       	subi	r30, 0xBA	; 186
    2118:	ff 4f       	sbci	r31, 0xFF	; 255
    211a:	01 90       	ld	r0, Z+
    211c:	f0 81       	ld	r31, Z
    211e:	e0 2d       	mov	r30, r0
    2120:	ce 01       	movw	r24, r28
    2122:	09 95       	icall
    2124:	e8 0e       	add	r14, r24
    2126:	f9 1e       	adc	r15, r25
    2128:	fe 01       	movw	r30, r28
    212a:	e6 5b       	subi	r30, 0xB6	; 182
    212c:	ff 4f       	sbci	r31, 0xFF	; 255
    212e:	f1 82       	std	Z+1, r15	; 0x01
    2130:	e0 82       	st	Z, r14
    2132:	32 96       	adiw	r30, 0x02	; 2
    2134:	11 83       	std	Z+1, r17	; 0x01
    2136:	00 83       	st	Z, r16
    2138:	b6 01       	movw	r22, r12
    213a:	ce 01       	movw	r24, r28
    213c:	0e 94 bd 0f 	call	0x1f7a	; 0x1f7a <u8g2_font_get_glyph_data>
    2140:	00 97       	sbiw	r24, 0x00	; 0
    2142:	41 f0       	breq	.+16     	; 0x2154 <u8g2_DrawGlyph+0xb2>
    2144:	bc 01       	movw	r22, r24
    2146:	ce 01       	movw	r24, r28
    2148:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <u8g2_font_decode_glyph>
    214c:	08 2e       	mov	r0, r24
    214e:	00 0c       	add	r0, r0
    2150:	99 0b       	sbc	r25, r25
    2152:	02 c0       	rjmp	.+4      	; 0x2158 <u8g2_DrawGlyph+0xb6>
    2154:	80 e0       	ldi	r24, 0x00	; 0
    2156:	90 e0       	ldi	r25, 0x00	; 0
    2158:	df 91       	pop	r29
    215a:	cf 91       	pop	r28
    215c:	1f 91       	pop	r17
    215e:	0f 91       	pop	r16
    2160:	ff 90       	pop	r15
    2162:	ef 90       	pop	r14
    2164:	df 90       	pop	r13
    2166:	cf 90       	pop	r12
    2168:	08 95       	ret

0000216a <u8g2_draw_string>:
    216a:	8f 92       	push	r8
    216c:	9f 92       	push	r9
    216e:	af 92       	push	r10
    2170:	bf 92       	push	r11
    2172:	cf 92       	push	r12
    2174:	df 92       	push	r13
    2176:	ef 92       	push	r14
    2178:	ff 92       	push	r15
    217a:	0f 93       	push	r16
    217c:	1f 93       	push	r17
    217e:	cf 93       	push	r28
    2180:	df 93       	push	r29
    2182:	ec 01       	movw	r28, r24
    2184:	5b 01       	movw	r10, r22
    2186:	6a 01       	movw	r12, r20
    2188:	e2 2e       	mov	r14, r18
    218a:	f3 2e       	mov	r15, r19
    218c:	0e 94 c5 14 	call	0x298a	; 0x298a <u8x8_utf8_init>
    2190:	0e 2d       	mov	r16, r14
    2192:	1f 2d       	mov	r17, r15
    2194:	e1 2c       	mov	r14, r1
    2196:	f1 2c       	mov	r15, r1
    2198:	4e 01       	movw	r8, r28
    219a:	26 e5       	ldi	r18, 0x56	; 86
    219c:	82 0e       	add	r8, r18
    219e:	91 1c       	adc	r9, r1
    21a0:	f8 01       	movw	r30, r16
    21a2:	61 91       	ld	r22, Z+
    21a4:	8f 01       	movw	r16, r30
    21a6:	ea 81       	ldd	r30, Y+2	; 0x02
    21a8:	fb 81       	ldd	r31, Y+3	; 0x03
    21aa:	ce 01       	movw	r24, r28
    21ac:	09 95       	icall
    21ae:	8f 3f       	cpi	r24, 0xFF	; 255
    21b0:	ff ef       	ldi	r31, 0xFF	; 255
    21b2:	9f 07       	cpc	r25, r31
    21b4:	19 f1       	breq	.+70     	; 0x21fc <u8g2_draw_string+0x92>
    21b6:	8e 3f       	cpi	r24, 0xFE	; 254
    21b8:	2f ef       	ldi	r18, 0xFF	; 255
    21ba:	92 07       	cpc	r25, r18
    21bc:	89 f3       	breq	.-30     	; 0x21a0 <u8g2_draw_string+0x36>
    21be:	9c 01       	movw	r18, r24
    21c0:	a6 01       	movw	r20, r12
    21c2:	b5 01       	movw	r22, r10
    21c4:	ce 01       	movw	r24, r28
    21c6:	0e 94 51 10 	call	0x20a2	; 0x20a2 <u8g2_DrawGlyph>
    21ca:	9c 01       	movw	r18, r24
    21cc:	f4 01       	movw	r30, r8
    21ce:	90 81       	ld	r25, Z
    21d0:	91 30       	cpi	r25, 0x01	; 1
    21d2:	49 f0       	breq	.+18     	; 0x21e6 <u8g2_draw_string+0x7c>
    21d4:	28 f0       	brcs	.+10     	; 0x21e0 <u8g2_draw_string+0x76>
    21d6:	92 30       	cpi	r25, 0x02	; 2
    21d8:	49 f0       	breq	.+18     	; 0x21ec <u8g2_draw_string+0x82>
    21da:	93 30       	cpi	r25, 0x03	; 3
    21dc:	51 f0       	breq	.+20     	; 0x21f2 <u8g2_draw_string+0x88>
    21de:	0b c0       	rjmp	.+22     	; 0x21f6 <u8g2_draw_string+0x8c>
    21e0:	a2 0e       	add	r10, r18
    21e2:	b3 1e       	adc	r11, r19
    21e4:	08 c0       	rjmp	.+16     	; 0x21f6 <u8g2_draw_string+0x8c>
    21e6:	c2 0e       	add	r12, r18
    21e8:	d3 1e       	adc	r13, r19
    21ea:	05 c0       	rjmp	.+10     	; 0x21f6 <u8g2_draw_string+0x8c>
    21ec:	a2 1a       	sub	r10, r18
    21ee:	b3 0a       	sbc	r11, r19
    21f0:	02 c0       	rjmp	.+4      	; 0x21f6 <u8g2_draw_string+0x8c>
    21f2:	c2 1a       	sub	r12, r18
    21f4:	d3 0a       	sbc	r13, r19
    21f6:	e2 0e       	add	r14, r18
    21f8:	f3 1e       	adc	r15, r19
    21fa:	d2 cf       	rjmp	.-92     	; 0x21a0 <u8g2_draw_string+0x36>
    21fc:	c7 01       	movw	r24, r14
    21fe:	df 91       	pop	r29
    2200:	cf 91       	pop	r28
    2202:	1f 91       	pop	r17
    2204:	0f 91       	pop	r16
    2206:	ff 90       	pop	r15
    2208:	ef 90       	pop	r14
    220a:	df 90       	pop	r13
    220c:	cf 90       	pop	r12
    220e:	bf 90       	pop	r11
    2210:	af 90       	pop	r10
    2212:	9f 90       	pop	r9
    2214:	8f 90       	pop	r8
    2216:	08 95       	ret

00002218 <u8g2_DrawStr>:
    2218:	e8 eb       	ldi	r30, 0xB8	; 184
    221a:	f4 e1       	ldi	r31, 0x14	; 20
    221c:	dc 01       	movw	r26, r24
    221e:	13 96       	adiw	r26, 0x03	; 3
    2220:	fc 93       	st	X, r31
    2222:	ee 93       	st	-X, r30
    2224:	12 97       	sbiw	r26, 0x02	; 2
    2226:	0e 94 b5 10 	call	0x216a	; 0x216a <u8g2_draw_string>
    222a:	08 95       	ret

0000222c <u8g2_UpdateRefHeight>:
    222c:	fc 01       	movw	r30, r24
    222e:	ec 5b       	subi	r30, 0xBC	; 188
    2230:	ff 4f       	sbci	r31, 0xFF	; 255
    2232:	20 81       	ld	r18, Z
    2234:	31 81       	ldd	r19, Z+1	; 0x01
    2236:	23 2b       	or	r18, r19
    2238:	e1 f1       	breq	.+120    	; 0x22b2 <u8g2_UpdateRefHeight+0x86>
    223a:	b0 96       	adiw	r30, 0x20	; 32
    223c:	20 81       	ld	r18, Z
    223e:	3c 96       	adiw	r30, 0x0c	; 12
    2240:	20 83       	st	Z, r18
    2242:	3b 97       	sbiw	r30, 0x0b	; 11
    2244:	40 81       	ld	r20, Z
    2246:	3c 96       	adiw	r30, 0x0c	; 12
    2248:	40 83       	st	Z, r20
    224a:	32 97       	sbiw	r30, 0x02	; 2
    224c:	30 81       	ld	r19, Z
    224e:	33 23       	and	r19, r19
    2250:	81 f1       	breq	.+96     	; 0x22b2 <u8g2_UpdateRefHeight+0x86>
    2252:	31 30       	cpi	r19, 0x01	; 1
    2254:	79 f4       	brne	.+30     	; 0x2274 <u8g2_UpdateRefHeight+0x48>
    2256:	39 97       	sbiw	r30, 0x09	; 9
    2258:	30 81       	ld	r19, Z
    225a:	23 17       	cp	r18, r19
    225c:	14 f4       	brge	.+4      	; 0x2262 <u8g2_UpdateRefHeight+0x36>
    225e:	3a 96       	adiw	r30, 0x0a	; 10
    2260:	30 83       	st	Z, r19
    2262:	fc 01       	movw	r30, r24
    2264:	e9 59       	subi	r30, 0x99	; 153
    2266:	ff 4f       	sbci	r31, 0xFF	; 255
    2268:	20 81       	ld	r18, Z
    226a:	24 17       	cp	r18, r20
    226c:	14 f5       	brge	.+68     	; 0x22b2 <u8g2_UpdateRefHeight+0x86>
    226e:	3a 96       	adiw	r30, 0x0a	; 10
    2270:	20 83       	st	Z, r18
    2272:	08 95       	ret
    2274:	fc 01       	movw	r30, r24
    2276:	ef 59       	subi	r30, 0x9F	; 159
    2278:	ff 4f       	sbci	r31, 0xFF	; 255
    227a:	e0 81       	ld	r30, Z
    227c:	dc 01       	movw	r26, r24
    227e:	ad 59       	subi	r26, 0x9D	; 157
    2280:	bf 4f       	sbci	r27, 0xFF	; 255
    2282:	5c 91       	ld	r21, X
    2284:	02 2e       	mov	r0, r18
    2286:	00 0c       	add	r0, r0
    2288:	33 0b       	sbc	r19, r19
    228a:	65 2f       	mov	r22, r21
    228c:	05 2e       	mov	r0, r21
    228e:	00 0c       	add	r0, r0
    2290:	77 0b       	sbc	r23, r23
    2292:	6e 0f       	add	r22, r30
    2294:	71 1d       	adc	r23, r1
    2296:	e7 fd       	sbrc	r30, 7
    2298:	7a 95       	dec	r23
    229a:	26 17       	cp	r18, r22
    229c:	37 07       	cpc	r19, r23
    229e:	1c f4       	brge	.+6      	; 0x22a6 <u8g2_UpdateRefHeight+0x7a>
    22a0:	1d 96       	adiw	r26, 0x0d	; 13
    22a2:	e5 0f       	add	r30, r21
    22a4:	ec 93       	st	X, r30
    22a6:	54 17       	cp	r21, r20
    22a8:	24 f4       	brge	.+8      	; 0x22b2 <u8g2_UpdateRefHeight+0x86>
    22aa:	fc 01       	movw	r30, r24
    22ac:	ef 58       	subi	r30, 0x8F	; 143
    22ae:	ff 4f       	sbci	r31, 0xFF	; 255
    22b0:	50 83       	st	Z, r21
    22b2:	08 95       	ret

000022b4 <u8g2_SetFontPosBaseline>:
    22b4:	8a 5b       	subi	r24, 0xBA	; 186
    22b6:	9f 4f       	sbci	r25, 0xFF	; 255
    22b8:	29 e5       	ldi	r18, 0x59	; 89
    22ba:	3d e0       	ldi	r19, 0x0D	; 13
    22bc:	fc 01       	movw	r30, r24
    22be:	31 83       	std	Z+1, r19	; 0x01
    22c0:	20 83       	st	Z, r18
    22c2:	08 95       	ret

000022c4 <u8g2_SetFontPosTop>:
    22c4:	8a 5b       	subi	r24, 0xBA	; 186
    22c6:	9f 4f       	sbci	r25, 0xFF	; 255
    22c8:	2c e5       	ldi	r18, 0x5C	; 92
    22ca:	3d e0       	ldi	r19, 0x0D	; 13
    22cc:	fc 01       	movw	r30, r24
    22ce:	31 83       	std	Z+1, r19	; 0x01
    22d0:	20 83       	st	Z, r18
    22d2:	08 95       	ret

000022d4 <u8g2_SetFont>:
}

/*===============================================*/

void u8g2_SetFont(u8g2_t *u8g2, const uint8_t  *font)
{
    22d4:	cf 93       	push	r28
    22d6:	df 93       	push	r29
  if ( u8g2->font != font )
    22d8:	fc 01       	movw	r30, r24
    22da:	ec 5b       	subi	r30, 0xBC	; 188
    22dc:	ff 4f       	sbci	r31, 0xFF	; 255
    22de:	20 81       	ld	r18, Z
    22e0:	31 81       	ldd	r19, Z+1	; 0x01
    22e2:	26 17       	cp	r18, r22
    22e4:	37 07       	cpc	r19, r23
    22e6:	51 f0       	breq	.+20     	; 0x22fc <u8g2_SetFont+0x28>
    22e8:	ec 01       	movw	r28, r24
  {
//#ifdef  __unix__
//	u8g2->last_font_data = NULL;
//	u8g2->last_unicode = 0x0ffff;
//#endif 
    u8g2->font = font;
    22ea:	71 83       	std	Z+1, r23	; 0x01
    22ec:	60 83       	st	Z, r22
    u8g2_read_font_info(&(u8g2->font_info), font);
    22ee:	89 5a       	subi	r24, 0xA9	; 169
    22f0:	9f 4f       	sbci	r25, 0xFF	; 255
    22f2:	0e 94 65 0d 	call	0x1aca	; 0x1aca <u8g2_read_font_info>
    u8g2_UpdateRefHeight(u8g2);
    22f6:	ce 01       	movw	r24, r28
    22f8:	0e 94 16 11 	call	0x222c	; 0x222c <u8g2_UpdateRefHeight>
    /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
  }
}
    22fc:	df 91       	pop	r29
    22fe:	cf 91       	pop	r28
    2300:	08 95       	ret

00002302 <u8g2_draw_hv_line_2dir>:
// #ifdef U8G2_WITH_INTERSECTION
//   if ( u8g2_IsIntersection(u8g2, x, y, x+1, y+len) == 0 ) 
//     return;
// #endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, len, 1);
}
    2302:	0f 93       	push	r16
    2304:	dc 01       	movw	r26, r24
    2306:	9a 96       	adiw	r26, 0x2a	; 42
    2308:	ed 91       	ld	r30, X+
    230a:	fc 91       	ld	r31, X
    230c:	9b 97       	sbiw	r26, 0x2b	; 43
    230e:	4e 1b       	sub	r20, r30
    2310:	5f 0b       	sbc	r21, r31
    2312:	5e 96       	adiw	r26, 0x1e	; 30
    2314:	ed 91       	ld	r30, X+
    2316:	fc 91       	ld	r31, X
    2318:	5f 97       	sbiw	r26, 0x1f	; 31
    231a:	09 95       	icall
    231c:	0f 91       	pop	r16
    231e:	08 95       	ret

00002320 <u8g2_DrawHVLine>:
    2320:	ef 92       	push	r14
    2322:	ff 92       	push	r15
    2324:	0f 93       	push	r16
    2326:	1f 93       	push	r17
    2328:	cf 93       	push	r28
    232a:	df 93       	push	r29
    232c:	da 01       	movw	r26, r20
    232e:	fc 01       	movw	r30, r24
    2330:	e2 59       	subi	r30, 0x92	; 146
    2332:	ff 4f       	sbci	r31, 0xFF	; 255
    2334:	50 81       	ld	r21, Z
    2336:	55 23       	and	r21, r21
    2338:	09 f4       	brne	.+2      	; 0x233c <u8g2_DrawHVLine+0x1c>
    233a:	83 c0       	rjmp	.+262    	; 0x2442 <u8g2_DrawHVLine+0x122>
    233c:	21 15       	cp	r18, r1
    233e:	31 05       	cpc	r19, r1
    2340:	09 f4       	brne	.+2      	; 0x2344 <u8g2_DrawHVLine+0x24>
    2342:	7f c0       	rjmp	.+254    	; 0x2442 <u8g2_DrawHVLine+0x122>
    2344:	22 30       	cpi	r18, 0x02	; 2
    2346:	31 05       	cpc	r19, r1
    2348:	70 f0       	brcs	.+28     	; 0x2366 <u8g2_DrawHVLine+0x46>
    234a:	02 30       	cpi	r16, 0x02	; 2
    234c:	29 f4       	brne	.+10     	; 0x2358 <u8g2_DrawHVLine+0x38>
    234e:	6f 5f       	subi	r22, 0xFF	; 255
    2350:	7f 4f       	sbci	r23, 0xFF	; 255
    2352:	62 1b       	sub	r22, r18
    2354:	73 0b       	sbc	r23, r19
    2356:	0b c0       	rjmp	.+22     	; 0x236e <u8g2_DrawHVLine+0x4e>
    2358:	03 30       	cpi	r16, 0x03	; 3
    235a:	29 f4       	brne	.+10     	; 0x2366 <u8g2_DrawHVLine+0x46>
    235c:	11 96       	adiw	r26, 0x01	; 1
    235e:	a2 1b       	sub	r26, r18
    2360:	b3 0b       	sbc	r27, r19
    2362:	f1 e0       	ldi	r31, 0x01	; 1
    2364:	37 c0       	rjmp	.+110    	; 0x23d4 <u8g2_DrawHVLine+0xb4>
    2366:	f0 2f       	mov	r31, r16
    2368:	f1 70       	andi	r31, 0x01	; 1
    236a:	00 fd       	sbrc	r16, 0
    236c:	33 c0       	rjmp	.+102    	; 0x23d4 <u8g2_DrawHVLine+0xb4>
    236e:	ec 01       	movw	r28, r24
    2370:	48 ad       	ldd	r20, Y+56	; 0x38
    2372:	59 ad       	ldd	r21, Y+57	; 0x39
    2374:	a4 17       	cp	r26, r20
    2376:	b5 07       	cpc	r27, r21
    2378:	08 f4       	brcc	.+2      	; 0x237c <u8g2_DrawHVLine+0x5c>
    237a:	63 c0       	rjmp	.+198    	; 0x2442 <u8g2_DrawHVLine+0x122>
    237c:	4a ad       	ldd	r20, Y+58	; 0x3a
    237e:	5b ad       	ldd	r21, Y+59	; 0x3b
    2380:	a4 17       	cp	r26, r20
    2382:	b5 07       	cpc	r27, r21
    2384:	08 f0       	brcs	.+2      	; 0x2388 <u8g2_DrawHVLine+0x68>
    2386:	5d c0       	rjmp	.+186    	; 0x2442 <u8g2_DrawHVLine+0x122>
    2388:	4e a9       	ldd	r20, Y+54	; 0x36
    238a:	5f a9       	ldd	r21, Y+55	; 0x37
    238c:	ec a9       	ldd	r30, Y+52	; 0x34
    238e:	fd a9       	ldd	r31, Y+53	; 0x35
    2390:	26 0f       	add	r18, r22
    2392:	37 1f       	adc	r19, r23
    2394:	26 17       	cp	r18, r22
    2396:	37 07       	cpc	r19, r23
    2398:	40 f4       	brcc	.+16     	; 0x23aa <u8g2_DrawHVLine+0x8a>
    239a:	64 17       	cp	r22, r20
    239c:	75 07       	cpc	r23, r21
    239e:	20 f4       	brcc	.+8      	; 0x23a8 <u8g2_DrawHVLine+0x88>
    23a0:	9a 01       	movw	r18, r20
    23a2:	21 50       	subi	r18, 0x01	; 1
    23a4:	31 09       	sbc	r19, r1
    23a6:	05 c0       	rjmp	.+10     	; 0x23b2 <u8g2_DrawHVLine+0x92>
    23a8:	bf 01       	movw	r22, r30
    23aa:	64 17       	cp	r22, r20
    23ac:	75 07       	cpc	r23, r21
    23ae:	08 f0       	brcs	.+2      	; 0x23b2 <u8g2_DrawHVLine+0x92>
    23b0:	48 c0       	rjmp	.+144    	; 0x2442 <u8g2_DrawHVLine+0x122>
    23b2:	e2 17       	cp	r30, r18
    23b4:	f3 07       	cpc	r31, r19
    23b6:	08 f0       	brcs	.+2      	; 0x23ba <u8g2_DrawHVLine+0x9a>
    23b8:	44 c0       	rjmp	.+136    	; 0x2442 <u8g2_DrawHVLine+0x122>
    23ba:	6e 17       	cp	r22, r30
    23bc:	7f 07       	cpc	r23, r31
    23be:	08 f4       	brcc	.+2      	; 0x23c2 <u8g2_DrawHVLine+0xa2>
    23c0:	bf 01       	movw	r22, r30
    23c2:	24 17       	cp	r18, r20
    23c4:	35 07       	cpc	r19, r21
    23c6:	08 f4       	brcc	.+2      	; 0x23ca <u8g2_DrawHVLine+0xaa>
    23c8:	a9 01       	movw	r20, r18
    23ca:	9a 01       	movw	r18, r20
    23cc:	26 1b       	sub	r18, r22
    23ce:	37 0b       	sbc	r19, r23
    23d0:	f0 e0       	ldi	r31, 0x00	; 0
    23d2:	2d c0       	rjmp	.+90     	; 0x242e <u8g2_DrawHVLine+0x10e>
    23d4:	ec 01       	movw	r28, r24
    23d6:	4c a9       	ldd	r20, Y+52	; 0x34
    23d8:	5d a9       	ldd	r21, Y+53	; 0x35
    23da:	64 17       	cp	r22, r20
    23dc:	75 07       	cpc	r23, r21
    23de:	88 f1       	brcs	.+98     	; 0x2442 <u8g2_DrawHVLine+0x122>
    23e0:	4e a9       	ldd	r20, Y+54	; 0x36
    23e2:	5f a9       	ldd	r21, Y+55	; 0x37
    23e4:	64 17       	cp	r22, r20
    23e6:	75 07       	cpc	r23, r21
    23e8:	60 f5       	brcc	.+88     	; 0x2442 <u8g2_DrawHVLine+0x122>
    23ea:	4a ad       	ldd	r20, Y+58	; 0x3a
    23ec:	5b ad       	ldd	r21, Y+59	; 0x3b
    23ee:	08 ad       	ldd	r16, Y+56	; 0x38
    23f0:	19 ad       	ldd	r17, Y+57	; 0x39
    23f2:	2a 0f       	add	r18, r26
    23f4:	3b 1f       	adc	r19, r27
    23f6:	2a 17       	cp	r18, r26
    23f8:	3b 07       	cpc	r19, r27
    23fa:	40 f4       	brcc	.+16     	; 0x240c <u8g2_DrawHVLine+0xec>
    23fc:	a4 17       	cp	r26, r20
    23fe:	b5 07       	cpc	r27, r21
    2400:	20 f4       	brcc	.+8      	; 0x240a <u8g2_DrawHVLine+0xea>
    2402:	9a 01       	movw	r18, r20
    2404:	21 50       	subi	r18, 0x01	; 1
    2406:	31 09       	sbc	r19, r1
    2408:	04 c0       	rjmp	.+8      	; 0x2412 <u8g2_DrawHVLine+0xf2>
    240a:	d8 01       	movw	r26, r16
    240c:	a4 17       	cp	r26, r20
    240e:	b5 07       	cpc	r27, r21
    2410:	c0 f4       	brcc	.+48     	; 0x2442 <u8g2_DrawHVLine+0x122>
    2412:	02 17       	cp	r16, r18
    2414:	13 07       	cpc	r17, r19
    2416:	a8 f4       	brcc	.+42     	; 0x2442 <u8g2_DrawHVLine+0x122>
    2418:	a0 17       	cp	r26, r16
    241a:	b1 07       	cpc	r27, r17
    241c:	08 f4       	brcc	.+2      	; 0x2420 <u8g2_DrawHVLine+0x100>
    241e:	d8 01       	movw	r26, r16
    2420:	24 17       	cp	r18, r20
    2422:	35 07       	cpc	r19, r21
    2424:	08 f4       	brcc	.+2      	; 0x2428 <u8g2_DrawHVLine+0x108>
    2426:	a9 01       	movw	r20, r18
    2428:	9a 01       	movw	r18, r20
    242a:	2a 1b       	sub	r18, r26
    242c:	3b 0b       	sbc	r19, r27
    242e:	ec 01       	movw	r28, r24
    2430:	48 a1       	ldd	r20, Y+32	; 0x20
    2432:	59 a1       	ldd	r21, Y+33	; 0x21
    2434:	ea 01       	movw	r28, r20
    2436:	ec 80       	ldd	r14, Y+4	; 0x04
    2438:	fd 80       	ldd	r15, Y+5	; 0x05
    243a:	0f 2f       	mov	r16, r31
    243c:	ad 01       	movw	r20, r26
    243e:	f7 01       	movw	r30, r14
    2440:	09 95       	icall
    2442:	df 91       	pop	r29
    2444:	cf 91       	pop	r28
    2446:	1f 91       	pop	r17
    2448:	0f 91       	pop	r16
    244a:	ff 90       	pop	r15
    244c:	ef 90       	pop	r14
    244e:	08 95       	ret

00002450 <u8g2_DrawPixel>:

void u8g2_DrawPixel(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y)
{
    2450:	0f 93       	push	r16
    2452:	fc 01       	movw	r30, r24
#ifdef U8G2_WITH_INTERSECTION
  if ( y < u8g2->user_y0 )
    2454:	80 ad       	ldd	r24, Z+56	; 0x38
    2456:	91 ad       	ldd	r25, Z+57	; 0x39
    2458:	48 17       	cp	r20, r24
    245a:	59 07       	cpc	r21, r25
    245c:	a8 f0       	brcs	.+42     	; 0x2488 <u8g2_DrawPixel+0x38>
    return;
  if ( y >= u8g2->user_y1 )
    245e:	82 ad       	ldd	r24, Z+58	; 0x3a
    2460:	93 ad       	ldd	r25, Z+59	; 0x3b
    2462:	48 17       	cp	r20, r24
    2464:	59 07       	cpc	r21, r25
    2466:	80 f4       	brcc	.+32     	; 0x2488 <u8g2_DrawPixel+0x38>
    return;
  if ( x < u8g2->user_x0 )
    2468:	84 a9       	ldd	r24, Z+52	; 0x34
    246a:	95 a9       	ldd	r25, Z+53	; 0x35
    246c:	68 17       	cp	r22, r24
    246e:	79 07       	cpc	r23, r25
    2470:	58 f0       	brcs	.+22     	; 0x2488 <u8g2_DrawPixel+0x38>
    return;
  if ( x >= u8g2->user_x1 )
    2472:	86 a9       	ldd	r24, Z+54	; 0x36
    2474:	97 a9       	ldd	r25, Z+55	; 0x37
    2476:	68 17       	cp	r22, r24
    2478:	79 07       	cpc	r23, r25
    247a:	30 f4       	brcc	.+12     	; 0x2488 <u8g2_DrawPixel+0x38>
    247c:	cf 01       	movw	r24, r30
    return;
#endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, 1, 0);
    247e:	00 e0       	ldi	r16, 0x00	; 0
    2480:	21 e0       	ldi	r18, 0x01	; 1
    2482:	30 e0       	ldi	r19, 0x00	; 0
    2484:	0e 94 90 11 	call	0x2320	; 0x2320 <u8g2_DrawHVLine>
}
    2488:	0f 91       	pop	r16
    248a:	08 95       	ret

0000248c <u8g2_is_intersection_decision_tree>:
  a1 and v1 are excluded
  v0 == v1 is not support end return 1
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
    248c:	46 17       	cp	r20, r22
    248e:	57 07       	cpc	r21, r23
    2490:	48 f4       	brcc	.+18     	; 0x24a4 <u8g2_is_intersection_decision_tree+0x18>
  {
    if ( v1 > a0 )	// v1 >= a0
    2492:	82 17       	cp	r24, r18
    2494:	93 07       	cpc	r25, r19
    2496:	78 f0       	brcs	.+30     	; 0x24b6 <u8g2_is_intersection_decision_tree+0x2a>
    {
      return 1;
    2498:	81 e0       	ldi	r24, 0x01	; 1
    249a:	24 17       	cp	r18, r20
    249c:	35 07       	cpc	r19, r21
    249e:	70 f0       	brcs	.+28     	; 0x24bc <u8g2_is_intersection_decision_tree+0x30>
    24a0:	80 e0       	ldi	r24, 0x00	; 0
    24a2:	08 95       	ret
      }
    }
  }
  else
  {
    if ( v1 > a0 )	// v1 >= a0
    24a4:	82 17       	cp	r24, r18
    24a6:	93 07       	cpc	r25, r19
    24a8:	40 f4       	brcc	.+16     	; 0x24ba <u8g2_is_intersection_decision_tree+0x2e>
{
  if ( v0 < a1 )		// v0 <= a1
  {
    if ( v1 > a0 )	// v1 >= a0
    {
      return 1;
    24aa:	81 e0       	ldi	r24, 0x01	; 1
    24ac:	24 17       	cp	r18, r20
    24ae:	35 07       	cpc	r19, r21
    24b0:	28 f0       	brcs	.+10     	; 0x24bc <u8g2_is_intersection_decision_tree+0x30>
    24b2:	80 e0       	ldi	r24, 0x00	; 0
    24b4:	08 95       	ret
    24b6:	81 e0       	ldi	r24, 0x01	; 1
    24b8:	08 95       	ret
	return 0;
      }
    }
    else
    {
      return 0;
    24ba:	80 e0       	ldi	r24, 0x00	; 0
    }
  }
}
    24bc:	08 95       	ret

000024be <u8g2_IsIntersection>:



/* upper limits are not included (asymetric boundaries) */
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
    24be:	cf 92       	push	r12
    24c0:	df 92       	push	r13
    24c2:	ef 92       	push	r14
    24c4:	ff 92       	push	r15
    24c6:	0f 93       	push	r16
    24c8:	1f 93       	push	r17
    24ca:	cf 93       	push	r28
    24cc:	df 93       	push	r29
    24ce:	ec 01       	movw	r28, r24
    24d0:	7b 01       	movw	r14, r22
    24d2:	69 01       	movw	r12, r18
    24d4:	98 01       	movw	r18, r16
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    24d6:	6a ad       	ldd	r22, Y+58	; 0x3a
    24d8:	7b ad       	ldd	r23, Y+59	; 0x3b
    24da:	88 ad       	ldd	r24, Y+56	; 0x38
    24dc:	99 ad       	ldd	r25, Y+57	; 0x39
    24de:	0e 94 46 12 	call	0x248c	; 0x248c <u8g2_is_intersection_decision_tree>
    24e2:	88 23       	and	r24, r24
    24e4:	41 f0       	breq	.+16     	; 0x24f6 <u8g2_IsIntersection+0x38>
    return 0; 
  
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
    24e6:	6e a9       	ldd	r22, Y+54	; 0x36
    24e8:	7f a9       	ldd	r23, Y+55	; 0x37
    24ea:	96 01       	movw	r18, r12
    24ec:	a7 01       	movw	r20, r14
    24ee:	8c a9       	ldd	r24, Y+52	; 0x34
    24f0:	9d a9       	ldd	r25, Y+53	; 0x35
    24f2:	0e 94 46 12 	call	0x248c	; 0x248c <u8g2_is_intersection_decision_tree>
}
    24f6:	df 91       	pop	r29
    24f8:	cf 91       	pop	r28
    24fa:	1f 91       	pop	r17
    24fc:	0f 91       	pop	r16
    24fe:	ff 90       	pop	r15
    2500:	ef 90       	pop	r14
    2502:	df 90       	pop	r13
    2504:	cf 90       	pop	r12
    2506:	08 95       	ret

00002508 <u8g2_DrawLine>:

#include "u8g2.h"


void u8g2_DrawLine(u8g2_t *u8g2, u8g2_uint_t x1, u8g2_uint_t y1, u8g2_uint_t x2, u8g2_uint_t y2)
{
    2508:	3f 92       	push	r3
    250a:	4f 92       	push	r4
    250c:	5f 92       	push	r5
    250e:	6f 92       	push	r6
    2510:	7f 92       	push	r7
    2512:	8f 92       	push	r8
    2514:	9f 92       	push	r9
    2516:	af 92       	push	r10
    2518:	bf 92       	push	r11
    251a:	cf 92       	push	r12
    251c:	df 92       	push	r13
    251e:	ef 92       	push	r14
    2520:	ff 92       	push	r15
    2522:	0f 93       	push	r16
    2524:	1f 93       	push	r17
    2526:	cf 93       	push	r28
    2528:	df 93       	push	r29
    252a:	3c 01       	movw	r6, r24
    252c:	eb 01       	movw	r28, r22
    252e:	6a 01       	movw	r12, r20
    2530:	59 01       	movw	r10, r18

  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
    2532:	26 17       	cp	r18, r22
    2534:	37 07       	cpc	r19, r23
    2536:	20 f4       	brcc	.+8      	; 0x2540 <u8g2_DrawLine+0x38>
    2538:	4b 01       	movw	r8, r22
    253a:	82 1a       	sub	r8, r18
    253c:	93 0a       	sbc	r9, r19
    253e:	03 c0       	rjmp	.+6      	; 0x2546 <u8g2_DrawLine+0x3e>
    2540:	49 01       	movw	r8, r18
    2542:	86 1a       	sub	r8, r22
    2544:	97 0a       	sbc	r9, r23
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    2546:	0c 15       	cp	r16, r12
    2548:	1d 05       	cpc	r17, r13
    254a:	38 f4       	brcc	.+14     	; 0x255a <u8g2_DrawLine+0x52>
    254c:	26 01       	movw	r4, r12
    254e:	40 1a       	sub	r4, r16
    2550:	51 0a       	sbc	r5, r17

  if ( dy > dx ) 
    2552:	84 14       	cp	r8, r4
    2554:	95 04       	cpc	r9, r5
    2556:	a8 f0       	brcs	.+42     	; 0x2582 <u8g2_DrawLine+0x7a>
    2558:	66 c0       	rjmp	.+204    	; 0x2626 <u8g2_DrawLine+0x11e>
  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    255a:	28 01       	movw	r4, r16
    255c:	4c 18       	sub	r4, r12
    255e:	5d 08       	sbc	r5, r13

  if ( dy > dx ) 
    2560:	84 14       	cp	r8, r4
    2562:	95 04       	cpc	r9, r5
    2564:	08 f0       	brcs	.+2      	; 0x2568 <u8g2_DrawLine+0x60>
    2566:	7b c0       	rjmp	.+246    	; 0x265e <u8g2_DrawLine+0x156>
    2568:	9a 2d       	mov	r25, r10
    256a:	8b 2d       	mov	r24, r11
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
    256c:	58 01       	movw	r10, r16
    256e:	09 2f       	mov	r16, r25
    2570:	18 2f       	mov	r17, r24
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
    2572:	9c 2f       	mov	r25, r28
    2574:	8d 2f       	mov	r24, r29
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    2576:	e6 01       	movw	r28, r12
    2578:	c9 2e       	mov	r12, r25
    257a:	d8 2e       	mov	r13, r24
  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
  {
    swapxy = 1;
    257c:	33 24       	eor	r3, r3
    257e:	33 94       	inc	r3
    2580:	0c c0       	rjmp	.+24     	; 0x259a <u8g2_DrawLine+0x92>
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
    2582:	9c 2d       	mov	r25, r12
    2584:	8d 2d       	mov	r24, r13
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
    2586:	65 01       	movw	r12, r10

  if ( dy > dx ) 
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    2588:	a9 2e       	mov	r10, r25
    258a:	b8 2e       	mov	r11, r24
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
    258c:	9c 2f       	mov	r25, r28
    258e:	8d 2f       	mov	r24, r29
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
    2590:	e8 01       	movw	r28, r16

  if ( dy > dx ) 
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    2592:	09 2f       	mov	r16, r25
    2594:	18 2f       	mov	r17, r24
  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
  {
    swapxy = 1;
    2596:	33 24       	eor	r3, r3
    2598:	33 94       	inc	r3
  if ( x1 > x2 ) 
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    259a:	72 01       	movw	r14, r4
    259c:	f6 94       	lsr	r15
    259e:	e7 94       	ror	r14
  if ( y2 > y1 ) ystep = 1; else ystep = -1;
    25a0:	c0 16       	cp	r12, r16
    25a2:	d1 06       	cpc	r13, r17
    25a4:	18 f0       	brcs	.+6      	; 0x25ac <u8g2_DrawLine+0xa4>
    25a6:	0f ef       	ldi	r16, 0xFF	; 255
    25a8:	1f ef       	ldi	r17, 0xFF	; 255
    25aa:	02 c0       	rjmp	.+4      	; 0x25b0 <u8g2_DrawLine+0xa8>
    25ac:	01 e0       	ldi	r16, 0x01	; 1
    25ae:	10 e0       	ldi	r17, 0x00	; 0

#ifndef  U8G2_16BIT
  if ( x2 == 255 )
    x2--;
#else
  if ( x2 == 0xffff )
    25b0:	8f ef       	ldi	r24, 0xFF	; 255
    25b2:	a8 16       	cp	r10, r24
    25b4:	b8 06       	cpc	r11, r24
    25b6:	31 f4       	brne	.+12     	; 0x25c4 <u8g2_DrawLine+0xbc>
    x2--;
    25b8:	0f 2e       	mov	r0, r31
    25ba:	fe ef       	ldi	r31, 0xFE	; 254
    25bc:	af 2e       	mov	r10, r31
    25be:	bb 24       	eor	r11, r11
    25c0:	ba 94       	dec	r11
    25c2:	f0 2d       	mov	r31, r0
#endif

  for( x = x1; x <= x2; x++ )
    25c4:	ac 16       	cp	r10, r28
    25c6:	bd 06       	cpc	r11, r29
    25c8:	08 f4       	brcc	.+2      	; 0x25cc <u8g2_DrawLine+0xc4>
    25ca:	53 c0       	rjmp	.+166    	; 0x2672 <u8g2_DrawLine+0x16a>
  {
    if ( swapxy == 0 ) 
    25cc:	31 10       	cpse	r3, r1
    25ce:	06 c0       	rjmp	.+12     	; 0x25dc <u8g2_DrawLine+0xd4>
      u8g2_DrawPixel(u8g2, x, y); 
    25d0:	a6 01       	movw	r20, r12
    25d2:	be 01       	movw	r22, r28
    25d4:	c3 01       	movw	r24, r6
    25d6:	0e 94 28 12 	call	0x2450	; 0x2450 <u8g2_DrawPixel>
    25da:	05 c0       	rjmp	.+10     	; 0x25e6 <u8g2_DrawLine+0xde>
    else 
      u8g2_DrawPixel(u8g2, y, x); 
    25dc:	ae 01       	movw	r20, r28
    25de:	b6 01       	movw	r22, r12
    25e0:	c3 01       	movw	r24, r6
    25e2:	0e 94 28 12 	call	0x2450	; 0x2450 <u8g2_DrawPixel>
    err -= (u8g2_uint_t)dy;
    25e6:	c7 01       	movw	r24, r14
    25e8:	88 19       	sub	r24, r8
    25ea:	99 09       	sbc	r25, r9
    25ec:	7c 01       	movw	r14, r24
    if ( err < 0 ) 
    25ee:	22 f4       	brpl	.+8      	; 0x25f8 <u8g2_DrawLine+0xf0>
    {
      y += (u8g2_uint_t)ystep;
    25f0:	c0 0e       	add	r12, r16
    25f2:	d1 1e       	adc	r13, r17
      err += (u8g2_uint_t)dx;
    25f4:	e4 0c       	add	r14, r4
    25f6:	f5 1c       	adc	r15, r5
#else
  if ( x2 == 0xffff )
    x2--;
#endif

  for( x = x1; x <= x2; x++ )
    25f8:	21 96       	adiw	r28, 0x01	; 1
    25fa:	ac 16       	cp	r10, r28
    25fc:	bd 06       	cpc	r11, r29
    25fe:	30 f7       	brcc	.-52     	; 0x25cc <u8g2_DrawLine+0xc4>
    2600:	38 c0       	rjmp	.+112    	; 0x2672 <u8g2_DrawLine+0x16a>
  if ( x1 > x2 ) 
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    2602:	74 01       	movw	r14, r8
    2604:	f6 94       	lsr	r15
    2606:	e7 94       	ror	r14
    2608:	94 2d       	mov	r25, r4
    260a:	85 2d       	mov	r24, r5
    260c:	24 01       	movw	r4, r8
  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    260e:	89 2e       	mov	r8, r25
    2610:	98 2e       	mov	r9, r24
  if ( x1 > x2 ) 
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    2612:	68 01       	movw	r12, r16
    2614:	9c 2f       	mov	r25, r28
    2616:	8d 2f       	mov	r24, r29
    2618:	e5 01       	movw	r28, r10
    261a:	a9 2e       	mov	r10, r25
    261c:	b8 2e       	mov	r11, r24
    261e:	31 2c       	mov	r3, r1
  if ( y2 > y1 ) ystep = 1; else ystep = -1;
    2620:	01 e0       	ldi	r16, 0x01	; 1
    2622:	10 e0       	ldi	r17, 0x00	; 0
    2624:	c5 cf       	rjmp	.-118    	; 0x25b0 <u8g2_DrawLine+0xa8>
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
  }
  if ( x1 > x2 ) 
    2626:	ac 16       	cp	r10, r28
    2628:	bd 06       	cpc	r11, r29
    262a:	58 f3       	brcs	.-42     	; 0x2602 <u8g2_DrawLine+0xfa>
    262c:	94 2d       	mov	r25, r4
    262e:	85 2d       	mov	r24, r5
    2630:	24 01       	movw	r4, r8
  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    2632:	89 2e       	mov	r8, r25
    2634:	98 2e       	mov	r9, r24
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
  }
  if ( x1 > x2 ) 
    2636:	31 2c       	mov	r3, r1
    2638:	b0 cf       	rjmp	.-160    	; 0x259a <u8g2_DrawLine+0x92>
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    263a:	74 01       	movw	r14, r8
    263c:	f6 94       	lsr	r15
    263e:	e7 94       	ror	r14
    2640:	94 2d       	mov	r25, r4
    2642:	85 2d       	mov	r24, r5
    2644:	24 01       	movw	r4, r8
  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    2646:	89 2e       	mov	r8, r25
    2648:	98 2e       	mov	r9, r24
  if ( x1 > x2 ) 
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    264a:	68 01       	movw	r12, r16
    264c:	9c 2f       	mov	r25, r28
    264e:	8d 2f       	mov	r24, r29
    2650:	e5 01       	movw	r28, r10
    2652:	a9 2e       	mov	r10, r25
    2654:	b8 2e       	mov	r11, r24
    2656:	31 2c       	mov	r3, r1
  if ( y2 > y1 ) ystep = 1; else ystep = -1;
    2658:	0f ef       	ldi	r16, 0xFF	; 255
    265a:	1f ef       	ldi	r17, 0xFF	; 255
    265c:	a9 cf       	rjmp	.-174    	; 0x25b0 <u8g2_DrawLine+0xa8>
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
  }
  if ( x1 > x2 ) 
    265e:	ac 16       	cp	r10, r28
    2660:	bd 06       	cpc	r11, r29
    2662:	58 f3       	brcs	.-42     	; 0x263a <u8g2_DrawLine+0x132>
    2664:	94 2d       	mov	r25, r4
    2666:	85 2d       	mov	r24, r5
    2668:	24 01       	movw	r4, r8
  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    266a:	89 2e       	mov	r8, r25
    266c:	98 2e       	mov	r9, r24
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
  }
  if ( x1 > x2 ) 
    266e:	31 2c       	mov	r3, r1
    2670:	94 cf       	rjmp	.-216    	; 0x259a <u8g2_DrawLine+0x92>
    {
      y += (u8g2_uint_t)ystep;
      err += (u8g2_uint_t)dx;
    }
  }
}
    2672:	df 91       	pop	r29
    2674:	cf 91       	pop	r28
    2676:	1f 91       	pop	r17
    2678:	0f 91       	pop	r16
    267a:	ff 90       	pop	r15
    267c:	ef 90       	pop	r14
    267e:	df 90       	pop	r13
    2680:	cf 90       	pop	r12
    2682:	bf 90       	pop	r11
    2684:	af 90       	pop	r10
    2686:	9f 90       	pop	r9
    2688:	8f 90       	pop	r8
    268a:	7f 90       	pop	r7
    268c:	6f 90       	pop	r6
    268e:	5f 90       	pop	r5
    2690:	4f 90       	pop	r4
    2692:	3f 90       	pop	r3
    2694:	08 95       	ret

00002696 <u8g2_ll_hvline_vertical_top_lsb>:
		1: vertical line (top to bottom)
  asumption: 
    all clipping done
*/
void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    2696:	cf 92       	push	r12
    2698:	df 92       	push	r13
    269a:	ff 92       	push	r15
    269c:	0f 93       	push	r16
    269e:	1f 93       	push	r17
    26a0:	cf 93       	push	r28
    26a2:	df 93       	push	r29
    26a4:	6c 01       	movw	r12, r24
    26a6:	d9 01       	movw	r26, r18
  //assert(y >= u8g2->buf_y0);
  //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
  
  /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
    26a8:	34 2f       	mov	r19, r20
    26aa:	37 70       	andi	r19, 0x07	; 7
  mask = 1;
  mask <<= bit_pos;
    26ac:	81 e0       	ldi	r24, 0x01	; 1
    26ae:	90 e0       	ldi	r25, 0x00	; 0
    26b0:	03 2e       	mov	r0, r19
    26b2:	02 c0       	rjmp	.+4      	; 0x26b8 <u8g2_ll_hvline_vertical_top_lsb+0x22>
    26b4:	88 0f       	add	r24, r24
    26b6:	99 1f       	adc	r25, r25
    26b8:	0a 94       	dec	r0
    26ba:	e2 f7       	brpl	.-8      	; 0x26b4 <u8g2_ll_hvline_vertical_top_lsb+0x1e>
    26bc:	18 2f       	mov	r17, r24

  or_mask = 0;
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    26be:	f6 01       	movw	r30, r12
    26c0:	ec 58       	subi	r30, 0x8C	; 140
    26c2:	ff 4f       	sbci	r31, 0xFF	; 255
    26c4:	20 81       	ld	r18, Z
    26c6:	22 30       	cpi	r18, 0x02	; 2
    26c8:	20 f4       	brcc	.+8      	; 0x26d2 <u8g2_ll_hvline_vertical_top_lsb+0x3c>
    or_mask  = mask;
  if ( u8g2->draw_color != 1 )
    26ca:	21 30       	cpi	r18, 0x01	; 1
    26cc:	21 f0       	breq	.+8      	; 0x26d6 <u8g2_ll_hvline_vertical_top_lsb+0x40>
  mask <<= bit_pos;

  or_mask = 0;
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    or_mask  = mask;
    26ce:	28 2f       	mov	r18, r24
    26d0:	04 c0       	rjmp	.+8      	; 0x26da <u8g2_ll_hvline_vertical_top_lsb+0x44>
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;

  or_mask = 0;
    26d2:	20 e0       	ldi	r18, 0x00	; 0
    26d4:	02 c0       	rjmp	.+4      	; 0x26da <u8g2_ll_hvline_vertical_top_lsb+0x44>
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    or_mask  = mask;
    26d6:	28 2f       	mov	r18, r24
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;

  or_mask = 0;
  xor_mask = 0;
    26d8:	10 e0       	ldi	r17, 0x00	; 0
  if ( u8g2->draw_color != 1 )
    xor_mask = mask;


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  offset &= ~7;
    26da:	48 7f       	andi	r20, 0xF8	; 248
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
  ptr = u8g2->tile_buf_ptr;
    26dc:	e6 01       	movw	r28, r12
    26de:	8a a1       	ldd	r24, Y+34	; 0x22
    26e0:	9b a1       	ldd	r25, Y+35	; 0x23
    xor_mask = mask;


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  offset &= ~7;
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
    26e2:	e8 81       	ld	r30, Y
    26e4:	f9 81       	ldd	r31, Y+1	; 0x01
  ptr = u8g2->tile_buf_ptr;
  ptr += offset;
  ptr += x;
    26e6:	f0 88       	ldd	r15, Z+16	; 0x10
    26e8:	f4 9e       	mul	r15, r20
    26ea:	f0 01       	movw	r30, r0
    26ec:	f5 9e       	mul	r15, r21
    26ee:	f0 0d       	add	r31, r0
    26f0:	11 24       	eor	r1, r1
    26f2:	6e 0f       	add	r22, r30
    26f4:	7f 1f       	adc	r23, r31
    26f6:	fc 01       	movw	r30, r24
    26f8:	e6 0f       	add	r30, r22
    26fa:	f7 1f       	adc	r31, r23
  
  if ( dir == 0 )
    26fc:	01 11       	cpse	r16, r1
    26fe:	0a c0       	rjmp	.+20     	; 0x2714 <u8g2_ll_hvline_vertical_top_lsb+0x7e>
    2700:	ae 0f       	add	r26, r30
    2702:	bf 1f       	adc	r27, r31
      {
#ifdef __unix
	assert(ptr < max_ptr);
#endif
	*ptr |= or_mask;
	*ptr ^= xor_mask;
    2704:	80 81       	ld	r24, Z
    2706:	82 2b       	or	r24, r18
    2708:	81 27       	eor	r24, r17
    270a:	81 93       	st	Z+, r24
	ptr++;
	len--;
      } while( len != 0 );
    270c:	ea 17       	cp	r30, r26
    270e:	fb 07       	cpc	r31, r27
    2710:	c9 f7       	brne	.-14     	; 0x2704 <u8g2_ll_hvline_vertical_top_lsb+0x6e>
    2712:	22 c0       	rjmp	.+68     	; 0x2758 <u8g2_ll_hvline_vertical_top_lsb+0xc2>

      if ( bit_pos == 0 )
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
		
	if ( u8g2->draw_color <= 1 )
    2714:	a6 01       	movw	r20, r12
    2716:	4c 58       	subi	r20, 0x8C	; 140
    2718:	5f 4f       	sbci	r21, 0xFF	; 255
    {
#ifdef __unix
      assert(ptr < max_ptr);
#endif
      *ptr |= or_mask;
      *ptr ^= xor_mask;
    271a:	90 81       	ld	r25, Z
    271c:	92 2b       	or	r25, r18
    271e:	91 27       	eor	r25, r17
    2720:	90 83       	st	Z, r25
      
      bit_pos++;
    2722:	3f 5f       	subi	r19, 0xFF	; 255
      bit_pos &= 7;
    2724:	37 70       	andi	r19, 0x07	; 7

      len--;
    2726:	11 97       	sbiw	r26, 0x01	; 1

      if ( bit_pos == 0 )
    2728:	31 11       	cpse	r19, r1
    272a:	0e c0       	rjmp	.+28     	; 0x2748 <u8g2_ll_hvline_vertical_top_lsb+0xb2>
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
    272c:	e6 01       	movw	r28, r12
    272e:	8e a1       	ldd	r24, Y+38	; 0x26
    2730:	9f a1       	ldd	r25, Y+39	; 0x27
    2732:	e8 0f       	add	r30, r24
    2734:	f9 1f       	adc	r31, r25
		
	if ( u8g2->draw_color <= 1 )
    2736:	ea 01       	movw	r28, r20
    2738:	98 81       	ld	r25, Y
    273a:	92 30       	cpi	r25, 0x02	; 2
    273c:	40 f4       	brcc	.+16     	; 0x274e <u8g2_ll_hvline_vertical_top_lsb+0xb8>
	  or_mask  = 1;
	if ( u8g2->draw_color != 1 )
    273e:	91 30       	cpi	r25, 0x01	; 1
    2740:	41 f0       	breq	.+16     	; 0x2752 <u8g2_ll_hvline_vertical_top_lsb+0xbc>
	  xor_mask = 1;
    2742:	11 e0       	ldi	r17, 0x01	; 1
      if ( bit_pos == 0 )
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
		
	if ( u8g2->draw_color <= 1 )
	  or_mask  = 1;
    2744:	21 e0       	ldi	r18, 0x01	; 1
    2746:	06 c0       	rjmp	.+12     	; 0x2754 <u8g2_ll_hvline_vertical_top_lsb+0xbe>
	if ( u8g2->draw_color != 1 )
	  xor_mask = 1;
      }
      else
      {
	or_mask <<= 1;
    2748:	22 0f       	add	r18, r18
	xor_mask <<= 1;
    274a:	11 0f       	add	r17, r17
    274c:	03 c0       	rjmp	.+6      	; 0x2754 <u8g2_ll_hvline_vertical_top_lsb+0xbe>
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
		
	if ( u8g2->draw_color <= 1 )
	  or_mask  = 1;
	if ( u8g2->draw_color != 1 )
	  xor_mask = 1;
    274e:	11 e0       	ldi	r17, 0x01	; 1
    2750:	01 c0       	rjmp	.+2      	; 0x2754 <u8g2_ll_hvline_vertical_top_lsb+0xbe>
      if ( bit_pos == 0 )
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
		
	if ( u8g2->draw_color <= 1 )
	  or_mask  = 1;
    2752:	21 e0       	ldi	r18, 0x01	; 1
      else
      {
	or_mask <<= 1;
	xor_mask <<= 1;
      }
    } while( len != 0 );
    2754:	10 97       	sbiw	r26, 0x00	; 0
    2756:	09 f7       	brne	.-62     	; 0x271a <u8g2_ll_hvline_vertical_top_lsb+0x84>
  }
}
    2758:	df 91       	pop	r29
    275a:	cf 91       	pop	r28
    275c:	1f 91       	pop	r17
    275e:	0f 91       	pop	r16
    2760:	ff 90       	pop	r15
    2762:	df 90       	pop	r13
    2764:	cf 90       	pop	r12
    2766:	08 95       	ret

00002768 <u8g2_update_dimension_common>:
  u8g2->clip_x0 = clip_x0;
  u8g2->clip_y0 = clip_y0;
  u8g2->clip_x1 = clip_x1;
  u8g2->clip_y1 = clip_y1;
  u8g2->cb->update_page_win(u8g2);
}
    2768:	cf 93       	push	r28
    276a:	df 93       	push	r29
    276c:	fc 01       	movw	r30, r24
    276e:	a0 81       	ld	r26, Z
    2770:	b1 81       	ldd	r27, Z+1	; 0x01
    2772:	84 a1       	ldd	r24, Z+36	; 0x24
    2774:	90 e0       	ldi	r25, 0x00	; 0
    2776:	9c 01       	movw	r18, r24
    2778:	22 0f       	add	r18, r18
    277a:	33 1f       	adc	r19, r19
    277c:	22 0f       	add	r18, r18
    277e:	33 1f       	adc	r19, r19
    2780:	22 0f       	add	r18, r18
    2782:	33 1f       	adc	r19, r19
    2784:	31 a7       	std	Z+41, r19	; 0x29
    2786:	20 a7       	std	Z+40, r18	; 0x28
    2788:	50 96       	adiw	r26, 0x10	; 16
    278a:	2c 91       	ld	r18, X
    278c:	50 97       	sbiw	r26, 0x10	; 16
    278e:	30 e0       	ldi	r19, 0x00	; 0
    2790:	22 0f       	add	r18, r18
    2792:	33 1f       	adc	r19, r19
    2794:	22 0f       	add	r18, r18
    2796:	33 1f       	adc	r19, r19
    2798:	22 0f       	add	r18, r18
    279a:	33 1f       	adc	r19, r19
    279c:	37 a3       	std	Z+39, r19	; 0x27
    279e:	26 a3       	std	Z+38, r18	; 0x26
    27a0:	75 a1       	ldd	r23, Z+37	; 0x25
    27a2:	47 2f       	mov	r20, r23
    27a4:	50 e0       	ldi	r21, 0x00	; 0
    27a6:	9a 01       	movw	r18, r20
    27a8:	22 0f       	add	r18, r18
    27aa:	33 1f       	adc	r19, r19
    27ac:	22 0f       	add	r18, r18
    27ae:	33 1f       	adc	r19, r19
    27b0:	22 0f       	add	r18, r18
    27b2:	33 1f       	adc	r19, r19
    27b4:	33 a7       	std	Z+43, r19	; 0x2b
    27b6:	22 a7       	std	Z+42, r18	; 0x2a
    27b8:	51 96       	adiw	r26, 0x11	; 17
    27ba:	6c 91       	ld	r22, X
    27bc:	51 97       	sbiw	r26, 0x11	; 17
    27be:	48 0f       	add	r20, r24
    27c0:	59 1f       	adc	r21, r25
    27c2:	c6 2f       	mov	r28, r22
    27c4:	d0 e0       	ldi	r29, 0x00	; 0
    27c6:	c4 17       	cp	r28, r20
    27c8:	d5 07       	cpc	r29, r21
    27ca:	18 f4       	brcc	.+6      	; 0x27d2 <u8g2_update_dimension_common+0x6a>
    27cc:	ce 01       	movw	r24, r28
    27ce:	87 1b       	sub	r24, r23
    27d0:	91 09       	sbc	r25, r1
    27d2:	35 a7       	std	Z+45, r19	; 0x2d
    27d4:	24 a7       	std	Z+44, r18	; 0x2c
    27d6:	88 0f       	add	r24, r24
    27d8:	99 1f       	adc	r25, r25
    27da:	88 0f       	add	r24, r24
    27dc:	99 1f       	adc	r25, r25
    27de:	88 0f       	add	r24, r24
    27e0:	99 1f       	adc	r25, r25
    27e2:	82 0f       	add	r24, r18
    27e4:	93 1f       	adc	r25, r19
    27e6:	97 a7       	std	Z+47, r25	; 0x2f
    27e8:	86 a7       	std	Z+46, r24	; 0x2e
    27ea:	54 96       	adiw	r26, 0x14	; 20
    27ec:	8d 91       	ld	r24, X+
    27ee:	9c 91       	ld	r25, X
    27f0:	55 97       	sbiw	r26, 0x15	; 21
    27f2:	91 ab       	std	Z+49, r25	; 0x31
    27f4:	80 ab       	std	Z+48, r24	; 0x30
    27f6:	56 96       	adiw	r26, 0x16	; 22
    27f8:	8d 91       	ld	r24, X+
    27fa:	9c 91       	ld	r25, X
    27fc:	57 97       	sbiw	r26, 0x17	; 23
    27fe:	93 ab       	std	Z+51, r25	; 0x33
    2800:	82 ab       	std	Z+50, r24	; 0x32
    2802:	df 91       	pop	r29
    2804:	cf 91       	pop	r28
    2806:	08 95       	ret

00002808 <u8g2_update_dimension_r0>:
    2808:	0e 94 b4 13 	call	0x2768	; 0x2768 <u8g2_update_dimension_common>
    280c:	08 95       	ret

0000280e <u8g2_apply_clip_window>:
    280e:	0f 93       	push	r16
    2810:	1f 93       	push	r17
    2812:	cf 93       	push	r28
    2814:	df 93       	push	r29
    2816:	ec 01       	movw	r28, r24
    2818:	fc 01       	movw	r30, r24
    281a:	ee 5b       	subi	r30, 0xBE	; 190
    281c:	ff 4f       	sbci	r31, 0xFF	; 255
    281e:	00 81       	ld	r16, Z
    2820:	11 81       	ldd	r17, Z+1	; 0x01
    2822:	2e ad       	ldd	r18, Y+62	; 0x3e
    2824:	3f ad       	ldd	r19, Y+63	; 0x3f
    2826:	32 97       	sbiw	r30, 0x02	; 2
    2828:	40 81       	ld	r20, Z
    282a:	51 81       	ldd	r21, Z+1	; 0x01
    282c:	6c ad       	ldd	r22, Y+60	; 0x3c
    282e:	7d ad       	ldd	r23, Y+61	; 0x3d
    2830:	0e 94 5f 12 	call	0x24be	; 0x24be <u8g2_IsIntersection>
    2834:	81 11       	cpse	r24, r1
    2836:	04 c0       	rjmp	.+8      	; 0x2840 <u8g2_apply_clip_window+0x32>
    2838:	c2 59       	subi	r28, 0x92	; 146
    283a:	df 4f       	sbci	r29, 0xFF	; 255
    283c:	18 82       	st	Y, r1
    283e:	2f c0       	rjmp	.+94     	; 0x289e <u8g2_apply_clip_window+0x90>
    2840:	81 e0       	ldi	r24, 0x01	; 1
    2842:	fe 01       	movw	r30, r28
    2844:	e2 59       	subi	r30, 0x92	; 146
    2846:	ff 4f       	sbci	r31, 0xFF	; 255
    2848:	80 83       	st	Z, r24
    284a:	8c ad       	ldd	r24, Y+60	; 0x3c
    284c:	9d ad       	ldd	r25, Y+61	; 0x3d
    284e:	2c a9       	ldd	r18, Y+52	; 0x34
    2850:	3d a9       	ldd	r19, Y+53	; 0x35
    2852:	28 17       	cp	r18, r24
    2854:	39 07       	cpc	r19, r25
    2856:	10 f4       	brcc	.+4      	; 0x285c <u8g2_apply_clip_window+0x4e>
    2858:	9d ab       	std	Y+53, r25	; 0x35
    285a:	8c ab       	std	Y+52, r24	; 0x34
    285c:	8e ad       	ldd	r24, Y+62	; 0x3e
    285e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2860:	2e a9       	ldd	r18, Y+54	; 0x36
    2862:	3f a9       	ldd	r19, Y+55	; 0x37
    2864:	82 17       	cp	r24, r18
    2866:	93 07       	cpc	r25, r19
    2868:	10 f4       	brcc	.+4      	; 0x286e <u8g2_apply_clip_window+0x60>
    286a:	9f ab       	std	Y+55, r25	; 0x37
    286c:	8e ab       	std	Y+54, r24	; 0x36
    286e:	fe 01       	movw	r30, r28
    2870:	e0 5c       	subi	r30, 0xC0	; 192
    2872:	ff 4f       	sbci	r31, 0xFF	; 255
    2874:	80 81       	ld	r24, Z
    2876:	91 81       	ldd	r25, Z+1	; 0x01
    2878:	28 ad       	ldd	r18, Y+56	; 0x38
    287a:	39 ad       	ldd	r19, Y+57	; 0x39
    287c:	28 17       	cp	r18, r24
    287e:	39 07       	cpc	r19, r25
    2880:	10 f4       	brcc	.+4      	; 0x2886 <u8g2_apply_clip_window+0x78>
    2882:	99 af       	std	Y+57, r25	; 0x39
    2884:	88 af       	std	Y+56, r24	; 0x38
    2886:	fe 01       	movw	r30, r28
    2888:	ee 5b       	subi	r30, 0xBE	; 190
    288a:	ff 4f       	sbci	r31, 0xFF	; 255
    288c:	80 81       	ld	r24, Z
    288e:	91 81       	ldd	r25, Z+1	; 0x01
    2890:	2a ad       	ldd	r18, Y+58	; 0x3a
    2892:	3b ad       	ldd	r19, Y+59	; 0x3b
    2894:	82 17       	cp	r24, r18
    2896:	93 07       	cpc	r25, r19
    2898:	10 f4       	brcc	.+4      	; 0x289e <u8g2_apply_clip_window+0x90>
    289a:	9b af       	std	Y+59, r25	; 0x3b
    289c:	8a af       	std	Y+58, r24	; 0x3a
    289e:	df 91       	pop	r29
    28a0:	cf 91       	pop	r28
    28a2:	1f 91       	pop	r17
    28a4:	0f 91       	pop	r16
    28a6:	08 95       	ret

000028a8 <u8g2_update_page_win_r0>:
    28a8:	fc 01       	movw	r30, r24
    28aa:	15 aa       	std	Z+53, r1	; 0x35
    28ac:	14 aa       	std	Z+52, r1	; 0x34
    28ae:	80 a9       	ldd	r24, Z+48	; 0x30
    28b0:	91 a9       	ldd	r25, Z+49	; 0x31
    28b2:	97 ab       	std	Z+55, r25	; 0x37
    28b4:	86 ab       	std	Z+54, r24	; 0x36
    28b6:	84 a5       	ldd	r24, Z+44	; 0x2c
    28b8:	95 a5       	ldd	r25, Z+45	; 0x2d
    28ba:	91 af       	std	Z+57, r25	; 0x39
    28bc:	80 af       	std	Z+56, r24	; 0x38
    28be:	86 a5       	ldd	r24, Z+46	; 0x2e
    28c0:	97 a5       	ldd	r25, Z+47	; 0x2f
    28c2:	93 af       	std	Z+59, r25	; 0x3b
    28c4:	82 af       	std	Z+58, r24	; 0x3a
    28c6:	cf 01       	movw	r24, r30
    28c8:	0e 94 07 14 	call	0x280e	; 0x280e <u8g2_apply_clip_window>
    28cc:	08 95       	ret

000028ce <u8g2_draw_l90_r0>:
    28ce:	0f 93       	push	r16
    28d0:	0e 94 81 11 	call	0x2302	; 0x2302 <u8g2_draw_hv_line_2dir>
    28d4:	0f 91       	pop	r16
    28d6:	08 95       	ret

000028d8 <u8g2_SetMaxClipWindow>:
    28d8:	dc 01       	movw	r26, r24
    28da:	dd 96       	adiw	r26, 0x3d	; 61
    28dc:	1c 92       	st	X, r1
    28de:	1e 92       	st	-X, r1
    28e0:	dc 97       	sbiw	r26, 0x3c	; 60
    28e2:	fc 01       	movw	r30, r24
    28e4:	e0 5c       	subi	r30, 0xC0	; 192
    28e6:	ff 4f       	sbci	r31, 0xFF	; 255
    28e8:	11 82       	std	Z+1, r1	; 0x01
    28ea:	10 82       	st	Z, r1
    28ec:	2f ef       	ldi	r18, 0xFF	; 255
    28ee:	3f ef       	ldi	r19, 0xFF	; 255
    28f0:	fc 01       	movw	r30, r24
    28f2:	37 af       	std	Z+63, r19	; 0x3f
    28f4:	26 af       	std	Z+62, r18	; 0x3e
    28f6:	ee 5b       	subi	r30, 0xBE	; 190
    28f8:	ff 4f       	sbci	r31, 0xFF	; 255
    28fa:	31 83       	std	Z+1, r19	; 0x01
    28fc:	20 83       	st	Z, r18
    28fe:	90 96       	adiw	r26, 0x20	; 32
    2900:	ed 91       	ld	r30, X+
    2902:	fc 91       	ld	r31, X
    2904:	91 97       	sbiw	r26, 0x21	; 33
    2906:	02 80       	ldd	r0, Z+2	; 0x02
    2908:	f3 81       	ldd	r31, Z+3	; 0x03
    290a:	e0 2d       	mov	r30, r0
    290c:	09 95       	icall
    290e:	08 95       	ret

00002910 <u8g2_SetupBuffer>:
/*
  This procedure is called after setting up the display (u8x8 structure).
  --> This is the central init procedure for u8g2 object
*/
void u8g2_SetupBuffer(u8g2_t *u8g2, uint8_t *buf, uint8_t tile_buf_height, u8g2_draw_ll_hvline_cb ll_hvline_cb, const u8g2_cb_t *u8g2_cb)
{
    2910:	0f 93       	push	r16
    2912:	1f 93       	push	r17
    2914:	cf 93       	push	r28
    2916:	df 93       	push	r29
    2918:	ec 01       	movw	r28, r24
  u8g2->font = NULL;
    291a:	fc 01       	movw	r30, r24
    291c:	ec 5b       	subi	r30, 0xBC	; 188
    291e:	ff 4f       	sbci	r31, 0xFF	; 255
    2920:	11 82       	std	Z+1, r1	; 0x01
    2922:	10 82       	st	Z, r1
  //u8g2->kerning = NULL;
  //u8g2->get_kerning_cb = u8g2_GetNullKerning;
  
  //u8g2->ll_hvline = u8g2_ll_hvline_vertical_top_lsb;
  u8g2->ll_hvline = ll_hvline_cb;
    2924:	3f 8f       	std	Y+31, r19	; 0x1f
    2926:	2e 8f       	std	Y+30, r18	; 0x1e
  
  u8g2->tile_buf_ptr = buf;
    2928:	7b a3       	std	Y+35, r23	; 0x23
    292a:	6a a3       	std	Y+34, r22	; 0x22
  u8g2->tile_buf_height = tile_buf_height;
    292c:	4c a3       	std	Y+36, r20	; 0x24
  
  u8g2->tile_curr_row = 0;
    292e:	1d a2       	std	Y+37, r1	; 0x25
  
  u8g2->font_decode.is_transparent = 0; /* issue 443 */
    2930:	3f 96       	adiw	r30, 0x0f	; 15
    2932:	10 82       	st	Z, r1
  u8g2->bitmap_transparency = 0;
    2934:	b0 96       	adiw	r30, 0x20	; 32
    2936:	10 82       	st	Z, r1
  
  u8g2->font_height_mode = 0; /* issue 2046 */
    2938:	34 97       	sbiw	r30, 0x04	; 4
    293a:	10 82       	st	Z, r1
  u8g2->draw_color = 1;
    293c:	35 96       	adiw	r30, 0x05	; 5
    293e:	81 e0       	ldi	r24, 0x01	; 1
    2940:	80 83       	st	Z, r24
  u8g2->is_auto_page_clear = 1;
    2942:	31 96       	adiw	r30, 0x01	; 1
    2944:	80 83       	st	Z, r24
  
  u8g2->cb = u8g2_cb;
    2946:	19 a3       	std	Y+33, r17	; 0x21
    2948:	08 a3       	std	Y+32, r16	; 0x20
  u8g2->cb->update_dimension(u8g2);
    294a:	d8 01       	movw	r26, r16
    294c:	ed 91       	ld	r30, X+
    294e:	fc 91       	ld	r31, X
    2950:	ce 01       	movw	r24, r28
    2952:	09 95       	icall
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  u8g2_SetMaxClipWindow(u8g2);		/* assign a clip window and call the update() procedure */
    2954:	ce 01       	movw	r24, r28
    2956:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <u8g2_SetMaxClipWindow>
#else
  u8g2->cb->update_page_win(u8g2);
#endif

  u8g2_SetFontPosBaseline(u8g2);  /* issue 195 */
    295a:	ce 01       	movw	r24, r28
    295c:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <u8g2_SetFontPosBaseline>
  
#ifdef U8G2_WITH_FONT_ROTATION  
  u8g2->font_decode.dir = 0;
    2960:	ca 5a       	subi	r28, 0xAA	; 170
    2962:	df 4f       	sbci	r29, 0xFF	; 255
    2964:	18 82       	st	Y, r1
#endif
}
    2966:	df 91       	pop	r29
    2968:	cf 91       	pop	r28
    296a:	1f 91       	pop	r17
    296c:	0f 91       	pop	r16
    296e:	08 95       	ret

00002970 <u8x8_ascii_next>:
      x+=th;
      cnt++;
    }
  }
  return cnt;
}
    2970:	66 23       	and	r22, r22
    2972:	29 f0       	breq	.+10     	; 0x297e <u8x8_ascii_next+0xe>
    2974:	6a 30       	cpi	r22, 0x0A	; 10
    2976:	31 f0       	breq	.+12     	; 0x2984 <u8x8_ascii_next+0x14>
    2978:	86 2f       	mov	r24, r22
    297a:	90 e0       	ldi	r25, 0x00	; 0
    297c:	08 95       	ret
    297e:	8f ef       	ldi	r24, 0xFF	; 255
    2980:	9f ef       	ldi	r25, 0xFF	; 255
    2982:	08 95       	ret
    2984:	8f ef       	ldi	r24, 0xFF	; 255
    2986:	9f ef       	ldi	r25, 0xFF	; 255
    2988:	08 95       	ret

0000298a <u8x8_utf8_init>:
*/

/* reset the internal state machine */
void u8x8_utf8_init(u8x8_t *u8x8)
{
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
    298a:	fc 01       	movw	r30, r24
    298c:	10 8e       	std	Z+24, r1	; 0x18
    298e:	08 95       	ret

00002990 <u8x8_byte_SendBytes>:
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SET_DC, dc, NULL);
}

uint8_t u8x8_byte_SendBytes(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
{
    2990:	9a 01       	movw	r18, r20
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SEND, cnt, (void *)data);
    2992:	dc 01       	movw	r26, r24
    2994:	18 96       	adiw	r26, 0x08	; 8
    2996:	ed 91       	ld	r30, X+
    2998:	fc 91       	ld	r31, X
    299a:	19 97       	sbiw	r26, 0x09	; 9
    299c:	46 2f       	mov	r20, r22
    299e:	67 e1       	ldi	r22, 0x17	; 23
    29a0:	09 95       	icall
}
    29a2:	08 95       	ret

000029a4 <u8x8_byte_SendByte>:

uint8_t u8x8_byte_SendByte(u8x8_t *u8x8, uint8_t byte)
{
    29a4:	cf 93       	push	r28
    29a6:	df 93       	push	r29
    29a8:	1f 92       	push	r1
    29aa:	cd b7       	in	r28, 0x3d	; 61
    29ac:	de b7       	in	r29, 0x3e	; 62
    29ae:	69 83       	std	Y+1, r22	; 0x01
  return u8x8_byte_SendBytes(u8x8, 1, &byte);
    29b0:	ae 01       	movw	r20, r28
    29b2:	4f 5f       	subi	r20, 0xFF	; 255
    29b4:	5f 4f       	sbci	r21, 0xFF	; 255
    29b6:	61 e0       	ldi	r22, 0x01	; 1
    29b8:	0e 94 c8 14 	call	0x2990	; 0x2990 <u8x8_byte_SendBytes>
}
    29bc:	0f 90       	pop	r0
    29be:	df 91       	pop	r29
    29c0:	cf 91       	pop	r28
    29c2:	08 95       	ret

000029c4 <u8x8_byte_StartTransfer>:

uint8_t u8x8_byte_StartTransfer(u8x8_t *u8x8)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_START_TRANSFER, 0, NULL);
    29c4:	dc 01       	movw	r26, r24
    29c6:	18 96       	adiw	r26, 0x08	; 8
    29c8:	ed 91       	ld	r30, X+
    29ca:	fc 91       	ld	r31, X
    29cc:	19 97       	sbiw	r26, 0x09	; 9
    29ce:	20 e0       	ldi	r18, 0x00	; 0
    29d0:	30 e0       	ldi	r19, 0x00	; 0
    29d2:	40 e0       	ldi	r20, 0x00	; 0
    29d4:	68 e1       	ldi	r22, 0x18	; 24
    29d6:	09 95       	icall
}
    29d8:	08 95       	ret

000029da <u8x8_byte_EndTransfer>:

uint8_t u8x8_byte_EndTransfer(u8x8_t *u8x8)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_END_TRANSFER, 0, NULL);
    29da:	dc 01       	movw	r26, r24
    29dc:	18 96       	adiw	r26, 0x08	; 8
    29de:	ed 91       	ld	r30, X+
    29e0:	fc 91       	ld	r31, X
    29e2:	19 97       	sbiw	r26, 0x09	; 9
    29e4:	20 e0       	ldi	r18, 0x00	; 0
    29e6:	30 e0       	ldi	r19, 0x00	; 0
    29e8:	40 e0       	ldi	r20, 0x00	; 0
    29ea:	69 e1       	ldi	r22, 0x19	; 25
    29ec:	09 95       	icall
}
    29ee:	08 95       	ret

000029f0 <u8x8_i2c_data_transfer>:
      break;
    default:
      return 0;
  }
  return 1;
}
    29f0:	ef 92       	push	r14
    29f2:	ff 92       	push	r15
    29f4:	1f 93       	push	r17
    29f6:	cf 93       	push	r28
    29f8:	df 93       	push	r29
    29fa:	ec 01       	movw	r28, r24
    29fc:	16 2f       	mov	r17, r22
    29fe:	7a 01       	movw	r14, r20
    2a00:	0e 94 e2 14 	call	0x29c4	; 0x29c4 <u8x8_byte_StartTransfer>
    2a04:	60 e4       	ldi	r22, 0x40	; 64
    2a06:	ce 01       	movw	r24, r28
    2a08:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <u8x8_byte_SendByte>
    2a0c:	e8 85       	ldd	r30, Y+8	; 0x08
    2a0e:	f9 85       	ldd	r31, Y+9	; 0x09
    2a10:	97 01       	movw	r18, r14
    2a12:	41 2f       	mov	r20, r17
    2a14:	67 e1       	ldi	r22, 0x17	; 23
    2a16:	ce 01       	movw	r24, r28
    2a18:	09 95       	icall
    2a1a:	ce 01       	movw	r24, r28
    2a1c:	0e 94 ed 14 	call	0x29da	; 0x29da <u8x8_byte_EndTransfer>
    2a20:	df 91       	pop	r29
    2a22:	cf 91       	pop	r28
    2a24:	1f 91       	pop	r17
    2a26:	ff 90       	pop	r15
    2a28:	ef 90       	pop	r14
    2a2a:	08 95       	ret

00002a2c <u8x8_cad_SendCmd>:
    2a2c:	46 2f       	mov	r20, r22
    2a2e:	dc 01       	movw	r26, r24
    2a30:	16 96       	adiw	r26, 0x06	; 6
    2a32:	ed 91       	ld	r30, X+
    2a34:	fc 91       	ld	r31, X
    2a36:	17 97       	sbiw	r26, 0x07	; 7
    2a38:	20 e0       	ldi	r18, 0x00	; 0
    2a3a:	30 e0       	ldi	r19, 0x00	; 0
    2a3c:	65 e1       	ldi	r22, 0x15	; 21
    2a3e:	09 95       	icall
    2a40:	08 95       	ret

00002a42 <u8x8_cad_SendArg>:
    2a42:	46 2f       	mov	r20, r22
    2a44:	dc 01       	movw	r26, r24
    2a46:	16 96       	adiw	r26, 0x06	; 6
    2a48:	ed 91       	ld	r30, X+
    2a4a:	fc 91       	ld	r31, X
    2a4c:	17 97       	sbiw	r26, 0x07	; 7
    2a4e:	20 e0       	ldi	r18, 0x00	; 0
    2a50:	30 e0       	ldi	r19, 0x00	; 0
    2a52:	66 e1       	ldi	r22, 0x16	; 22
    2a54:	09 95       	icall
    2a56:	08 95       	ret

00002a58 <u8x8_cad_SendData>:
    2a58:	9a 01       	movw	r18, r20
    2a5a:	dc 01       	movw	r26, r24
    2a5c:	16 96       	adiw	r26, 0x06	; 6
    2a5e:	ed 91       	ld	r30, X+
    2a60:	fc 91       	ld	r31, X
    2a62:	17 97       	sbiw	r26, 0x07	; 7
    2a64:	46 2f       	mov	r20, r22
    2a66:	67 e1       	ldi	r22, 0x17	; 23
    2a68:	09 95       	icall
    2a6a:	08 95       	ret

00002a6c <u8x8_cad_StartTransfer>:
    2a6c:	dc 01       	movw	r26, r24
    2a6e:	16 96       	adiw	r26, 0x06	; 6
    2a70:	ed 91       	ld	r30, X+
    2a72:	fc 91       	ld	r31, X
    2a74:	17 97       	sbiw	r26, 0x07	; 7
    2a76:	20 e0       	ldi	r18, 0x00	; 0
    2a78:	30 e0       	ldi	r19, 0x00	; 0
    2a7a:	40 e0       	ldi	r20, 0x00	; 0
    2a7c:	68 e1       	ldi	r22, 0x18	; 24
    2a7e:	09 95       	icall
    2a80:	08 95       	ret

00002a82 <u8x8_cad_EndTransfer>:
    2a82:	dc 01       	movw	r26, r24
    2a84:	16 96       	adiw	r26, 0x06	; 6
    2a86:	ed 91       	ld	r30, X+
    2a88:	fc 91       	ld	r31, X
    2a8a:	17 97       	sbiw	r26, 0x07	; 7
    2a8c:	20 e0       	ldi	r18, 0x00	; 0
    2a8e:	30 e0       	ldi	r19, 0x00	; 0
    2a90:	40 e0       	ldi	r20, 0x00	; 0
    2a92:	69 e1       	ldi	r22, 0x19	; 25
    2a94:	09 95       	icall
    2a96:	08 95       	ret

00002a98 <u8x8_cad_SendSequence>:
    2a98:	ef 92       	push	r14
    2a9a:	ff 92       	push	r15
    2a9c:	0f 93       	push	r16
    2a9e:	1f 93       	push	r17
    2aa0:	cf 93       	push	r28
    2aa2:	df 93       	push	r29
    2aa4:	1f 92       	push	r1
    2aa6:	cd b7       	in	r28, 0x3d	; 61
    2aa8:	de b7       	in	r29, 0x3e	; 62
    2aaa:	7c 01       	movw	r14, r24
    2aac:	8b 01       	movw	r16, r22
    2aae:	d8 01       	movw	r26, r16
    2ab0:	6c 91       	ld	r22, X
    2ab2:	67 31       	cpi	r22, 0x17	; 23
    2ab4:	c1 f0       	breq	.+48     	; 0x2ae6 <u8x8_cad_SendSequence+0x4e>
    2ab6:	18 f4       	brcc	.+6      	; 0x2abe <u8x8_cad_SendSequence+0x26>
    2ab8:	65 31       	cpi	r22, 0x15	; 21
    2aba:	30 f4       	brcc	.+12     	; 0x2ac8 <u8x8_cad_SendSequence+0x30>
    2abc:	38 c0       	rjmp	.+112    	; 0x2b2e <u8x8_cad_SendSequence+0x96>
    2abe:	6a 31       	cpi	r22, 0x1A	; 26
    2ac0:	f8 f0       	brcs	.+62     	; 0x2b00 <u8x8_cad_SendSequence+0x68>
    2ac2:	6e 3f       	cpi	r22, 0xFE	; 254
    2ac4:	51 f1       	breq	.+84     	; 0x2b1a <u8x8_cad_SendSequence+0x82>
    2ac6:	33 c0       	rjmp	.+102    	; 0x2b2e <u8x8_cad_SendSequence+0x96>
    2ac8:	f8 01       	movw	r30, r16
    2aca:	41 81       	ldd	r20, Z+1	; 0x01
    2acc:	49 83       	std	Y+1, r20	; 0x01
    2ace:	d7 01       	movw	r26, r14
    2ad0:	16 96       	adiw	r26, 0x06	; 6
    2ad2:	ed 91       	ld	r30, X+
    2ad4:	fc 91       	ld	r31, X
    2ad6:	17 97       	sbiw	r26, 0x07	; 7
    2ad8:	20 e0       	ldi	r18, 0x00	; 0
    2ada:	30 e0       	ldi	r19, 0x00	; 0
    2adc:	c7 01       	movw	r24, r14
    2ade:	09 95       	icall
    2ae0:	0e 5f       	subi	r16, 0xFE	; 254
    2ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    2ae4:	e4 cf       	rjmp	.-56     	; 0x2aae <u8x8_cad_SendSequence+0x16>
    2ae6:	f8 01       	movw	r30, r16
    2ae8:	81 81       	ldd	r24, Z+1	; 0x01
    2aea:	89 83       	std	Y+1, r24	; 0x01
    2aec:	ae 01       	movw	r20, r28
    2aee:	4f 5f       	subi	r20, 0xFF	; 255
    2af0:	5f 4f       	sbci	r21, 0xFF	; 255
    2af2:	61 e0       	ldi	r22, 0x01	; 1
    2af4:	c7 01       	movw	r24, r14
    2af6:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <u8x8_cad_SendData>
    2afa:	0e 5f       	subi	r16, 0xFE	; 254
    2afc:	1f 4f       	sbci	r17, 0xFF	; 255
    2afe:	d7 cf       	rjmp	.-82     	; 0x2aae <u8x8_cad_SendSequence+0x16>
    2b00:	0f 5f       	subi	r16, 0xFF	; 255
    2b02:	1f 4f       	sbci	r17, 0xFF	; 255
    2b04:	d7 01       	movw	r26, r14
    2b06:	16 96       	adiw	r26, 0x06	; 6
    2b08:	ed 91       	ld	r30, X+
    2b0a:	fc 91       	ld	r31, X
    2b0c:	17 97       	sbiw	r26, 0x07	; 7
    2b0e:	20 e0       	ldi	r18, 0x00	; 0
    2b10:	30 e0       	ldi	r19, 0x00	; 0
    2b12:	40 e0       	ldi	r20, 0x00	; 0
    2b14:	c7 01       	movw	r24, r14
    2b16:	09 95       	icall
    2b18:	ca cf       	rjmp	.-108    	; 0x2aae <u8x8_cad_SendSequence+0x16>
    2b1a:	f8 01       	movw	r30, r16
    2b1c:	41 81       	ldd	r20, Z+1	; 0x01
    2b1e:	49 83       	std	Y+1, r20	; 0x01
    2b20:	69 e2       	ldi	r22, 0x29	; 41
    2b22:	c7 01       	movw	r24, r14
    2b24:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <u8x8_gpio_call>
    2b28:	0e 5f       	subi	r16, 0xFE	; 254
    2b2a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b2c:	c0 cf       	rjmp	.-128    	; 0x2aae <u8x8_cad_SendSequence+0x16>
    2b2e:	0f 90       	pop	r0
    2b30:	df 91       	pop	r29
    2b32:	cf 91       	pop	r28
    2b34:	1f 91       	pop	r17
    2b36:	0f 91       	pop	r16
    2b38:	ff 90       	pop	r15
    2b3a:	ef 90       	pop	r14
    2b3c:	08 95       	ret

00002b3e <u8x8_cad_ssd13xx_fast_i2c>:


/* fast version with reduced data start/stops, issue 735 */
uint8_t u8x8_cad_ssd13xx_fast_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    2b3e:	ef 92       	push	r14
    2b40:	ff 92       	push	r15
    2b42:	0f 93       	push	r16
    2b44:	1f 93       	push	r17
    2b46:	cf 93       	push	r28
    2b48:	7c 01       	movw	r14, r24
    2b4a:	c4 2f       	mov	r28, r20
    2b4c:	89 01       	movw	r16, r18
  static uint8_t in_transfer = 0;
  uint8_t *p;
  switch(msg)
    2b4e:	66 31       	cpi	r22, 0x16	; 22
    2b50:	29 f1       	breq	.+74     	; 0x2b9c <u8x8_cad_ssd13xx_fast_i2c+0x5e>
    2b52:	30 f4       	brcc	.+12     	; 0x2b60 <u8x8_cad_ssd13xx_fast_i2c+0x22>
    2b54:	64 31       	cpi	r22, 0x14	; 20
    2b56:	09 f4       	brne	.+2      	; 0x2b5a <u8x8_cad_ssd13xx_fast_i2c+0x1c>
    2b58:	42 c0       	rjmp	.+132    	; 0x2bde <u8x8_cad_ssd13xx_fast_i2c+0xa0>
    2b5a:	65 31       	cpi	r22, 0x15	; 21
    2b5c:	49 f0       	breq	.+18     	; 0x2b70 <u8x8_cad_ssd13xx_fast_i2c+0x32>
    2b5e:	62 c0       	rjmp	.+196    	; 0x2c24 <u8x8_cad_ssd13xx_fast_i2c+0xe6>
    2b60:	68 31       	cpi	r22, 0x18	; 24
    2b62:	09 f4       	brne	.+2      	; 0x2b66 <u8x8_cad_ssd13xx_fast_i2c+0x28>
    2b64:	50 c0       	rjmp	.+160    	; 0x2c06 <u8x8_cad_ssd13xx_fast_i2c+0xc8>
    2b66:	f8 f0       	brcs	.+62     	; 0x2ba6 <u8x8_cad_ssd13xx_fast_i2c+0x68>
    2b68:	69 31       	cpi	r22, 0x19	; 25
    2b6a:	09 f4       	brne	.+2      	; 0x2b6e <u8x8_cad_ssd13xx_fast_i2c+0x30>
    2b6c:	50 c0       	rjmp	.+160    	; 0x2c0e <u8x8_cad_ssd13xx_fast_i2c+0xd0>
    2b6e:	5a c0       	rjmp	.+180    	; 0x2c24 <u8x8_cad_ssd13xx_fast_i2c+0xe6>
  {
    case U8X8_MSG_CAD_SEND_CMD:
      /* improved version, takeover from ld7032 */
      /* assumes, that the args of a command is not longer than 31 bytes */
      /* speed improvement is about 4% compared to the classic version */
      if ( in_transfer != 0 )
    2b70:	80 91 98 05 	lds	r24, 0x0598	; 0x800598 <in_transfer.3644>
    2b74:	88 23       	and	r24, r24
    2b76:	19 f0       	breq	.+6      	; 0x2b7e <u8x8_cad_ssd13xx_fast_i2c+0x40>
	 u8x8_byte_EndTransfer(u8x8); 
    2b78:	c7 01       	movw	r24, r14
    2b7a:	0e 94 ed 14 	call	0x29da	; 0x29da <u8x8_byte_EndTransfer>
      
      u8x8_byte_StartTransfer(u8x8);
    2b7e:	c7 01       	movw	r24, r14
    2b80:	0e 94 e2 14 	call	0x29c4	; 0x29c4 <u8x8_byte_StartTransfer>
      u8x8_byte_SendByte(u8x8, 0x000);	/* cmd byte for ssd13xx controller */
    2b84:	60 e0       	ldi	r22, 0x00	; 0
    2b86:	c7 01       	movw	r24, r14
    2b88:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <u8x8_byte_SendByte>
      u8x8_byte_SendByte(u8x8, arg_int);
    2b8c:	6c 2f       	mov	r22, r28
    2b8e:	c7 01       	movw	r24, r14
    2b90:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <u8x8_byte_SendByte>
      in_transfer = 1;
    2b94:	81 e0       	ldi	r24, 0x01	; 1
    2b96:	80 93 98 05 	sts	0x0598, r24	; 0x800598 <in_transfer.3644>
	//   u8x8_byte_StartTransfer(u8x8);
	//   u8x8_byte_SendByte(u8x8, 0x000);	/* cmd byte for ssd13xx controller */
	//   in_transfer = 1;
	// }
	//u8x8_byte_SendByte(u8x8, arg_int);
      break;
    2b9a:	45 c0       	rjmp	.+138    	; 0x2c26 <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    case U8X8_MSG_CAD_SEND_ARG:
      u8x8_byte_SendByte(u8x8, arg_int);
    2b9c:	64 2f       	mov	r22, r20
    2b9e:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <u8x8_byte_SendByte>
      in_transfer = 0;
      break;
    default:
      return 0;
  }
  return 1;
    2ba2:	81 e0       	ldi	r24, 0x01	; 1
	// }
	//u8x8_byte_SendByte(u8x8, arg_int);
      break;
    case U8X8_MSG_CAD_SEND_ARG:
      u8x8_byte_SendByte(u8x8, arg_int);
      break;      
    2ba4:	40 c0       	rjmp	.+128    	; 0x2c26 <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    case U8X8_MSG_CAD_SEND_DATA:
      if ( in_transfer != 0 )
    2ba6:	80 91 98 05 	lds	r24, 0x0598	; 0x800598 <in_transfer.3644>
    2baa:	88 23       	and	r24, r24
    2bac:	19 f0       	breq	.+6      	; 0x2bb4 <u8x8_cad_ssd13xx_fast_i2c+0x76>
	u8x8_byte_EndTransfer(u8x8); 
    2bae:	c7 01       	movw	r24, r14
    2bb0:	0e 94 ed 14 	call	0x29da	; 0x29da <u8x8_byte_EndTransfer>
      /* I guess this is related to the size of the Wire buffers in Arduino */
      /* Unfortunately, this can not be handled in the byte level drivers, */
      /* so this is done here. Even further, only 24 bytes will be sent, */
      /* because there will be another byte (DC) required during the transfer */
      p = arg_ptr;
       while( arg_int > 24 )
    2bb4:	c9 31       	cpi	r28, 0x19	; 25
    2bb6:	50 f0       	brcs	.+20     	; 0x2bcc <u8x8_cad_ssd13xx_fast_i2c+0x8e>
      {
	u8x8_i2c_data_transfer(u8x8, 24, p);
    2bb8:	a8 01       	movw	r20, r16
    2bba:	68 e1       	ldi	r22, 0x18	; 24
    2bbc:	c7 01       	movw	r24, r14
    2bbe:	0e 94 f8 14 	call	0x29f0	; 0x29f0 <u8x8_i2c_data_transfer>
	arg_int-=24;
    2bc2:	c8 51       	subi	r28, 0x18	; 24
	p+=24;
    2bc4:	08 5e       	subi	r16, 0xE8	; 232
    2bc6:	1f 4f       	sbci	r17, 0xFF	; 255
      /* I guess this is related to the size of the Wire buffers in Arduino */
      /* Unfortunately, this can not be handled in the byte level drivers, */
      /* so this is done here. Even further, only 24 bytes will be sent, */
      /* because there will be another byte (DC) required during the transfer */
      p = arg_ptr;
       while( arg_int > 24 )
    2bc8:	c9 31       	cpi	r28, 0x19	; 25
    2bca:	b0 f7       	brcc	.-20     	; 0x2bb8 <u8x8_cad_ssd13xx_fast_i2c+0x7a>
      {
	u8x8_i2c_data_transfer(u8x8, 24, p);
	arg_int-=24;
	p+=24;
      }
      u8x8_i2c_data_transfer(u8x8, arg_int, p);
    2bcc:	a8 01       	movw	r20, r16
    2bce:	6c 2f       	mov	r22, r28
    2bd0:	c7 01       	movw	r24, r14
    2bd2:	0e 94 f8 14 	call	0x29f0	; 0x29f0 <u8x8_i2c_data_transfer>
      in_transfer = 0;
    2bd6:	10 92 98 05 	sts	0x0598, r1	; 0x800598 <in_transfer.3644>
      in_transfer = 0;
      break;
    default:
      return 0;
  }
  return 1;
    2bda:	81 e0       	ldi	r24, 0x01	; 1
	arg_int-=24;
	p+=24;
      }
      u8x8_i2c_data_transfer(u8x8, arg_int, p);
      in_transfer = 0;
      break;
    2bdc:	24 c0       	rjmp	.+72     	; 0x2c26 <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    case U8X8_MSG_CAD_INIT:
      /* apply default i2c adr if required so that the start transfer msg can use this */
      if ( u8x8->i2c_address == 255 )
    2bde:	dc 01       	movw	r26, r24
    2be0:	56 96       	adiw	r26, 0x16	; 22
    2be2:	8c 91       	ld	r24, X
    2be4:	56 97       	sbiw	r26, 0x16	; 22
    2be6:	8f 3f       	cpi	r24, 0xFF	; 255
    2be8:	19 f4       	brne	.+6      	; 0x2bf0 <u8x8_cad_ssd13xx_fast_i2c+0xb2>
	u8x8->i2c_address = 0x078;
    2bea:	88 e7       	ldi	r24, 0x78	; 120
    2bec:	56 96       	adiw	r26, 0x16	; 22
    2bee:	8c 93       	st	X, r24
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    2bf0:	d7 01       	movw	r26, r14
    2bf2:	18 96       	adiw	r26, 0x08	; 8
    2bf4:	ed 91       	ld	r30, X+
    2bf6:	fc 91       	ld	r31, X
    2bf8:	19 97       	sbiw	r26, 0x09	; 9
    2bfa:	98 01       	movw	r18, r16
    2bfc:	4c 2f       	mov	r20, r28
    2bfe:	64 e1       	ldi	r22, 0x14	; 20
    2c00:	c7 01       	movw	r24, r14
    2c02:	09 95       	icall
    2c04:	10 c0       	rjmp	.+32     	; 0x2c26 <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    case U8X8_MSG_CAD_START_TRANSFER:
      in_transfer = 0;
    2c06:	10 92 98 05 	sts	0x0598, r1	; 0x800598 <in_transfer.3644>
      in_transfer = 0;
      break;
    default:
      return 0;
  }
  return 1;
    2c0a:	81 e0       	ldi	r24, 0x01	; 1
      if ( u8x8->i2c_address == 255 )
	u8x8->i2c_address = 0x078;
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    case U8X8_MSG_CAD_START_TRANSFER:
      in_transfer = 0;
      break;
    2c0c:	0c c0       	rjmp	.+24     	; 0x2c26 <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    case U8X8_MSG_CAD_END_TRANSFER:
      if ( in_transfer != 0 )
    2c0e:	80 91 98 05 	lds	r24, 0x0598	; 0x800598 <in_transfer.3644>
    2c12:	88 23       	and	r24, r24
    2c14:	19 f0       	breq	.+6      	; 0x2c1c <u8x8_cad_ssd13xx_fast_i2c+0xde>
	u8x8_byte_EndTransfer(u8x8); 
    2c16:	c7 01       	movw	r24, r14
    2c18:	0e 94 ed 14 	call	0x29da	; 0x29da <u8x8_byte_EndTransfer>
      in_transfer = 0;
    2c1c:	10 92 98 05 	sts	0x0598, r1	; 0x800598 <in_transfer.3644>
      break;
    default:
      return 0;
  }
  return 1;
    2c20:	81 e0       	ldi	r24, 0x01	; 1
      break;
    case U8X8_MSG_CAD_END_TRANSFER:
      if ( in_transfer != 0 )
	u8x8_byte_EndTransfer(u8x8); 
      in_transfer = 0;
      break;
    2c22:	01 c0       	rjmp	.+2      	; 0x2c26 <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    default:
      return 0;
    2c24:	80 e0       	ldi	r24, 0x00	; 0
  }
  return 1;
}
    2c26:	cf 91       	pop	r28
    2c28:	1f 91       	pop	r17
    2c2a:	0f 91       	pop	r16
    2c2c:	ff 90       	pop	r15
    2c2e:	ef 90       	pop	r14
    2c30:	08 95       	ret

00002c32 <u8x8_d_helper_display_setup_memory>:
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_FLIP_MODE, mode, NULL);  
}

void u8x8_SetContrast(u8x8_t *u8x8, uint8_t value)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
    2c32:	fc 01       	movw	r30, r24
    2c34:	71 83       	std	Z+1, r23	; 0x01
    2c36:	60 83       	st	Z, r22
    2c38:	fb 01       	movw	r30, r22
    2c3a:	22 89       	ldd	r18, Z+18	; 0x12
    2c3c:	fc 01       	movw	r30, r24
    2c3e:	24 8b       	std	Z+20, r18	; 0x14
    2c40:	08 95       	ret

00002c42 <u8x8_d_helper_display_init>:
    2c42:	cf 93       	push	r28
    2c44:	df 93       	push	r29
    2c46:	ec 01       	movw	r28, r24
    2c48:	ea 85       	ldd	r30, Y+10	; 0x0a
    2c4a:	fb 85       	ldd	r31, Y+11	; 0x0b
    2c4c:	20 e0       	ldi	r18, 0x00	; 0
    2c4e:	30 e0       	ldi	r19, 0x00	; 0
    2c50:	40 e0       	ldi	r20, 0x00	; 0
    2c52:	68 e2       	ldi	r22, 0x28	; 40
    2c54:	09 95       	icall
    2c56:	ee 81       	ldd	r30, Y+6	; 0x06
    2c58:	ff 81       	ldd	r31, Y+7	; 0x07
    2c5a:	20 e0       	ldi	r18, 0x00	; 0
    2c5c:	30 e0       	ldi	r19, 0x00	; 0
    2c5e:	40 e0       	ldi	r20, 0x00	; 0
    2c60:	64 e1       	ldi	r22, 0x14	; 20
    2c62:	ce 01       	movw	r24, r28
    2c64:	09 95       	icall
    2c66:	41 e0       	ldi	r20, 0x01	; 1
    2c68:	6b e4       	ldi	r22, 0x4B	; 75
    2c6a:	ce 01       	movw	r24, r28
    2c6c:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <u8x8_gpio_call>
    2c70:	e8 81       	ld	r30, Y
    2c72:	f9 81       	ldd	r31, Y+1	; 0x01
    2c74:	44 81       	ldd	r20, Z+4	; 0x04
    2c76:	69 e2       	ldi	r22, 0x29	; 41
    2c78:	ce 01       	movw	r24, r28
    2c7a:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <u8x8_gpio_call>
    2c7e:	40 e0       	ldi	r20, 0x00	; 0
    2c80:	6b e4       	ldi	r22, 0x4B	; 75
    2c82:	ce 01       	movw	r24, r28
    2c84:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <u8x8_gpio_call>
    2c88:	e8 81       	ld	r30, Y
    2c8a:	f9 81       	ldd	r31, Y+1	; 0x01
    2c8c:	44 81       	ldd	r20, Z+4	; 0x04
    2c8e:	69 e2       	ldi	r22, 0x29	; 41
    2c90:	ce 01       	movw	r24, r28
    2c92:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <u8x8_gpio_call>
    2c96:	41 e0       	ldi	r20, 0x01	; 1
    2c98:	6b e4       	ldi	r22, 0x4B	; 75
    2c9a:	ce 01       	movw	r24, r28
    2c9c:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <u8x8_gpio_call>
    2ca0:	e8 81       	ld	r30, Y
    2ca2:	f9 81       	ldd	r31, Y+1	; 0x01
    2ca4:	45 81       	ldd	r20, Z+5	; 0x05
    2ca6:	69 e2       	ldi	r22, 0x29	; 41
    2ca8:	ce 01       	movw	r24, r28
    2caa:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <u8x8_gpio_call>
    2cae:	df 91       	pop	r29
    2cb0:	cf 91       	pop	r28
    2cb2:	08 95       	ret

00002cb4 <u8x8_DrawTile>:
    2cb4:	0f 93       	push	r16
    2cb6:	1f 93       	push	r17
    2cb8:	cf 93       	push	r28
    2cba:	df 93       	push	r29
    2cbc:	00 d0       	rcall	.+0      	; 0x2cbe <u8x8_DrawTile+0xa>
    2cbe:	00 d0       	rcall	.+0      	; 0x2cc0 <u8x8_DrawTile+0xc>
    2cc0:	1f 92       	push	r1
    2cc2:	cd b7       	in	r28, 0x3d	; 61
    2cc4:	de b7       	in	r29, 0x3e	; 62
    2cc6:	6c 83       	std	Y+4, r22	; 0x04
    2cc8:	4d 83       	std	Y+5, r20	; 0x05
    2cca:	2b 83       	std	Y+3, r18	; 0x03
    2ccc:	1a 83       	std	Y+2, r17	; 0x02
    2cce:	09 83       	std	Y+1, r16	; 0x01
    2cd0:	dc 01       	movw	r26, r24
    2cd2:	14 96       	adiw	r26, 0x04	; 4
    2cd4:	ed 91       	ld	r30, X+
    2cd6:	fc 91       	ld	r31, X
    2cd8:	15 97       	sbiw	r26, 0x05	; 5
    2cda:	9e 01       	movw	r18, r28
    2cdc:	2f 5f       	subi	r18, 0xFF	; 255
    2cde:	3f 4f       	sbci	r19, 0xFF	; 255
    2ce0:	41 e0       	ldi	r20, 0x01	; 1
    2ce2:	6f e0       	ldi	r22, 0x0F	; 15
    2ce4:	09 95       	icall
    2ce6:	0f 90       	pop	r0
    2ce8:	0f 90       	pop	r0
    2cea:	0f 90       	pop	r0
    2cec:	0f 90       	pop	r0
    2cee:	0f 90       	pop	r0
    2cf0:	df 91       	pop	r29
    2cf2:	cf 91       	pop	r28
    2cf4:	1f 91       	pop	r17
    2cf6:	0f 91       	pop	r16
    2cf8:	08 95       	ret

00002cfa <u8x8_SetupMemory>:
    2cfa:	dc 01       	movw	r26, r24
    2cfc:	14 96       	adiw	r26, 0x04	; 4
    2cfe:	ed 91       	ld	r30, X+
    2d00:	fc 91       	ld	r31, X
    2d02:	15 97       	sbiw	r26, 0x05	; 5
    2d04:	20 e0       	ldi	r18, 0x00	; 0
    2d06:	30 e0       	ldi	r19, 0x00	; 0
    2d08:	40 e0       	ldi	r20, 0x00	; 0
    2d0a:	69 e0       	ldi	r22, 0x09	; 9
    2d0c:	09 95       	icall
    2d0e:	08 95       	ret

00002d10 <u8x8_InitDisplay>:
    2d10:	dc 01       	movw	r26, r24
    2d12:	14 96       	adiw	r26, 0x04	; 4
    2d14:	ed 91       	ld	r30, X+
    2d16:	fc 91       	ld	r31, X
    2d18:	15 97       	sbiw	r26, 0x05	; 5
    2d1a:	20 e0       	ldi	r18, 0x00	; 0
    2d1c:	30 e0       	ldi	r19, 0x00	; 0
    2d1e:	40 e0       	ldi	r20, 0x00	; 0
    2d20:	6a e0       	ldi	r22, 0x0A	; 10
    2d22:	09 95       	icall
    2d24:	08 95       	ret

00002d26 <u8x8_SetPowerSave>:
    2d26:	46 2f       	mov	r20, r22
    2d28:	dc 01       	movw	r26, r24
    2d2a:	14 96       	adiw	r26, 0x04	; 4
    2d2c:	ed 91       	ld	r30, X+
    2d2e:	fc 91       	ld	r31, X
    2d30:	15 97       	sbiw	r26, 0x05	; 5
    2d32:	20 e0       	ldi	r18, 0x00	; 0
    2d34:	30 e0       	ldi	r19, 0x00	; 0
    2d36:	6b e0       	ldi	r22, 0x0B	; 11
    2d38:	09 95       	icall
    2d3a:	08 95       	ret

00002d3c <u8x8_RefreshDisplay>:
}

void u8x8_RefreshDisplay(u8x8_t *u8x8)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
    2d3c:	dc 01       	movw	r26, r24
    2d3e:	14 96       	adiw	r26, 0x04	; 4
    2d40:	ed 91       	ld	r30, X+
    2d42:	fc 91       	ld	r31, X
    2d44:	15 97       	sbiw	r26, 0x05	; 5
    2d46:	20 e0       	ldi	r18, 0x00	; 0
    2d48:	30 e0       	ldi	r19, 0x00	; 0
    2d4a:	40 e0       	ldi	r20, 0x00	; 0
    2d4c:	60 e1       	ldi	r22, 0x10	; 16
    2d4e:	09 95       	icall
    2d50:	08 95       	ret

00002d52 <u8x8_d_ssd1306_sh1106_generic>:
      break;
    default:
      return 0;
  }
  return 1;
}
    2d52:	ef 92       	push	r14
    2d54:	ff 92       	push	r15
    2d56:	0f 93       	push	r16
    2d58:	1f 93       	push	r17
    2d5a:	cf 93       	push	r28
    2d5c:	df 93       	push	r29
    2d5e:	8c 01       	movw	r16, r24
    2d60:	c4 2f       	mov	r28, r20
    2d62:	79 01       	movw	r14, r18
    2d64:	6d 30       	cpi	r22, 0x0D	; 13
    2d66:	b9 f0       	breq	.+46     	; 0x2d96 <u8x8_d_ssd1306_sh1106_generic+0x44>
    2d68:	18 f4       	brcc	.+6      	; 0x2d70 <u8x8_d_ssd1306_sh1106_generic+0x1e>
    2d6a:	6b 30       	cpi	r22, 0x0B	; 11
    2d6c:	31 f0       	breq	.+12     	; 0x2d7a <u8x8_d_ssd1306_sh1106_generic+0x28>
    2d6e:	72 c0       	rjmp	.+228    	; 0x2e54 <u8x8_d_ssd1306_sh1106_generic+0x102>
    2d70:	6e 30       	cpi	r22, 0x0E	; 14
    2d72:	69 f1       	breq	.+90     	; 0x2dce <u8x8_d_ssd1306_sh1106_generic+0x7c>
    2d74:	6f 30       	cpi	r22, 0x0F	; 15
    2d76:	d1 f1       	breq	.+116    	; 0x2dec <u8x8_d_ssd1306_sh1106_generic+0x9a>
    2d78:	6d c0       	rjmp	.+218    	; 0x2e54 <u8x8_d_ssd1306_sh1106_generic+0x102>
    2d7a:	41 11       	cpse	r20, r1
    2d7c:	06 c0       	rjmp	.+12     	; 0x2d8a <u8x8_d_ssd1306_sh1106_generic+0x38>
    2d7e:	69 e5       	ldi	r22, 0x59	; 89
    2d80:	71 e0       	ldi	r23, 0x01	; 1
    2d82:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <u8x8_cad_SendSequence>
    2d86:	81 e0       	ldi	r24, 0x01	; 1
    2d88:	66 c0       	rjmp	.+204    	; 0x2e56 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2d8a:	64 e5       	ldi	r22, 0x54	; 84
    2d8c:	71 e0       	ldi	r23, 0x01	; 1
    2d8e:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <u8x8_cad_SendSequence>
    2d92:	81 e0       	ldi	r24, 0x01	; 1
    2d94:	60 c0       	rjmp	.+192    	; 0x2e56 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2d96:	41 11       	cpse	r20, r1
    2d98:	0d c0       	rjmp	.+26     	; 0x2db4 <u8x8_d_ssd1306_sh1106_generic+0x62>
    2d9a:	6d e4       	ldi	r22, 0x4D	; 77
    2d9c:	71 e0       	ldi	r23, 0x01	; 1
    2d9e:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <u8x8_cad_SendSequence>
    2da2:	d8 01       	movw	r26, r16
    2da4:	ed 91       	ld	r30, X+
    2da6:	fc 91       	ld	r31, X
    2da8:	11 97       	sbiw	r26, 0x01	; 1
    2daa:	82 89       	ldd	r24, Z+18	; 0x12
    2dac:	54 96       	adiw	r26, 0x14	; 20
    2dae:	8c 93       	st	X, r24
    2db0:	81 e0       	ldi	r24, 0x01	; 1
    2db2:	51 c0       	rjmp	.+162    	; 0x2e56 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2db4:	66 e4       	ldi	r22, 0x46	; 70
    2db6:	71 e0       	ldi	r23, 0x01	; 1
    2db8:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <u8x8_cad_SendSequence>
    2dbc:	d8 01       	movw	r26, r16
    2dbe:	ed 91       	ld	r30, X+
    2dc0:	fc 91       	ld	r31, X
    2dc2:	11 97       	sbiw	r26, 0x01	; 1
    2dc4:	83 89       	ldd	r24, Z+19	; 0x13
    2dc6:	54 96       	adiw	r26, 0x14	; 20
    2dc8:	8c 93       	st	X, r24
    2dca:	81 e0       	ldi	r24, 0x01	; 1
    2dcc:	44 c0       	rjmp	.+136    	; 0x2e56 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2dce:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <u8x8_cad_StartTransfer>
    2dd2:	61 e8       	ldi	r22, 0x81	; 129
    2dd4:	c8 01       	movw	r24, r16
    2dd6:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <u8x8_cad_SendCmd>
    2dda:	6c 2f       	mov	r22, r28
    2ddc:	c8 01       	movw	r24, r16
    2dde:	0e 94 21 15 	call	0x2a42	; 0x2a42 <u8x8_cad_SendArg>
    2de2:	c8 01       	movw	r24, r16
    2de4:	0e 94 41 15 	call	0x2a82	; 0x2a82 <u8x8_cad_EndTransfer>
    2de8:	81 e0       	ldi	r24, 0x01	; 1
    2dea:	35 c0       	rjmp	.+106    	; 0x2e56 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2dec:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <u8x8_cad_StartTransfer>
    2df0:	f7 01       	movw	r30, r14
    2df2:	d3 81       	ldd	r29, Z+3	; 0x03
    2df4:	dd 0f       	add	r29, r29
    2df6:	dd 0f       	add	r29, r29
    2df8:	dd 0f       	add	r29, r29
    2dfa:	d8 01       	movw	r26, r16
    2dfc:	54 96       	adiw	r26, 0x14	; 20
    2dfe:	8c 91       	ld	r24, X
    2e00:	d8 0f       	add	r29, r24
    2e02:	60 e4       	ldi	r22, 0x40	; 64
    2e04:	c8 01       	movw	r24, r16
    2e06:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <u8x8_cad_SendCmd>
    2e0a:	6d 2f       	mov	r22, r29
    2e0c:	62 95       	swap	r22
    2e0e:	6f 70       	andi	r22, 0x0F	; 15
    2e10:	60 61       	ori	r22, 0x10	; 16
    2e12:	c8 01       	movw	r24, r16
    2e14:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <u8x8_cad_SendCmd>
    2e18:	6d 2f       	mov	r22, r29
    2e1a:	6f 70       	andi	r22, 0x0F	; 15
    2e1c:	c8 01       	movw	r24, r16
    2e1e:	0e 94 21 15 	call	0x2a42	; 0x2a42 <u8x8_cad_SendArg>
    2e22:	f7 01       	movw	r30, r14
    2e24:	64 81       	ldd	r22, Z+4	; 0x04
    2e26:	60 6b       	ori	r22, 0xB0	; 176
    2e28:	c8 01       	movw	r24, r16
    2e2a:	0e 94 21 15 	call	0x2a42	; 0x2a42 <u8x8_cad_SendArg>
    2e2e:	d7 01       	movw	r26, r14
    2e30:	4d 91       	ld	r20, X+
    2e32:	5c 91       	ld	r21, X
    2e34:	11 97       	sbiw	r26, 0x01	; 1
    2e36:	12 96       	adiw	r26, 0x02	; 2
    2e38:	6c 91       	ld	r22, X
    2e3a:	66 0f       	add	r22, r22
    2e3c:	66 0f       	add	r22, r22
    2e3e:	66 0f       	add	r22, r22
    2e40:	c8 01       	movw	r24, r16
    2e42:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <u8x8_cad_SendData>
    2e46:	c1 50       	subi	r28, 0x01	; 1
    2e48:	91 f7       	brne	.-28     	; 0x2e2e <u8x8_d_ssd1306_sh1106_generic+0xdc>
    2e4a:	c8 01       	movw	r24, r16
    2e4c:	0e 94 41 15 	call	0x2a82	; 0x2a82 <u8x8_cad_EndTransfer>
    2e50:	81 e0       	ldi	r24, 0x01	; 1
    2e52:	01 c0       	rjmp	.+2      	; 0x2e56 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2e54:	80 e0       	ldi	r24, 0x00	; 0
    2e56:	df 91       	pop	r29
    2e58:	cf 91       	pop	r28
    2e5a:	1f 91       	pop	r17
    2e5c:	0f 91       	pop	r16
    2e5e:	ff 90       	pop	r15
    2e60:	ef 90       	pop	r14
    2e62:	08 95       	ret

00002e64 <u8x8_d_sh1106_128x64_noname>:
  /* pixel_width = */ 128,
  /* pixel_height = */ 64
};

uint8_t u8x8_d_sh1106_128x64_noname(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    2e64:	0f 93       	push	r16
    2e66:	1f 93       	push	r17
    2e68:	cf 93       	push	r28
    2e6a:	8c 01       	movw	r16, r24
    2e6c:	c6 2f       	mov	r28, r22
  if ( u8x8_d_ssd1306_sh1106_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
    2e6e:	0e 94 a9 16 	call	0x2d52	; 0x2d52 <u8x8_d_ssd1306_sh1106_generic>
    2e72:	81 11       	cpse	r24, r1
    2e74:	15 c0       	rjmp	.+42     	; 0x2ea0 <u8x8_d_sh1106_128x64_noname+0x3c>
    return 1;
  
  switch(msg)
    2e76:	c9 30       	cpi	r28, 0x09	; 9
    2e78:	61 f0       	breq	.+24     	; 0x2e92 <u8x8_d_sh1106_128x64_noname+0x2e>
    2e7a:	ca 30       	cpi	r28, 0x0A	; 10
    2e7c:	91 f4       	brne	.+36     	; 0x2ea2 <u8x8_d_sh1106_128x64_noname+0x3e>
  {
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
    2e7e:	c8 01       	movw	r24, r16
    2e80:	0e 94 21 16 	call	0x2c42	; 0x2c42 <u8x8_d_helper_display_init>
      /* maybe use a better init sequence */
      /* https://www.mikrocontroller.net/topic/431371 */
      /* the new sequence is added in the winstar constructor (see below), this is kept untouched */
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
    2e84:	6e e5       	ldi	r22, 0x5E	; 94
    2e86:	71 e0       	ldi	r23, 0x01	; 1
    2e88:	c8 01       	movw	r24, r16
    2e8a:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <u8x8_cad_SendSequence>
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_sh1106_128x64_noname_display_info);
      break;
    default:
      return 0;
  }
  return 1;
    2e8e:	81 e0       	ldi	r24, 0x01	; 1
      u8x8_d_helper_display_init(u8x8);
      /* maybe use a better init sequence */
      /* https://www.mikrocontroller.net/topic/431371 */
      /* the new sequence is added in the winstar constructor (see below), this is kept untouched */
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
      break;
    2e90:	08 c0       	rjmp	.+16     	; 0x2ea2 <u8x8_d_sh1106_128x64_noname+0x3e>
    case U8X8_MSG_DISPLAY_SETUP_MEMORY:
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_sh1106_128x64_noname_display_info);
    2e92:	6e e2       	ldi	r22, 0x2E	; 46
    2e94:	71 e0       	ldi	r23, 0x01	; 1
    2e96:	c8 01       	movw	r24, r16
    2e98:	0e 94 19 16 	call	0x2c32	; 0x2c32 <u8x8_d_helper_display_setup_memory>
      break;
    default:
      return 0;
  }
  return 1;
    2e9c:	81 e0       	ldi	r24, 0x01	; 1
      /* the new sequence is added in the winstar constructor (see below), this is kept untouched */
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
      break;
    case U8X8_MSG_DISPLAY_SETUP_MEMORY:
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_sh1106_128x64_noname_display_info);
      break;
    2e9e:	01 c0       	rjmp	.+2      	; 0x2ea2 <u8x8_d_sh1106_128x64_noname+0x3e>
};

uint8_t u8x8_d_sh1106_128x64_noname(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  if ( u8x8_d_ssd1306_sh1106_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
    return 1;
    2ea0:	81 e0       	ldi	r24, 0x01	; 1
    default:
      return 0;
  }
  return 1;
    
}
    2ea2:	cf 91       	pop	r28
    2ea4:	1f 91       	pop	r17
    2ea6:	0f 91       	pop	r16
    2ea8:	08 95       	ret

00002eaa <u8x8_gpio_call>:
#include "u8x8.h"


void u8x8_gpio_call(u8x8_t *u8x8, uint8_t msg, uint8_t arg)
{
  u8x8->gpio_and_delay_cb(u8x8, msg, arg, NULL);
    2eaa:	dc 01       	movw	r26, r24
    2eac:	1a 96       	adiw	r26, 0x0a	; 10
    2eae:	ed 91       	ld	r30, X+
    2eb0:	fc 91       	ld	r31, X
    2eb2:	1b 97       	sbiw	r26, 0x0b	; 11
    2eb4:	20 e0       	ldi	r18, 0x00	; 0
    2eb6:	30 e0       	ldi	r19, 0x00	; 0
    2eb8:	09 95       	icall
    2eba:	08 95       	ret

00002ebc <u8x8_dummy_cb>:
      u8x8_d_helper_display_init(u8x8);
      break;
  }
  /* the null device callback will succeed for all messages */
  return 1;
}
    2ebc:	80 e0       	ldi	r24, 0x00	; 0
    2ebe:	08 95       	ret

00002ec0 <u8x8_SetupDefaults>:
    Setup u8x8
  Args:
    u8x8	An empty u8x8 structure
*/
void u8x8_SetupDefaults(u8x8_t *u8x8)
{
    2ec0:	fc 01       	movw	r30, r24
    u8x8->display_info = NULL;
    2ec2:	11 82       	std	Z+1, r1	; 0x01
    2ec4:	10 82       	st	Z, r1
    u8x8->display_cb = u8x8_dummy_cb;
    2ec6:	8e e5       	ldi	r24, 0x5E	; 94
    2ec8:	97 e1       	ldi	r25, 0x17	; 23
    2eca:	95 83       	std	Z+5, r25	; 0x05
    2ecc:	84 83       	std	Z+4, r24	; 0x04
    u8x8->cad_cb = u8x8_dummy_cb;
    2ece:	97 83       	std	Z+7, r25	; 0x07
    2ed0:	86 83       	std	Z+6, r24	; 0x06
    u8x8->byte_cb = u8x8_dummy_cb;
    2ed2:	91 87       	std	Z+9, r25	; 0x09
    2ed4:	80 87       	std	Z+8, r24	; 0x08
    u8x8->gpio_and_delay_cb = u8x8_dummy_cb;
    2ed6:	93 87       	std	Z+11, r25	; 0x0b
    2ed8:	82 87       	std	Z+10, r24	; 0x0a
    u8x8->is_font_inverse_mode = 0;
    2eda:	15 8a       	std	Z+21, r1	; 0x15
    //u8x8->device_address = 0;
    u8x8->utf8_state = 0;		/* also reset by u8x8_utf8_init */
    2edc:	10 8e       	std	Z+24, r1	; 0x18
    u8x8->bus_clock = 0;		/* issue 769 */
    2ede:	14 86       	std	Z+12, r1	; 0x0c
    2ee0:	15 86       	std	Z+13, r1	; 0x0d
    2ee2:	16 86       	std	Z+14, r1	; 0x0e
    2ee4:	17 86       	std	Z+15, r1	; 0x0f
    u8x8->i2c_address = 255;
    2ee6:	8f ef       	ldi	r24, 0xFF	; 255
    2ee8:	86 8b       	std	Z+22, r24	; 0x16
    u8x8->debounce_default_pin_state = 255;	/* assume all low active buttons */
    2eea:	82 8f       	std	Z+26, r24	; 0x1a
    2eec:	08 95       	ret

00002eee <u8x8_Setup>:
    byte_cb			Display controller/communication specific callback funtion
    gpio_and_delay_cb	Environment specific callback function

*/
void u8x8_Setup(u8x8_t *u8x8, u8x8_msg_cb display_cb, u8x8_msg_cb cad_cb, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    2eee:	af 92       	push	r10
    2ef0:	bf 92       	push	r11
    2ef2:	cf 92       	push	r12
    2ef4:	df 92       	push	r13
    2ef6:	ef 92       	push	r14
    2ef8:	ff 92       	push	r15
    2efa:	0f 93       	push	r16
    2efc:	1f 93       	push	r17
    2efe:	cf 93       	push	r28
    2f00:	df 93       	push	r29
    2f02:	ec 01       	movw	r28, r24
    2f04:	5b 01       	movw	r10, r22
    2f06:	6a 01       	movw	r12, r20
    2f08:	79 01       	movw	r14, r18
  /* setup defaults and reset pins to U8X8_PIN_NONE */
  u8x8_SetupDefaults(u8x8);
    2f0a:	0e 94 60 17 	call	0x2ec0	; 0x2ec0 <u8x8_SetupDefaults>

  /* setup specific callbacks */
  u8x8->display_cb = display_cb;
    2f0e:	bd 82       	std	Y+5, r11	; 0x05
    2f10:	ac 82       	std	Y+4, r10	; 0x04
  u8x8->cad_cb = cad_cb;
    2f12:	df 82       	std	Y+7, r13	; 0x07
    2f14:	ce 82       	std	Y+6, r12	; 0x06
  u8x8->byte_cb = byte_cb;
    2f16:	f9 86       	std	Y+9, r15	; 0x09
    2f18:	e8 86       	std	Y+8, r14	; 0x08
  u8x8->gpio_and_delay_cb = gpio_and_delay_cb;
    2f1a:	1b 87       	std	Y+11, r17	; 0x0b
    2f1c:	0a 87       	std	Y+10, r16	; 0x0a

  /* setup display info */
  u8x8_SetupMemory(u8x8);
    2f1e:	ce 01       	movw	r24, r28
    2f20:	0e 94 7d 16 	call	0x2cfa	; 0x2cfa <u8x8_SetupMemory>
}
    2f24:	df 91       	pop	r29
    2f26:	cf 91       	pop	r28
    2f28:	1f 91       	pop	r17
    2f2a:	0f 91       	pop	r16
    2f2c:	ff 90       	pop	r15
    2f2e:	ef 90       	pop	r14
    2f30:	df 90       	pop	r13
    2f32:	cf 90       	pop	r12
    2f34:	bf 90       	pop	r11
    2f36:	af 90       	pop	r10
    2f38:	08 95       	ret

00002f3a <i2c_init>:
    status = TW_STATUS & 0xF8;
    if ( (status != TW_MT_SLA_ACK) && (status != TW_MR_SLA_ACK) ) return 1;

    return 0;

}/* i2c_rep_start */
    2f3a:	11 b8       	out	0x01, r1	; 1
    2f3c:	61 b1       	in	r22, 0x01	; 1
    2f3e:	63 70       	andi	r22, 0x03	; 3
    2f40:	70 e0       	ldi	r23, 0x00	; 0
    2f42:	80 e0       	ldi	r24, 0x00	; 0
    2f44:	90 e0       	ldi	r25, 0x00	; 0
    2f46:	0e 94 48 1b 	call	0x3690	; 0x3690 <__floatsisf>
    2f4a:	9b 01       	movw	r18, r22
    2f4c:	ac 01       	movw	r20, r24
    2f4e:	60 e0       	ldi	r22, 0x00	; 0
    2f50:	70 e0       	ldi	r23, 0x00	; 0
    2f52:	80 e8       	ldi	r24, 0x80	; 128
    2f54:	90 e4       	ldi	r25, 0x40	; 64
    2f56:	0e 94 d4 1b 	call	0x37a8	; 0x37a8 <pow>
    2f5a:	9b 01       	movw	r18, r22
    2f5c:	ac 01       	movw	r20, r24
    2f5e:	0e 94 39 1a 	call	0x3472	; 0x3472 <__addsf3>
    2f62:	9b 01       	movw	r18, r22
    2f64:	ac 01       	movw	r20, r24
    2f66:	60 e0       	ldi	r22, 0x00	; 0
    2f68:	70 e0       	ldi	r23, 0x00	; 0
    2f6a:	80 e8       	ldi	r24, 0x80	; 128
    2f6c:	9f e4       	ldi	r25, 0x4F	; 79
    2f6e:	0e 94 a5 1a 	call	0x354a	; 0x354a <__divsf3>
    2f72:	0e 94 17 1b 	call	0x362e	; 0x362e <__fixunssfsi>
    2f76:	60 b9       	out	0x00, r22	; 0
    2f78:	08 95       	ret

00002f7a <i2c_start_wait>:
    2f7a:	24 ea       	ldi	r18, 0xA4	; 164
    2f7c:	34 e8       	ldi	r19, 0x84	; 132
    2f7e:	44 e9       	ldi	r20, 0x94	; 148
    2f80:	26 bf       	out	0x36, r18	; 54
    2f82:	06 b6       	in	r0, 0x36	; 54
    2f84:	07 fe       	sbrs	r0, 7
    2f86:	fd cf       	rjmp	.-6      	; 0x2f82 <i2c_start_wait+0x8>
    2f88:	91 b1       	in	r25, 0x01	; 1
    2f8a:	98 7f       	andi	r25, 0xF8	; 248
    2f8c:	98 30       	cpi	r25, 0x08	; 8
    2f8e:	11 f0       	breq	.+4      	; 0x2f94 <i2c_start_wait+0x1a>
    2f90:	90 31       	cpi	r25, 0x10	; 16
    2f92:	b1 f7       	brne	.-20     	; 0x2f80 <i2c_start_wait+0x6>
    2f94:	83 b9       	out	0x03, r24	; 3
    2f96:	36 bf       	out	0x36, r19	; 54
    2f98:	06 b6       	in	r0, 0x36	; 54
    2f9a:	07 fe       	sbrs	r0, 7
    2f9c:	fd cf       	rjmp	.-6      	; 0x2f98 <i2c_start_wait+0x1e>
    2f9e:	91 b1       	in	r25, 0x01	; 1
    2fa0:	98 7f       	andi	r25, 0xF8	; 248
    2fa2:	90 32       	cpi	r25, 0x20	; 32
    2fa4:	11 f0       	breq	.+4      	; 0x2faa <i2c_start_wait+0x30>
    2fa6:	98 35       	cpi	r25, 0x58	; 88
    2fa8:	29 f4       	brne	.+10     	; 0x2fb4 <i2c_start_wait+0x3a>
    2faa:	46 bf       	out	0x36, r20	; 54
    2fac:	06 b6       	in	r0, 0x36	; 54
    2fae:	04 fc       	sbrc	r0, 4
    2fb0:	fd cf       	rjmp	.-6      	; 0x2fac <i2c_start_wait+0x32>
    2fb2:	e6 cf       	rjmp	.-52     	; 0x2f80 <i2c_start_wait+0x6>
    2fb4:	08 95       	ret

00002fb6 <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    2fb6:	84 e9       	ldi	r24, 0x94	; 148
    2fb8:	86 bf       	out	0x36, r24	; 54
	
	// wait until stop condition is executed and bus released
	while((TWCR & (1<<TWSTO)));
    2fba:	06 b6       	in	r0, 0x36	; 54
    2fbc:	04 fc       	sbrc	r0, 4
    2fbe:	fd cf       	rjmp	.-6      	; 0x2fba <i2c_stop+0x4>
}/* i2c_stop */
    2fc0:	08 95       	ret

00002fc2 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    2fc2:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWINT) | (1<<TWEN);
    2fc4:	84 e8       	ldi	r24, 0x84	; 132
    2fc6:	86 bf       	out	0x36, r24	; 54

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
    2fc8:	06 b6       	in	r0, 0x36	; 54
    2fca:	07 fe       	sbrs	r0, 7
    2fcc:	fd cf       	rjmp	.-6      	; 0x2fc8 <i2c_write+0x6>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    2fce:	91 b1       	in	r25, 0x01	; 1
    2fd0:	98 7f       	andi	r25, 0xF8	; 248
    2fd2:	81 e0       	ldi	r24, 0x01	; 1
    2fd4:	98 32       	cpi	r25, 0x28	; 40
    2fd6:	09 f4       	brne	.+2      	; 0x2fda <i2c_write+0x18>
    2fd8:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    2fda:	08 95       	ret

00002fdc <u8x8_byte_avr_hw_i2c>:
}
#endif

#ifdef AVR_USE_HW_I2C
uint8_t u8x8_byte_avr_hw_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    2fdc:	0f 93       	push	r16
    2fde:	1f 93       	push	r17
    2fe0:	cf 93       	push	r28
    2fe2:	df 93       	push	r29
	uint8_t *data;
	switch(msg){
    2fe4:	68 31       	cpi	r22, 0x18	; 24
    2fe6:	19 f1       	breq	.+70     	; 0x302e <u8x8_byte_avr_hw_i2c+0x52>
    2fe8:	28 f4       	brcc	.+10     	; 0x2ff4 <u8x8_byte_avr_hw_i2c+0x18>
    2fea:	64 31       	cpi	r22, 0x14	; 20
    2fec:	e1 f0       	breq	.+56     	; 0x3026 <u8x8_byte_avr_hw_i2c+0x4a>
    2fee:	67 31       	cpi	r22, 0x17	; 23
    2ff0:	39 f0       	breq	.+14     	; 0x3000 <u8x8_byte_avr_hw_i2c+0x24>
    2ff2:	27 c0       	rjmp	.+78     	; 0x3042 <u8x8_byte_avr_hw_i2c+0x66>
    2ff4:	69 31       	cpi	r22, 0x19	; 25
    2ff6:	09 f1       	breq	.+66     	; 0x303a <u8x8_byte_avr_hw_i2c+0x5e>
    2ff8:	60 32       	cpi	r22, 0x20	; 32
    2ffa:	19 f5       	brne	.+70     	; 0x3042 <u8x8_byte_avr_hw_i2c+0x66>
			i2c_stop();
			break;
		default:
			return 0;
	}
	return 1;
    2ffc:	81 e0       	ldi	r24, 0x01	; 1
    2ffe:	24 c0       	rjmp	.+72     	; 0x3048 <u8x8_byte_avr_hw_i2c+0x6c>
{
	uint8_t *data;
	switch(msg){
		case U8X8_MSG_BYTE_SEND:
			data = (uint8_t *)arg_ptr;
			while( arg_int-- )
    3000:	8f ef       	ldi	r24, 0xFF	; 255
    3002:	84 0f       	add	r24, r20
    3004:	44 23       	and	r20, r20
    3006:	f9 f0       	breq	.+62     	; 0x3046 <u8x8_byte_avr_hw_i2c+0x6a>
    3008:	e9 01       	movw	r28, r18
    300a:	08 2f       	mov	r16, r24
    300c:	10 e0       	ldi	r17, 0x00	; 0
    300e:	0f 5f       	subi	r16, 0xFF	; 255
    3010:	1f 4f       	sbci	r17, 0xFF	; 255
    3012:	02 0f       	add	r16, r18
    3014:	13 1f       	adc	r17, r19
				i2c_write(*data++);
    3016:	89 91       	ld	r24, Y+
    3018:	0e 94 e1 17 	call	0x2fc2	; 0x2fc2 <i2c_write>
{
	uint8_t *data;
	switch(msg){
		case U8X8_MSG_BYTE_SEND:
			data = (uint8_t *)arg_ptr;
			while( arg_int-- )
    301c:	0c 17       	cp	r16, r28
    301e:	1d 07       	cpc	r17, r29
    3020:	d1 f7       	brne	.-12     	; 0x3016 <u8x8_byte_avr_hw_i2c+0x3a>
			i2c_stop();
			break;
		default:
			return 0;
	}
	return 1;
    3022:	81 e0       	ldi	r24, 0x01	; 1
    3024:	11 c0       	rjmp	.+34     	; 0x3048 <u8x8_byte_avr_hw_i2c+0x6c>
			data = (uint8_t *)arg_ptr;
			while( arg_int-- )
				i2c_write(*data++);
			break;
		case U8X8_MSG_BYTE_INIT:
			i2c_init();
    3026:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <i2c_init>
			i2c_stop();
			break;
		default:
			return 0;
	}
	return 1;
    302a:	81 e0       	ldi	r24, 0x01	; 1
			while( arg_int-- )
				i2c_write(*data++);
			break;
		case U8X8_MSG_BYTE_INIT:
			i2c_init();
			break;
    302c:	0d c0       	rjmp	.+26     	; 0x3048 <u8x8_byte_avr_hw_i2c+0x6c>
		case U8X8_MSG_BYTE_SET_DC:
			/* ignored for i2c */
			break;
		case U8X8_MSG_BYTE_START_TRANSFER:
			i2c_start_wait(u8x8_GetI2CAddress(u8x8)+I2C_WRITE);
    302e:	fc 01       	movw	r30, r24
    3030:	86 89       	ldd	r24, Z+22	; 0x16
    3032:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <i2c_start_wait>
			i2c_stop();
			break;
		default:
			return 0;
	}
	return 1;
    3036:	81 e0       	ldi	r24, 0x01	; 1
		case U8X8_MSG_BYTE_SET_DC:
			/* ignored for i2c */
			break;
		case U8X8_MSG_BYTE_START_TRANSFER:
			i2c_start_wait(u8x8_GetI2CAddress(u8x8)+I2C_WRITE);
			break;
    3038:	07 c0       	rjmp	.+14     	; 0x3048 <u8x8_byte_avr_hw_i2c+0x6c>
		case U8X8_MSG_BYTE_END_TRANSFER:
			i2c_stop();
    303a:	0e 94 db 17 	call	0x2fb6	; 0x2fb6 <i2c_stop>
			break;
		default:
			return 0;
	}
	return 1;
    303e:	81 e0       	ldi	r24, 0x01	; 1
		case U8X8_MSG_BYTE_START_TRANSFER:
			i2c_start_wait(u8x8_GetI2CAddress(u8x8)+I2C_WRITE);
			break;
		case U8X8_MSG_BYTE_END_TRANSFER:
			i2c_stop();
			break;
    3040:	03 c0       	rjmp	.+6      	; 0x3048 <u8x8_byte_avr_hw_i2c+0x6c>
		default:
			return 0;
    3042:	80 e0       	ldi	r24, 0x00	; 0
    3044:	01 c0       	rjmp	.+2      	; 0x3048 <u8x8_byte_avr_hw_i2c+0x6c>
	}
	return 1;
    3046:	81 e0       	ldi	r24, 0x01	; 1
}
    3048:	df 91       	pop	r29
    304a:	cf 91       	pop	r28
    304c:	1f 91       	pop	r17
    304e:	0f 91       	pop	r16
    3050:	08 95       	ret

00003052 <u8x8_avr_delay>:
		default:
			return 0;
	}

	return 0;
}
    3052:	80 e0       	ldi	r24, 0x00	; 0
    3054:	08 95       	ret

00003056 <OLED_init>:
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void OLED_init(){
	u8g2_Setup_sh1106_i2c_128x64_noname_f(&u8g2, U8G2_R0, u8x8_byte_avr_hw_i2c, u8x8_avr_delay);
    3056:	29 e2       	ldi	r18, 0x29	; 41
    3058:	38 e1       	ldi	r19, 0x18	; 24
    305a:	4e ee       	ldi	r20, 0xEE	; 238
    305c:	57 e1       	ldi	r21, 0x17	; 23
    305e:	68 e2       	ldi	r22, 0x28	; 40
    3060:	71 e0       	ldi	r23, 0x01	; 1
    3062:	8a eb       	ldi	r24, 0xBA	; 186
    3064:	95 e0       	ldi	r25, 0x05	; 5
    3066:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <u8g2_Setup_sh1106_i2c_128x64_noname_f>
	u8g2_SetI2CAddress(&u8g2, SSD1306_ADDR);
    306a:	88 e7       	ldi	r24, 0x78	; 120
    306c:	80 93 d0 05 	sts	0x05D0, r24	; 0x8005d0 <u8g2+0x16>
	u8g2_InitDisplay(&u8g2);
    3070:	8a eb       	ldi	r24, 0xBA	; 186
    3072:	95 e0       	ldi	r25, 0x05	; 5
    3074:	0e 94 88 16 	call	0x2d10	; 0x2d10 <u8x8_InitDisplay>
	u8g2_SetPowerSave(&u8g2, 0);
    3078:	60 e0       	ldi	r22, 0x00	; 0
    307a:	8a eb       	ldi	r24, 0xBA	; 186
    307c:	95 e0       	ldi	r25, 0x05	; 5
    307e:	0e 94 93 16 	call	0x2d26	; 0x2d26 <u8x8_SetPowerSave>
    3082:	08 95       	ret

00003084 <ADC_init>:
}

void ADC_init(){
	ADMUX = 0x00;
    3084:	17 b8       	out	0x07, r1	; 7
	ADMUX = (1 << REFS0) | (1 << ADLAR);
    3086:	80 e6       	ldi	r24, 0x60	; 96
    3088:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0x00;
    308a:	16 b8       	out	0x06, r1	; 6
	ADCSRA = (1 << ADEN) | (1 << ADPS2);
    308c:	84 e8       	ldi	r24, 0x84	; 132
    308e:	86 b9       	out	0x06, r24	; 6
    3090:	08 95       	ret

00003092 <ADC_read>:
}

unsigned char ADC_read() {
	ADCSRA |= (1 << ADSC);
    3092:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1 << ADSC));
    3094:	36 99       	sbic	0x06, 6	; 6
    3096:	fe cf       	rjmp	.-4      	; 0x3094 <ADC_read+0x2>
	return ADCH;
    3098:	85 b1       	in	r24, 0x05	; 5
}
    309a:	08 95       	ret

0000309c <initialize>:

void initialize(){
	DDRA &= ~(1 << PA1); // Pin 1 of Port A as input
    309c:	d1 98       	cbi	0x1a, 1	; 26
	DDRA &= ~(1 << PA2); // Pin 2 of Port A as input
    309e:	d2 98       	cbi	0x1a, 2	; 26
	DDRB = 0x00;
    30a0:	17 ba       	out	0x17, r1	; 23
	DDRD = 0x00;
    30a2:	11 ba       	out	0x11, r1	; 17
	ADC_init();
    30a4:	0e 94 42 18 	call	0x3084	; 0x3084 <ADC_init>
	OLED_init();
    30a8:	0e 94 2b 18 	call	0x3056	; 0x3056 <OLED_init>
    30ac:	08 95       	ret

000030ae <valToStr>:
}

void valToStr(char *result, int x){
    30ae:	ef 92       	push	r14
    30b0:	ff 92       	push	r15
    30b2:	0f 93       	push	r16
    30b4:	1f 93       	push	r17
    30b6:	cf 93       	push	r28
    30b8:	df 93       	push	r29
    30ba:	9c 01       	movw	r18, r24
    30bc:	cb 01       	movw	r24, r22
	if(x <= 0 || x > 100){
    30be:	ab 01       	movw	r20, r22
    30c0:	41 50       	subi	r20, 0x01	; 1
    30c2:	51 09       	sbc	r21, r1
    30c4:	44 36       	cpi	r20, 0x64	; 100
    30c6:	51 05       	cpc	r21, r1
    30c8:	20 f4       	brcc	.+8      	; 0x30d2 <valToStr+0x24>
		result[0] = '0';
		result[1] = '\0';
		return;
	}
	int k,i=0,j;
	while(x>0){
    30ca:	18 16       	cp	r1, r24
    30cc:	19 06       	cpc	r1, r25
    30ce:	3c f0       	brlt	.+14     	; 0x30de <valToStr+0x30>
    30d0:	3c c0       	rjmp	.+120    	; 0x314a <valToStr+0x9c>
	OLED_init();
}

void valToStr(char *result, int x){
	if(x <= 0 || x > 100){
		result[0] = '0';
    30d2:	80 e3       	ldi	r24, 0x30	; 48
    30d4:	d9 01       	movw	r26, r18
    30d6:	8c 93       	st	X, r24
		result[1] = '\0';
    30d8:	11 96       	adiw	r26, 0x01	; 1
    30da:	1c 92       	st	X, r1
		return;
    30dc:	38 c0       	rjmp	.+112    	; 0x314e <valToStr+0xa0>
    30de:	e9 01       	movw	r28, r18
	}
	int k,i=0,j;
	while(x>0){
    30e0:	89 01       	movw	r16, r18
    30e2:	e0 e0       	ldi	r30, 0x00	; 0
    30e4:	f0 e0       	ldi	r31, 0x00	; 0
		k = x%10;
		result[i] = k+'0';
    30e6:	0f 2e       	mov	r0, r31
    30e8:	fa e0       	ldi	r31, 0x0A	; 10
    30ea:	ef 2e       	mov	r14, r31
    30ec:	f1 2c       	mov	r15, r1
    30ee:	f0 2d       	mov	r31, r0
    30f0:	01 c0       	rjmp	.+2      	; 0x30f4 <valToStr+0x46>
		x/=10;
		i++;
    30f2:	fa 01       	movw	r30, r20
		return;
	}
	int k,i=0,j;
	while(x>0){
		k = x%10;
		result[i] = k+'0';
    30f4:	b7 01       	movw	r22, r14
    30f6:	0e 94 da 1d 	call	0x3bb4	; 0x3bb4 <__divmodhi4>
    30fa:	80 5d       	subi	r24, 0xD0	; 208
    30fc:	d8 01       	movw	r26, r16
    30fe:	8d 93       	st	X+, r24
    3100:	8d 01       	movw	r16, r26
		x/=10;
    3102:	86 2f       	mov	r24, r22
    3104:	97 2f       	mov	r25, r23
		i++;
    3106:	af 01       	movw	r20, r30
    3108:	4f 5f       	subi	r20, 0xFF	; 255
    310a:	5f 4f       	sbci	r21, 0xFF	; 255
		result[0] = '0';
		result[1] = '\0';
		return;
	}
	int k,i=0,j;
	while(x>0){
    310c:	18 16       	cp	r1, r24
    310e:	19 06       	cpc	r1, r25
    3110:	84 f3       	brlt	.-32     	; 0x30f2 <valToStr+0x44>
		result[i] = k+'0';
		x/=10;
		i++;
	}
	char temp;
	result[i] = '\0';
    3112:	d9 01       	movw	r26, r18
    3114:	a4 0f       	add	r26, r20
    3116:	b5 1f       	adc	r27, r21
    3118:	1c 92       	st	X, r1
	for(j=0;j<i/2;j++){
    311a:	ca 01       	movw	r24, r20
    311c:	99 23       	and	r25, r25
    311e:	0c f4       	brge	.+2      	; 0x3122 <valToStr+0x74>
    3120:	01 96       	adiw	r24, 0x01	; 1
    3122:	ac 01       	movw	r20, r24
    3124:	55 95       	asr	r21
    3126:	47 95       	ror	r20
    3128:	14 16       	cp	r1, r20
    312a:	15 06       	cpc	r1, r21
    312c:	84 f4       	brge	.+32     	; 0x314e <valToStr+0xa0>
    312e:	31 96       	adiw	r30, 0x01	; 1
    3130:	e2 0f       	add	r30, r18
    3132:	f3 1f       	adc	r31, r19
    3134:	42 0f       	add	r20, r18
    3136:	53 1f       	adc	r21, r19
    3138:	d9 01       	movw	r26, r18
		temp = result[j];
    313a:	89 91       	ld	r24, Y+
		result[j]= result[i-1-j];
    313c:	92 91       	ld	r25, -Z
    313e:	9d 93       	st	X+, r25
		result[i-1-j] = temp;
    3140:	80 83       	st	Z, r24
		x/=10;
		i++;
	}
	char temp;
	result[i] = '\0';
	for(j=0;j<i/2;j++){
    3142:	c4 17       	cp	r28, r20
    3144:	d5 07       	cpc	r29, r21
    3146:	c9 f7       	brne	.-14     	; 0x313a <valToStr+0x8c>
    3148:	02 c0       	rjmp	.+4      	; 0x314e <valToStr+0xa0>
		result[i] = k+'0';
		x/=10;
		i++;
	}
	char temp;
	result[i] = '\0';
    314a:	f9 01       	movw	r30, r18
    314c:	10 82       	st	Z, r1
	for(j=0;j<i/2;j++){
		temp = result[j];
		result[j]= result[i-1-j];
		result[i-1-j] = temp;
	}
}
    314e:	df 91       	pop	r29
    3150:	cf 91       	pop	r28
    3152:	1f 91       	pop	r17
    3154:	0f 91       	pop	r16
    3156:	ff 90       	pop	r15
    3158:	ef 90       	pop	r14
    315a:	08 95       	ret

0000315c <main>:

int main (void)
{
    315c:	cf 93       	push	r28
    315e:	df 93       	push	r29
    3160:	cd b7       	in	r28, 0x3d	; 61
    3162:	de b7       	in	r29, 0x3e	; 62
    3164:	c2 5e       	subi	r28, 0xE2	; 226
    3166:	d1 09       	sbc	r29, r1
    3168:	0f b6       	in	r0, 0x3f	; 63
    316a:	f8 94       	cli
    316c:	de bf       	out	0x3e, r29	; 62
    316e:	0f be       	out	0x3f, r0	; 63
    3170:	cd bf       	out	0x3d, r28	; 61
	initialize();
    3172:	0e 94 4e 18 	call	0x309c	; 0x309c <initialize>
	
	unsigned char mode = 0, show_QR = 0;
	unsigned char fromB, fromD;
	
	fromD = PIND;
    3176:	80 b3       	in	r24, 0x10	; 16
	mode = fromD & 0x80;
    3178:	80 78       	andi	r24, 0x80	; 128
    317a:	58 2e       	mov	r5, r24
				if(!spo2 || !hr){
					u8g2_ClearBuffer(&u8g2);
					u8g2_DrawXBMP(&u8g2, 0, 0, 128, 64, OXYMETER_PROMPT);
					u8g2_SendBuffer(&u8g2);
				} else {
					char fohr[100]="HR: ";
    317c:	0f 2e       	mov	r0, r31
    317e:	f5 e6       	ldi	r31, 0x65	; 101
    3180:	2f 2e       	mov	r2, r31
    3182:	31 2c       	mov	r3, r1
    3184:	f0 2d       	mov	r31, r0
    3186:	2c 0e       	add	r2, r28
    3188:	3d 1e       	adc	r3, r29
    318a:	85 e0       	ldi	r24, 0x05	; 5
    318c:	28 0e       	add	r2, r24
    318e:	31 1c       	adc	r3, r1
					char ohr[10];
					valToStr(ohr,hr);
    3190:	5e 01       	movw	r10, r28
    3192:	93 ed       	ldi	r25, 0xD3	; 211
    3194:	a9 0e       	add	r10, r25
    3196:	b1 1c       	adc	r11, r1
					strcat(ohr," bpm");
					strcat(fohr,ohr);
					u8g2_DrawStr(&u8g2, 16, 12, fohr);
					char output[10];
					char final[100] = "SPO2: ";
    3198:	fe 01       	movw	r30, r28
    319a:	38 96       	adiw	r30, 0x08	; 8
    319c:	c3 52       	subi	r28, 0x23	; 35
    319e:	df 4f       	sbci	r29, 0xFF	; 255
    31a0:	f9 83       	std	Y+1, r31	; 0x01
    31a2:	e8 83       	st	Y, r30
    31a4:	cd 5d       	subi	r28, 0xDD	; 221
    31a6:	d0 40       	sbci	r29, 0x00	; 0
					valToStr(output,spo2);
    31a8:	6e 01       	movw	r12, r28
    31aa:	f9 ec       	ldi	r31, 0xC9	; 201
    31ac:	cf 0e       	add	r12, r31
    31ae:	d1 1c       	adc	r13, r1
					strcat(output," %");
    31b0:	0f 2e       	mov	r0, r31
    31b2:	f0 e2       	ldi	r31, 0x20	; 32
    31b4:	8f 2e       	mov	r8, r31
    31b6:	f5 e2       	ldi	r31, 0x25	; 37
    31b8:	9f 2e       	mov	r9, r31
    31ba:	f0 2d       	mov	r31, r0
					u8g2_DrawXBMP(&u8g2, 0, 0, 128, 64, OXYMETER_PROMPT);
					u8g2_SendBuffer(&u8g2);
				} else {
					char fohr[100]="HR: ";
					char ohr[10];
					valToStr(ohr,hr);
    31bc:	c1 52       	subi	r28, 0x21	; 33
    31be:	df 4f       	sbci	r29, 0xFF	; 255
    31c0:	a8 82       	st	Y, r10
    31c2:	cf 5d       	subi	r28, 0xDF	; 223
    31c4:	d0 40       	sbci	r29, 0x00	; 0
    31c6:	c0 52       	subi	r28, 0x20	; 32
    31c8:	df 4f       	sbci	r29, 0xFF	; 255
    31ca:	b8 82       	st	Y, r11
    31cc:	c0 5e       	subi	r28, 0xE0	; 224
    31ce:	d0 40       	sbci	r29, 0x00	; 0
					strcat(ohr," bpm");
					strcat(fohr,ohr);
					u8g2_DrawStr(&u8g2, 16, 12, fohr);
					char output[10];
					char final[100] = "SPO2: ";
					valToStr(output,spo2);
    31d0:	cf 51       	subi	r28, 0x1F	; 31
    31d2:	df 4f       	sbci	r29, 0xFF	; 255
    31d4:	c8 82       	st	Y, r12
    31d6:	c1 5e       	subi	r28, 0xE1	; 225
    31d8:	d0 40       	sbci	r29, 0x00	; 0
    31da:	ce 51       	subi	r28, 0x1E	; 30
    31dc:	df 4f       	sbci	r29, 0xFF	; 255
    31de:	d8 82       	st	Y, r13
    31e0:	c2 5e       	subi	r28, 0xE2	; 226
    31e2:	d0 40       	sbci	r29, 0x00	; 0
    31e4:	5a c0       	rjmp	.+180    	; 0x329a <main+0x13e>
	fromD = PIND;
	mode = fromD & 0x80;
	
	while(1){
		while (!mode) {
			fromD = PIND;
    31e6:	80 b3       	in	r24, 0x10	; 16
			mode = fromD & 0x80;
    31e8:	80 78       	andi	r24, 0x80	; 128
    31ea:	58 2e       	mov	r5, r24
			
			unsigned char LO_neg = PINA & (1 << PA0);
    31ec:	89 b3       	in	r24, 0x19	; 25
			unsigned char LO_pos = PINA & (1 << PA1);
    31ee:	99 b3       	in	r25, 0x19	; 25
			
			if(LO_neg || LO_pos){
    31f0:	80 fd       	sbrc	r24, 0
    31f2:	02 c0       	rjmp	.+4      	; 0x31f8 <main+0x9c>
    31f4:	91 ff       	sbrs	r25, 1
    31f6:	1b c0       	rjmp	.+54     	; 0x322e <main+0xd2>
				u8g2_ClearBuffer(&u8g2);
    31f8:	8a eb       	ldi	r24, 0xBA	; 186
    31fa:	95 e0       	ldi	r25, 0x05	; 5
    31fc:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <u8g2_ClearBuffer>
				u8g2_DrawXBMP(&u8g2, 0, 0, 128, 64, ECG_PROMPT);
    3200:	0f 2e       	mov	r0, r31
    3202:	f1 ea       	ldi	r31, 0xA1	; 161
    3204:	ef 2e       	mov	r14, r31
    3206:	ff e0       	ldi	r31, 0x0F	; 15
    3208:	ff 2e       	mov	r15, r31
    320a:	f0 2d       	mov	r31, r0
    320c:	00 e4       	ldi	r16, 0x40	; 64
    320e:	10 e0       	ldi	r17, 0x00	; 0
    3210:	20 e8       	ldi	r18, 0x80	; 128
    3212:	30 e0       	ldi	r19, 0x00	; 0
    3214:	40 e0       	ldi	r20, 0x00	; 0
    3216:	50 e0       	ldi	r21, 0x00	; 0
    3218:	60 e0       	ldi	r22, 0x00	; 0
    321a:	70 e0       	ldi	r23, 0x00	; 0
    321c:	8a eb       	ldi	r24, 0xBA	; 186
    321e:	95 e0       	ldi	r25, 0x05	; 5
    3220:	0e 94 65 0c 	call	0x18ca	; 0x18ca <u8g2_DrawXBMP>
				u8g2_SendBuffer(&u8g2);
    3224:	8a eb       	ldi	r24, 0xBA	; 186
    3226:	95 e0       	ldi	r25, 0x05	; 5
    3228:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <u8g2_SendBuffer>
    322c:	36 c0       	rjmp	.+108    	; 0x329a <main+0x13e>
			} else {
				u8g2_ClearBuffer(&u8g2);
    322e:	8a eb       	ldi	r24, 0xBA	; 186
    3230:	95 e0       	ldi	r25, 0x05	; 5
    3232:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <u8g2_ClearBuffer>
				for (int x = 0; x < 128; x+=4) {
					unsigned char y = ADC_read() >> 2;
    3236:	0e 94 49 18 	call	0x3092	; 0x3092 <ADC_read>
    323a:	48 2e       	mov	r4, r24
    323c:	46 94       	lsr	r4
    323e:	46 94       	lsr	r4
				u8g2_ClearBuffer(&u8g2);
				u8g2_DrawXBMP(&u8g2, 0, 0, 128, 64, ECG_PROMPT);
				u8g2_SendBuffer(&u8g2);
			} else {
				u8g2_ClearBuffer(&u8g2);
				for (int x = 0; x < 128; x+=4) {
    3240:	e1 2c       	mov	r14, r1
    3242:	f1 2c       	mov	r15, r1
					unsigned char y = ADC_read() >> 2;
					if (x > 0) {
						u8g2_DrawLine(&u8g2, x - 4, 63 - last_y, x, 63 - y);
    3244:	0f 2e       	mov	r0, r31
    3246:	ff e3       	ldi	r31, 0x3F	; 63
    3248:	6f 2e       	mov	r6, r31
    324a:	71 2c       	mov	r7, r1
    324c:	f0 2d       	mov	r31, r0
    324e:	18 c0       	rjmp	.+48     	; 0x3280 <main+0x124>
				u8g2_DrawXBMP(&u8g2, 0, 0, 128, 64, ECG_PROMPT);
				u8g2_SendBuffer(&u8g2);
			} else {
				u8g2_ClearBuffer(&u8g2);
				for (int x = 0; x < 128; x+=4) {
					unsigned char y = ADC_read() >> 2;
    3250:	0e 94 49 18 	call	0x3092	; 0x3092 <ADC_read>
    3254:	48 2e       	mov	r4, r24
    3256:	46 94       	lsr	r4
    3258:	46 94       	lsr	r4
					if (x > 0) {
    325a:	1e 14       	cp	r1, r14
    325c:	1f 04       	cpc	r1, r15
    325e:	84 f4       	brge	.+32     	; 0x3280 <main+0x124>
						u8g2_DrawLine(&u8g2, x - 4, 63 - last_y, x, 63 - y);
    3260:	80 91 99 05 	lds	r24, 0x0599	; 0x800599 <last_y>
    3264:	a3 01       	movw	r20, r6
    3266:	48 1b       	sub	r20, r24
    3268:	51 09       	sbc	r21, r1
    326a:	83 01       	movw	r16, r6
    326c:	04 19       	sub	r16, r4
    326e:	11 09       	sbc	r17, r1
    3270:	97 01       	movw	r18, r14
    3272:	b7 01       	movw	r22, r14
    3274:	64 50       	subi	r22, 0x04	; 4
    3276:	71 09       	sbc	r23, r1
    3278:	8a eb       	ldi	r24, 0xBA	; 186
    327a:	95 e0       	ldi	r25, 0x05	; 5
    327c:	0e 94 84 12 	call	0x2508	; 0x2508 <u8g2_DrawLine>
					}
					last_y = y;
    3280:	40 92 99 05 	sts	0x0599, r4	; 0x800599 <last_y>
				u8g2_ClearBuffer(&u8g2);
				u8g2_DrawXBMP(&u8g2, 0, 0, 128, 64, ECG_PROMPT);
				u8g2_SendBuffer(&u8g2);
			} else {
				u8g2_ClearBuffer(&u8g2);
				for (int x = 0; x < 128; x+=4) {
    3284:	84 e0       	ldi	r24, 0x04	; 4
    3286:	e8 0e       	add	r14, r24
    3288:	f1 1c       	adc	r15, r1
    328a:	90 e8       	ldi	r25, 0x80	; 128
    328c:	e9 16       	cp	r14, r25
    328e:	f1 04       	cpc	r15, r1
    3290:	f9 f6       	brne	.-66     	; 0x3250 <main+0xf4>
					if (x > 0) {
						u8g2_DrawLine(&u8g2, x - 4, 63 - last_y, x, 63 - y);
					}
					last_y = y;
				}
				u8g2_SendBuffer(&u8g2);
    3292:	8a eb       	ldi	r24, 0xBA	; 186
    3294:	95 e0       	ldi	r25, 0x05	; 5
    3296:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <u8g2_SendBuffer>
	
	fromD = PIND;
	mode = fromD & 0x80;
	
	while(1){
		while (!mode) {
    329a:	55 20       	and	r5, r5
    329c:	09 f4       	brne	.+2      	; 0x32a0 <main+0x144>
    329e:	a3 cf       	rjmp	.-186    	; 0x31e6 <main+0x8a>
				if(!spo2 || !hr){
					u8g2_ClearBuffer(&u8g2);
					u8g2_DrawXBMP(&u8g2, 0, 0, 128, 64, OXYMETER_PROMPT);
					u8g2_SendBuffer(&u8g2);
				} else {
					char fohr[100]="HR: ";
    32a0:	0f 2e       	mov	r0, r31
    32a2:	ff e5       	ldi	r31, 0x5F	; 95
    32a4:	7f 2e       	mov	r7, r31
    32a6:	f0 2d       	mov	r31, r0
					valToStr(ohr,hr);
					strcat(ohr," bpm");
					strcat(fohr,ohr);
					u8g2_DrawStr(&u8g2, 16, 12, fohr);
					char output[10];
					char final[100] = "SPO2: ";
    32a8:	0f 2e       	mov	r0, r31
    32aa:	fd e5       	ldi	r31, 0x5D	; 93
    32ac:	6f 2e       	mov	r6, r31
    32ae:	f0 2d       	mov	r31, r0
				u8g2_SendBuffer(&u8g2);
			}
		}
		
		while(mode){
			fromB = PINB;
    32b0:	06 b3       	in	r16, 0x16	; 22
			fromD = PIND;
    32b2:	10 b3       	in	r17, 0x10	; 16
			show_QR = fromB & 0x80;
			mode = fromD & 0x80;
    32b4:	e1 2f       	mov	r30, r17
    32b6:	e0 78       	andi	r30, 0x80	; 128
    32b8:	5e 2e       	mov	r5, r30
			
			if(show_QR){
    32ba:	00 23       	and	r16, r16
    32bc:	dc f4       	brge	.+54     	; 0x32f4 <main+0x198>
				u8g2_ClearBuffer(&u8g2);
    32be:	8a eb       	ldi	r24, 0xBA	; 186
    32c0:	95 e0       	ldi	r25, 0x05	; 5
    32c2:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <u8g2_ClearBuffer>
				u8g2_DrawXBMP(&u8g2, 32, 0, 64, 64, QR_CODE);
    32c6:	0f 2e       	mov	r0, r31
    32c8:	f1 ea       	ldi	r31, 0xA1	; 161
    32ca:	ef 2e       	mov	r14, r31
    32cc:	fd e0       	ldi	r31, 0x0D	; 13
    32ce:	ff 2e       	mov	r15, r31
    32d0:	f0 2d       	mov	r31, r0
    32d2:	00 e4       	ldi	r16, 0x40	; 64
    32d4:	10 e0       	ldi	r17, 0x00	; 0
    32d6:	20 e4       	ldi	r18, 0x40	; 64
    32d8:	30 e0       	ldi	r19, 0x00	; 0
    32da:	40 e0       	ldi	r20, 0x00	; 0
    32dc:	50 e0       	ldi	r21, 0x00	; 0
    32de:	60 e2       	ldi	r22, 0x20	; 32
    32e0:	70 e0       	ldi	r23, 0x00	; 0
    32e2:	8a eb       	ldi	r24, 0xBA	; 186
    32e4:	95 e0       	ldi	r25, 0x05	; 5
    32e6:	0e 94 65 0c 	call	0x18ca	; 0x18ca <u8g2_DrawXBMP>
				u8g2_SendBuffer(&u8g2);
    32ea:	8a eb       	ldi	r24, 0xBA	; 186
    32ec:	95 e0       	ldi	r25, 0x05	; 5
    32ee:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <u8g2_SendBuffer>
    32f2:	bb c0       	rjmp	.+374    	; 0x346a <main+0x30e>
			} else {
				u8g2_ClearBuffer(&u8g2);
    32f4:	8a eb       	ldi	r24, 0xBA	; 186
    32f6:	95 e0       	ldi	r25, 0x05	; 5
    32f8:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <u8g2_ClearBuffer>
				u8g2_SetFont(&u8g2, u8g2_font_helvB12_tf);
    32fc:	66 ed       	ldi	r22, 0xD6	; 214
    32fe:	70 e0       	ldi	r23, 0x00	; 0
    3300:	8a eb       	ldi	r24, 0xBA	; 186
    3302:	95 e0       	ldi	r25, 0x05	; 5
    3304:	0e 94 6a 11 	call	0x22d4	; 0x22d4 <u8g2_SetFont>
				u8g2_SetFontPosTop(&u8g2);
    3308:	8a eb       	ldi	r24, 0xBA	; 186
    330a:	95 e0       	ldi	r25, 0x05	; 5
    330c:	0e 94 62 11 	call	0x22c4	; 0x22c4 <u8g2_SetFontPosTop>
				int spo2 = fromB & 0x7F;
    3310:	0f 77       	andi	r16, 0x7F	; 127
    3312:	e0 2e       	mov	r14, r16
    3314:	f1 2c       	mov	r15, r1
				int hr = fromD & 0x7C;
				if(!spo2 || !hr){
    3316:	e1 14       	cp	r14, r1
    3318:	f1 04       	cpc	r15, r1
    331a:	31 f0       	breq	.+12     	; 0x3328 <main+0x1cc>
			} else {
				u8g2_ClearBuffer(&u8g2);
				u8g2_SetFont(&u8g2, u8g2_font_helvB12_tf);
				u8g2_SetFontPosTop(&u8g2);
				int spo2 = fromB & 0x7F;
				int hr = fromD & 0x7C;
    331c:	1c 77       	andi	r17, 0x7C	; 124
    331e:	61 2f       	mov	r22, r17
    3320:	70 e0       	ldi	r23, 0x00	; 0
				if(!spo2 || !hr){
    3322:	61 15       	cp	r22, r1
    3324:	71 05       	cpc	r23, r1
    3326:	d9 f4       	brne	.+54     	; 0x335e <main+0x202>
					u8g2_ClearBuffer(&u8g2);
    3328:	8a eb       	ldi	r24, 0xBA	; 186
    332a:	95 e0       	ldi	r25, 0x05	; 5
    332c:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <u8g2_ClearBuffer>
					u8g2_DrawXBMP(&u8g2, 0, 0, 128, 64, OXYMETER_PROMPT);
    3330:	0f 2e       	mov	r0, r31
    3332:	f1 ea       	ldi	r31, 0xA1	; 161
    3334:	ef 2e       	mov	r14, r31
    3336:	f3 e1       	ldi	r31, 0x13	; 19
    3338:	ff 2e       	mov	r15, r31
    333a:	f0 2d       	mov	r31, r0
    333c:	00 e4       	ldi	r16, 0x40	; 64
    333e:	10 e0       	ldi	r17, 0x00	; 0
    3340:	20 e8       	ldi	r18, 0x80	; 128
    3342:	30 e0       	ldi	r19, 0x00	; 0
    3344:	40 e0       	ldi	r20, 0x00	; 0
    3346:	50 e0       	ldi	r21, 0x00	; 0
    3348:	60 e0       	ldi	r22, 0x00	; 0
    334a:	70 e0       	ldi	r23, 0x00	; 0
    334c:	8a eb       	ldi	r24, 0xBA	; 186
    334e:	95 e0       	ldi	r25, 0x05	; 5
    3350:	0e 94 65 0c 	call	0x18ca	; 0x18ca <u8g2_DrawXBMP>
					u8g2_SendBuffer(&u8g2);
    3354:	8a eb       	ldi	r24, 0xBA	; 186
    3356:	95 e0       	ldi	r25, 0x05	; 5
    3358:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <u8g2_SendBuffer>
    335c:	86 c0       	rjmp	.+268    	; 0x346a <main+0x30e>
				} else {
					char fohr[100]="HR: ";
    335e:	85 e0       	ldi	r24, 0x05	; 5
    3360:	e0 e6       	ldi	r30, 0x60	; 96
    3362:	f0 e0       	ldi	r31, 0x00	; 0
    3364:	de 01       	movw	r26, r28
    3366:	ab 59       	subi	r26, 0x9B	; 155
    3368:	bf 4f       	sbci	r27, 0xFF	; 255
    336a:	01 90       	ld	r0, Z+
    336c:	0d 92       	st	X+, r0
    336e:	8a 95       	dec	r24
    3370:	e1 f7       	brne	.-8      	; 0x336a <main+0x20e>
    3372:	f1 01       	movw	r30, r2
    3374:	87 2d       	mov	r24, r7
    3376:	11 92       	st	Z+, r1
    3378:	8a 95       	dec	r24
    337a:	e9 f7       	brne	.-6      	; 0x3376 <main+0x21a>
					char ohr[10];
					valToStr(ohr,hr);
    337c:	c1 52       	subi	r28, 0x21	; 33
    337e:	df 4f       	sbci	r29, 0xFF	; 255
    3380:	88 81       	ld	r24, Y
    3382:	cf 5d       	subi	r28, 0xDF	; 223
    3384:	d0 40       	sbci	r29, 0x00	; 0
    3386:	c0 52       	subi	r28, 0x20	; 32
    3388:	df 4f       	sbci	r29, 0xFF	; 255
    338a:	98 81       	ld	r25, Y
    338c:	c0 5e       	subi	r28, 0xE0	; 224
    338e:	d0 40       	sbci	r29, 0x00	; 0
    3390:	0e 94 57 18 	call	0x30ae	; 0x30ae <valToStr>
					strcat(ohr," bpm");
    3394:	d5 01       	movw	r26, r10
    3396:	0d 90       	ld	r0, X+
    3398:	00 20       	and	r0, r0
    339a:	e9 f7       	brne	.-6      	; 0x3396 <main+0x23a>
    339c:	11 97       	sbiw	r26, 0x01	; 1
    339e:	85 e0       	ldi	r24, 0x05	; 5
    33a0:	e3 e9       	ldi	r30, 0x93	; 147
    33a2:	f1 e0       	ldi	r31, 0x01	; 1
    33a4:	01 90       	ld	r0, Z+
    33a6:	0d 92       	st	X+, r0
    33a8:	8a 95       	dec	r24
    33aa:	e1 f7       	brne	.-8      	; 0x33a4 <main+0x248>
					strcat(fohr,ohr);
    33ac:	c1 52       	subi	r28, 0x21	; 33
    33ae:	df 4f       	sbci	r29, 0xFF	; 255
    33b0:	68 81       	ld	r22, Y
    33b2:	cf 5d       	subi	r28, 0xDF	; 223
    33b4:	d0 40       	sbci	r29, 0x00	; 0
    33b6:	c0 52       	subi	r28, 0x20	; 32
    33b8:	df 4f       	sbci	r29, 0xFF	; 255
    33ba:	78 81       	ld	r23, Y
    33bc:	c0 5e       	subi	r28, 0xE0	; 224
    33be:	d0 40       	sbci	r29, 0x00	; 0
    33c0:	ce 01       	movw	r24, r28
    33c2:	8b 59       	subi	r24, 0x9B	; 155
    33c4:	9f 4f       	sbci	r25, 0xFF	; 255
    33c6:	0e 94 f5 1d 	call	0x3bea	; 0x3bea <strcat>
					u8g2_DrawStr(&u8g2, 16, 12, fohr);
    33ca:	9e 01       	movw	r18, r28
    33cc:	2b 59       	subi	r18, 0x9B	; 155
    33ce:	3f 4f       	sbci	r19, 0xFF	; 255
    33d0:	4c e0       	ldi	r20, 0x0C	; 12
    33d2:	50 e0       	ldi	r21, 0x00	; 0
    33d4:	60 e1       	ldi	r22, 0x10	; 16
    33d6:	70 e0       	ldi	r23, 0x00	; 0
    33d8:	8a eb       	ldi	r24, 0xBA	; 186
    33da:	95 e0       	ldi	r25, 0x05	; 5
    33dc:	0e 94 0c 11 	call	0x2218	; 0x2218 <u8g2_DrawStr>
					char output[10];
					char final[100] = "SPO2: ";
    33e0:	87 e0       	ldi	r24, 0x07	; 7
    33e2:	e4 ec       	ldi	r30, 0xC4	; 196
    33e4:	f0 e0       	ldi	r31, 0x00	; 0
    33e6:	de 01       	movw	r26, r28
    33e8:	11 96       	adiw	r26, 0x01	; 1
    33ea:	01 90       	ld	r0, Z+
    33ec:	0d 92       	st	X+, r0
    33ee:	8a 95       	dec	r24
    33f0:	e1 f7       	brne	.-8      	; 0x33ea <main+0x28e>
    33f2:	c3 52       	subi	r28, 0x23	; 35
    33f4:	df 4f       	sbci	r29, 0xFF	; 255
    33f6:	e8 81       	ld	r30, Y
    33f8:	f9 81       	ldd	r31, Y+1	; 0x01
    33fa:	cd 5d       	subi	r28, 0xDD	; 221
    33fc:	d0 40       	sbci	r29, 0x00	; 0
    33fe:	86 2d       	mov	r24, r6
    3400:	11 92       	st	Z+, r1
    3402:	8a 95       	dec	r24
    3404:	e9 f7       	brne	.-6      	; 0x3400 <main+0x2a4>
					valToStr(output,spo2);
    3406:	b7 01       	movw	r22, r14
    3408:	cf 51       	subi	r28, 0x1F	; 31
    340a:	df 4f       	sbci	r29, 0xFF	; 255
    340c:	88 81       	ld	r24, Y
    340e:	c1 5e       	subi	r28, 0xE1	; 225
    3410:	d0 40       	sbci	r29, 0x00	; 0
    3412:	ce 51       	subi	r28, 0x1E	; 30
    3414:	df 4f       	sbci	r29, 0xFF	; 255
    3416:	98 81       	ld	r25, Y
    3418:	c2 5e       	subi	r28, 0xE2	; 226
    341a:	d0 40       	sbci	r29, 0x00	; 0
    341c:	0e 94 57 18 	call	0x30ae	; 0x30ae <valToStr>
					strcat(output," %");
    3420:	f6 01       	movw	r30, r12
    3422:	01 90       	ld	r0, Z+
    3424:	00 20       	and	r0, r0
    3426:	e9 f7       	brne	.-6      	; 0x3422 <main+0x2c6>
    3428:	31 97       	sbiw	r30, 0x01	; 1
    342a:	91 82       	std	Z+1, r9	; 0x01
    342c:	80 82       	st	Z, r8
    342e:	12 82       	std	Z+2, r1	; 0x02
					strcat(final,output);
    3430:	cf 51       	subi	r28, 0x1F	; 31
    3432:	df 4f       	sbci	r29, 0xFF	; 255
    3434:	68 81       	ld	r22, Y
    3436:	c1 5e       	subi	r28, 0xE1	; 225
    3438:	d0 40       	sbci	r29, 0x00	; 0
    343a:	ce 51       	subi	r28, 0x1E	; 30
    343c:	df 4f       	sbci	r29, 0xFF	; 255
    343e:	78 81       	ld	r23, Y
    3440:	c2 5e       	subi	r28, 0xE2	; 226
    3442:	d0 40       	sbci	r29, 0x00	; 0
    3444:	ce 01       	movw	r24, r28
    3446:	01 96       	adiw	r24, 0x01	; 1
    3448:	0e 94 f5 1d 	call	0x3bea	; 0x3bea <strcat>
					u8g2_DrawStr(&u8g2, 16, 36, final);
    344c:	9e 01       	movw	r18, r28
    344e:	2f 5f       	subi	r18, 0xFF	; 255
    3450:	3f 4f       	sbci	r19, 0xFF	; 255
    3452:	44 e2       	ldi	r20, 0x24	; 36
    3454:	50 e0       	ldi	r21, 0x00	; 0
    3456:	60 e1       	ldi	r22, 0x10	; 16
    3458:	70 e0       	ldi	r23, 0x00	; 0
    345a:	8a eb       	ldi	r24, 0xBA	; 186
    345c:	95 e0       	ldi	r25, 0x05	; 5
    345e:	0e 94 0c 11 	call	0x2218	; 0x2218 <u8g2_DrawStr>
					u8g2_SendBuffer(&u8g2);
    3462:	8a eb       	ldi	r24, 0xBA	; 186
    3464:	95 e0       	ldi	r25, 0x05	; 5
    3466:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <u8g2_SendBuffer>
				}
				u8g2_SendBuffer(&u8g2);
			}
		}
		
		while(mode){
    346a:	51 10       	cpse	r5, r1
    346c:	21 cf       	rjmp	.-446    	; 0x32b0 <main+0x154>
    346e:	15 cf       	rjmp	.-470    	; 0x329a <main+0x13e>

00003470 <__subsf3>:
    3470:	50 58       	subi	r21, 0x80	; 128

00003472 <__addsf3>:
    3472:	bb 27       	eor	r27, r27
    3474:	aa 27       	eor	r26, r26
    3476:	0e 94 50 1a 	call	0x34a0	; 0x34a0 <__addsf3x>
    347a:	0c 94 9a 1b 	jmp	0x3734	; 0x3734 <__fp_round>
    347e:	0e 94 8c 1b 	call	0x3718	; 0x3718 <__fp_pscA>
    3482:	38 f0       	brcs	.+14     	; 0x3492 <__addsf3+0x20>
    3484:	0e 94 93 1b 	call	0x3726	; 0x3726 <__fp_pscB>
    3488:	20 f0       	brcs	.+8      	; 0x3492 <__addsf3+0x20>
    348a:	39 f4       	brne	.+14     	; 0x349a <__addsf3+0x28>
    348c:	9f 3f       	cpi	r25, 0xFF	; 255
    348e:	19 f4       	brne	.+6      	; 0x3496 <__addsf3+0x24>
    3490:	26 f4       	brtc	.+8      	; 0x349a <__addsf3+0x28>
    3492:	0c 94 89 1b 	jmp	0x3712	; 0x3712 <__fp_nan>
    3496:	0e f4       	brtc	.+2      	; 0x349a <__addsf3+0x28>
    3498:	e0 95       	com	r30
    349a:	e7 fb       	bst	r30, 7
    349c:	0c 94 83 1b 	jmp	0x3706	; 0x3706 <__fp_inf>

000034a0 <__addsf3x>:
    34a0:	e9 2f       	mov	r30, r25
    34a2:	0e 94 ab 1b 	call	0x3756	; 0x3756 <__fp_split3>
    34a6:	58 f3       	brcs	.-42     	; 0x347e <__addsf3+0xc>
    34a8:	ba 17       	cp	r27, r26
    34aa:	62 07       	cpc	r22, r18
    34ac:	73 07       	cpc	r23, r19
    34ae:	84 07       	cpc	r24, r20
    34b0:	95 07       	cpc	r25, r21
    34b2:	20 f0       	brcs	.+8      	; 0x34bc <__addsf3x+0x1c>
    34b4:	79 f4       	brne	.+30     	; 0x34d4 <__addsf3x+0x34>
    34b6:	a6 f5       	brtc	.+104    	; 0x3520 <__addsf3x+0x80>
    34b8:	0c 94 cd 1b 	jmp	0x379a	; 0x379a <__fp_zero>
    34bc:	0e f4       	brtc	.+2      	; 0x34c0 <__addsf3x+0x20>
    34be:	e0 95       	com	r30
    34c0:	0b 2e       	mov	r0, r27
    34c2:	ba 2f       	mov	r27, r26
    34c4:	a0 2d       	mov	r26, r0
    34c6:	0b 01       	movw	r0, r22
    34c8:	b9 01       	movw	r22, r18
    34ca:	90 01       	movw	r18, r0
    34cc:	0c 01       	movw	r0, r24
    34ce:	ca 01       	movw	r24, r20
    34d0:	a0 01       	movw	r20, r0
    34d2:	11 24       	eor	r1, r1
    34d4:	ff 27       	eor	r31, r31
    34d6:	59 1b       	sub	r21, r25
    34d8:	99 f0       	breq	.+38     	; 0x3500 <__addsf3x+0x60>
    34da:	59 3f       	cpi	r21, 0xF9	; 249
    34dc:	50 f4       	brcc	.+20     	; 0x34f2 <__addsf3x+0x52>
    34de:	50 3e       	cpi	r21, 0xE0	; 224
    34e0:	68 f1       	brcs	.+90     	; 0x353c <__addsf3x+0x9c>
    34e2:	1a 16       	cp	r1, r26
    34e4:	f0 40       	sbci	r31, 0x00	; 0
    34e6:	a2 2f       	mov	r26, r18
    34e8:	23 2f       	mov	r18, r19
    34ea:	34 2f       	mov	r19, r20
    34ec:	44 27       	eor	r20, r20
    34ee:	58 5f       	subi	r21, 0xF8	; 248
    34f0:	f3 cf       	rjmp	.-26     	; 0x34d8 <__addsf3x+0x38>
    34f2:	46 95       	lsr	r20
    34f4:	37 95       	ror	r19
    34f6:	27 95       	ror	r18
    34f8:	a7 95       	ror	r26
    34fa:	f0 40       	sbci	r31, 0x00	; 0
    34fc:	53 95       	inc	r21
    34fe:	c9 f7       	brne	.-14     	; 0x34f2 <__addsf3x+0x52>
    3500:	7e f4       	brtc	.+30     	; 0x3520 <__addsf3x+0x80>
    3502:	1f 16       	cp	r1, r31
    3504:	ba 0b       	sbc	r27, r26
    3506:	62 0b       	sbc	r22, r18
    3508:	73 0b       	sbc	r23, r19
    350a:	84 0b       	sbc	r24, r20
    350c:	ba f0       	brmi	.+46     	; 0x353c <__addsf3x+0x9c>
    350e:	91 50       	subi	r25, 0x01	; 1
    3510:	a1 f0       	breq	.+40     	; 0x353a <__addsf3x+0x9a>
    3512:	ff 0f       	add	r31, r31
    3514:	bb 1f       	adc	r27, r27
    3516:	66 1f       	adc	r22, r22
    3518:	77 1f       	adc	r23, r23
    351a:	88 1f       	adc	r24, r24
    351c:	c2 f7       	brpl	.-16     	; 0x350e <__addsf3x+0x6e>
    351e:	0e c0       	rjmp	.+28     	; 0x353c <__addsf3x+0x9c>
    3520:	ba 0f       	add	r27, r26
    3522:	62 1f       	adc	r22, r18
    3524:	73 1f       	adc	r23, r19
    3526:	84 1f       	adc	r24, r20
    3528:	48 f4       	brcc	.+18     	; 0x353c <__addsf3x+0x9c>
    352a:	87 95       	ror	r24
    352c:	77 95       	ror	r23
    352e:	67 95       	ror	r22
    3530:	b7 95       	ror	r27
    3532:	f7 95       	ror	r31
    3534:	9e 3f       	cpi	r25, 0xFE	; 254
    3536:	08 f0       	brcs	.+2      	; 0x353a <__addsf3x+0x9a>
    3538:	b0 cf       	rjmp	.-160    	; 0x349a <__addsf3+0x28>
    353a:	93 95       	inc	r25
    353c:	88 0f       	add	r24, r24
    353e:	08 f0       	brcs	.+2      	; 0x3542 <__addsf3x+0xa2>
    3540:	99 27       	eor	r25, r25
    3542:	ee 0f       	add	r30, r30
    3544:	97 95       	ror	r25
    3546:	87 95       	ror	r24
    3548:	08 95       	ret

0000354a <__divsf3>:
    354a:	0e 94 b9 1a 	call	0x3572	; 0x3572 <__divsf3x>
    354e:	0c 94 9a 1b 	jmp	0x3734	; 0x3734 <__fp_round>
    3552:	0e 94 93 1b 	call	0x3726	; 0x3726 <__fp_pscB>
    3556:	58 f0       	brcs	.+22     	; 0x356e <__divsf3+0x24>
    3558:	0e 94 8c 1b 	call	0x3718	; 0x3718 <__fp_pscA>
    355c:	40 f0       	brcs	.+16     	; 0x356e <__divsf3+0x24>
    355e:	29 f4       	brne	.+10     	; 0x356a <__divsf3+0x20>
    3560:	5f 3f       	cpi	r21, 0xFF	; 255
    3562:	29 f0       	breq	.+10     	; 0x356e <__divsf3+0x24>
    3564:	0c 94 83 1b 	jmp	0x3706	; 0x3706 <__fp_inf>
    3568:	51 11       	cpse	r21, r1
    356a:	0c 94 ce 1b 	jmp	0x379c	; 0x379c <__fp_szero>
    356e:	0c 94 89 1b 	jmp	0x3712	; 0x3712 <__fp_nan>

00003572 <__divsf3x>:
    3572:	0e 94 ab 1b 	call	0x3756	; 0x3756 <__fp_split3>
    3576:	68 f3       	brcs	.-38     	; 0x3552 <__divsf3+0x8>

00003578 <__divsf3_pse>:
    3578:	99 23       	and	r25, r25
    357a:	b1 f3       	breq	.-20     	; 0x3568 <__divsf3+0x1e>
    357c:	55 23       	and	r21, r21
    357e:	91 f3       	breq	.-28     	; 0x3564 <__divsf3+0x1a>
    3580:	95 1b       	sub	r25, r21
    3582:	55 0b       	sbc	r21, r21
    3584:	bb 27       	eor	r27, r27
    3586:	aa 27       	eor	r26, r26
    3588:	62 17       	cp	r22, r18
    358a:	73 07       	cpc	r23, r19
    358c:	84 07       	cpc	r24, r20
    358e:	38 f0       	brcs	.+14     	; 0x359e <__divsf3_pse+0x26>
    3590:	9f 5f       	subi	r25, 0xFF	; 255
    3592:	5f 4f       	sbci	r21, 0xFF	; 255
    3594:	22 0f       	add	r18, r18
    3596:	33 1f       	adc	r19, r19
    3598:	44 1f       	adc	r20, r20
    359a:	aa 1f       	adc	r26, r26
    359c:	a9 f3       	breq	.-22     	; 0x3588 <__divsf3_pse+0x10>
    359e:	35 d0       	rcall	.+106    	; 0x360a <__divsf3_pse+0x92>
    35a0:	0e 2e       	mov	r0, r30
    35a2:	3a f0       	brmi	.+14     	; 0x35b2 <__divsf3_pse+0x3a>
    35a4:	e0 e8       	ldi	r30, 0x80	; 128
    35a6:	32 d0       	rcall	.+100    	; 0x360c <__divsf3_pse+0x94>
    35a8:	91 50       	subi	r25, 0x01	; 1
    35aa:	50 40       	sbci	r21, 0x00	; 0
    35ac:	e6 95       	lsr	r30
    35ae:	00 1c       	adc	r0, r0
    35b0:	ca f7       	brpl	.-14     	; 0x35a4 <__divsf3_pse+0x2c>
    35b2:	2b d0       	rcall	.+86     	; 0x360a <__divsf3_pse+0x92>
    35b4:	fe 2f       	mov	r31, r30
    35b6:	29 d0       	rcall	.+82     	; 0x360a <__divsf3_pse+0x92>
    35b8:	66 0f       	add	r22, r22
    35ba:	77 1f       	adc	r23, r23
    35bc:	88 1f       	adc	r24, r24
    35be:	bb 1f       	adc	r27, r27
    35c0:	26 17       	cp	r18, r22
    35c2:	37 07       	cpc	r19, r23
    35c4:	48 07       	cpc	r20, r24
    35c6:	ab 07       	cpc	r26, r27
    35c8:	b0 e8       	ldi	r27, 0x80	; 128
    35ca:	09 f0       	breq	.+2      	; 0x35ce <__divsf3_pse+0x56>
    35cc:	bb 0b       	sbc	r27, r27
    35ce:	80 2d       	mov	r24, r0
    35d0:	bf 01       	movw	r22, r30
    35d2:	ff 27       	eor	r31, r31
    35d4:	93 58       	subi	r25, 0x83	; 131
    35d6:	5f 4f       	sbci	r21, 0xFF	; 255
    35d8:	3a f0       	brmi	.+14     	; 0x35e8 <__divsf3_pse+0x70>
    35da:	9e 3f       	cpi	r25, 0xFE	; 254
    35dc:	51 05       	cpc	r21, r1
    35de:	78 f0       	brcs	.+30     	; 0x35fe <__divsf3_pse+0x86>
    35e0:	0c 94 83 1b 	jmp	0x3706	; 0x3706 <__fp_inf>
    35e4:	0c 94 ce 1b 	jmp	0x379c	; 0x379c <__fp_szero>
    35e8:	5f 3f       	cpi	r21, 0xFF	; 255
    35ea:	e4 f3       	brlt	.-8      	; 0x35e4 <__divsf3_pse+0x6c>
    35ec:	98 3e       	cpi	r25, 0xE8	; 232
    35ee:	d4 f3       	brlt	.-12     	; 0x35e4 <__divsf3_pse+0x6c>
    35f0:	86 95       	lsr	r24
    35f2:	77 95       	ror	r23
    35f4:	67 95       	ror	r22
    35f6:	b7 95       	ror	r27
    35f8:	f7 95       	ror	r31
    35fa:	9f 5f       	subi	r25, 0xFF	; 255
    35fc:	c9 f7       	brne	.-14     	; 0x35f0 <__divsf3_pse+0x78>
    35fe:	88 0f       	add	r24, r24
    3600:	91 1d       	adc	r25, r1
    3602:	96 95       	lsr	r25
    3604:	87 95       	ror	r24
    3606:	97 f9       	bld	r25, 7
    3608:	08 95       	ret
    360a:	e1 e0       	ldi	r30, 0x01	; 1
    360c:	66 0f       	add	r22, r22
    360e:	77 1f       	adc	r23, r23
    3610:	88 1f       	adc	r24, r24
    3612:	bb 1f       	adc	r27, r27
    3614:	62 17       	cp	r22, r18
    3616:	73 07       	cpc	r23, r19
    3618:	84 07       	cpc	r24, r20
    361a:	ba 07       	cpc	r27, r26
    361c:	20 f0       	brcs	.+8      	; 0x3626 <__divsf3_pse+0xae>
    361e:	62 1b       	sub	r22, r18
    3620:	73 0b       	sbc	r23, r19
    3622:	84 0b       	sbc	r24, r20
    3624:	ba 0b       	sbc	r27, r26
    3626:	ee 1f       	adc	r30, r30
    3628:	88 f7       	brcc	.-30     	; 0x360c <__divsf3_pse+0x94>
    362a:	e0 95       	com	r30
    362c:	08 95       	ret

0000362e <__fixunssfsi>:
    362e:	0e 94 b3 1b 	call	0x3766	; 0x3766 <__fp_splitA>
    3632:	88 f0       	brcs	.+34     	; 0x3656 <__fixunssfsi+0x28>
    3634:	9f 57       	subi	r25, 0x7F	; 127
    3636:	98 f0       	brcs	.+38     	; 0x365e <__fixunssfsi+0x30>
    3638:	b9 2f       	mov	r27, r25
    363a:	99 27       	eor	r25, r25
    363c:	b7 51       	subi	r27, 0x17	; 23
    363e:	b0 f0       	brcs	.+44     	; 0x366c <__fixunssfsi+0x3e>
    3640:	e1 f0       	breq	.+56     	; 0x367a <__fixunssfsi+0x4c>
    3642:	66 0f       	add	r22, r22
    3644:	77 1f       	adc	r23, r23
    3646:	88 1f       	adc	r24, r24
    3648:	99 1f       	adc	r25, r25
    364a:	1a f0       	brmi	.+6      	; 0x3652 <__fixunssfsi+0x24>
    364c:	ba 95       	dec	r27
    364e:	c9 f7       	brne	.-14     	; 0x3642 <__fixunssfsi+0x14>
    3650:	14 c0       	rjmp	.+40     	; 0x367a <__fixunssfsi+0x4c>
    3652:	b1 30       	cpi	r27, 0x01	; 1
    3654:	91 f0       	breq	.+36     	; 0x367a <__fixunssfsi+0x4c>
    3656:	0e 94 cd 1b 	call	0x379a	; 0x379a <__fp_zero>
    365a:	b1 e0       	ldi	r27, 0x01	; 1
    365c:	08 95       	ret
    365e:	0c 94 cd 1b 	jmp	0x379a	; 0x379a <__fp_zero>
    3662:	67 2f       	mov	r22, r23
    3664:	78 2f       	mov	r23, r24
    3666:	88 27       	eor	r24, r24
    3668:	b8 5f       	subi	r27, 0xF8	; 248
    366a:	39 f0       	breq	.+14     	; 0x367a <__fixunssfsi+0x4c>
    366c:	b9 3f       	cpi	r27, 0xF9	; 249
    366e:	cc f3       	brlt	.-14     	; 0x3662 <__fixunssfsi+0x34>
    3670:	86 95       	lsr	r24
    3672:	77 95       	ror	r23
    3674:	67 95       	ror	r22
    3676:	b3 95       	inc	r27
    3678:	d9 f7       	brne	.-10     	; 0x3670 <__fixunssfsi+0x42>
    367a:	3e f4       	brtc	.+14     	; 0x368a <__fixunssfsi+0x5c>
    367c:	90 95       	com	r25
    367e:	80 95       	com	r24
    3680:	70 95       	com	r23
    3682:	61 95       	neg	r22
    3684:	7f 4f       	sbci	r23, 0xFF	; 255
    3686:	8f 4f       	sbci	r24, 0xFF	; 255
    3688:	9f 4f       	sbci	r25, 0xFF	; 255
    368a:	08 95       	ret

0000368c <__floatunsisf>:
    368c:	e8 94       	clt
    368e:	09 c0       	rjmp	.+18     	; 0x36a2 <__floatsisf+0x12>

00003690 <__floatsisf>:
    3690:	97 fb       	bst	r25, 7
    3692:	3e f4       	brtc	.+14     	; 0x36a2 <__floatsisf+0x12>
    3694:	90 95       	com	r25
    3696:	80 95       	com	r24
    3698:	70 95       	com	r23
    369a:	61 95       	neg	r22
    369c:	7f 4f       	sbci	r23, 0xFF	; 255
    369e:	8f 4f       	sbci	r24, 0xFF	; 255
    36a0:	9f 4f       	sbci	r25, 0xFF	; 255
    36a2:	99 23       	and	r25, r25
    36a4:	a9 f0       	breq	.+42     	; 0x36d0 <__floatsisf+0x40>
    36a6:	f9 2f       	mov	r31, r25
    36a8:	96 e9       	ldi	r25, 0x96	; 150
    36aa:	bb 27       	eor	r27, r27
    36ac:	93 95       	inc	r25
    36ae:	f6 95       	lsr	r31
    36b0:	87 95       	ror	r24
    36b2:	77 95       	ror	r23
    36b4:	67 95       	ror	r22
    36b6:	b7 95       	ror	r27
    36b8:	f1 11       	cpse	r31, r1
    36ba:	f8 cf       	rjmp	.-16     	; 0x36ac <__floatsisf+0x1c>
    36bc:	fa f4       	brpl	.+62     	; 0x36fc <__floatsisf+0x6c>
    36be:	bb 0f       	add	r27, r27
    36c0:	11 f4       	brne	.+4      	; 0x36c6 <__floatsisf+0x36>
    36c2:	60 ff       	sbrs	r22, 0
    36c4:	1b c0       	rjmp	.+54     	; 0x36fc <__floatsisf+0x6c>
    36c6:	6f 5f       	subi	r22, 0xFF	; 255
    36c8:	7f 4f       	sbci	r23, 0xFF	; 255
    36ca:	8f 4f       	sbci	r24, 0xFF	; 255
    36cc:	9f 4f       	sbci	r25, 0xFF	; 255
    36ce:	16 c0       	rjmp	.+44     	; 0x36fc <__floatsisf+0x6c>
    36d0:	88 23       	and	r24, r24
    36d2:	11 f0       	breq	.+4      	; 0x36d8 <__floatsisf+0x48>
    36d4:	96 e9       	ldi	r25, 0x96	; 150
    36d6:	11 c0       	rjmp	.+34     	; 0x36fa <__floatsisf+0x6a>
    36d8:	77 23       	and	r23, r23
    36da:	21 f0       	breq	.+8      	; 0x36e4 <__floatsisf+0x54>
    36dc:	9e e8       	ldi	r25, 0x8E	; 142
    36de:	87 2f       	mov	r24, r23
    36e0:	76 2f       	mov	r23, r22
    36e2:	05 c0       	rjmp	.+10     	; 0x36ee <__floatsisf+0x5e>
    36e4:	66 23       	and	r22, r22
    36e6:	71 f0       	breq	.+28     	; 0x3704 <__floatsisf+0x74>
    36e8:	96 e8       	ldi	r25, 0x86	; 134
    36ea:	86 2f       	mov	r24, r22
    36ec:	70 e0       	ldi	r23, 0x00	; 0
    36ee:	60 e0       	ldi	r22, 0x00	; 0
    36f0:	2a f0       	brmi	.+10     	; 0x36fc <__floatsisf+0x6c>
    36f2:	9a 95       	dec	r25
    36f4:	66 0f       	add	r22, r22
    36f6:	77 1f       	adc	r23, r23
    36f8:	88 1f       	adc	r24, r24
    36fa:	da f7       	brpl	.-10     	; 0x36f2 <__floatsisf+0x62>
    36fc:	88 0f       	add	r24, r24
    36fe:	96 95       	lsr	r25
    3700:	87 95       	ror	r24
    3702:	97 f9       	bld	r25, 7
    3704:	08 95       	ret

00003706 <__fp_inf>:
    3706:	97 f9       	bld	r25, 7
    3708:	9f 67       	ori	r25, 0x7F	; 127
    370a:	80 e8       	ldi	r24, 0x80	; 128
    370c:	70 e0       	ldi	r23, 0x00	; 0
    370e:	60 e0       	ldi	r22, 0x00	; 0
    3710:	08 95       	ret

00003712 <__fp_nan>:
    3712:	9f ef       	ldi	r25, 0xFF	; 255
    3714:	80 ec       	ldi	r24, 0xC0	; 192
    3716:	08 95       	ret

00003718 <__fp_pscA>:
    3718:	00 24       	eor	r0, r0
    371a:	0a 94       	dec	r0
    371c:	16 16       	cp	r1, r22
    371e:	17 06       	cpc	r1, r23
    3720:	18 06       	cpc	r1, r24
    3722:	09 06       	cpc	r0, r25
    3724:	08 95       	ret

00003726 <__fp_pscB>:
    3726:	00 24       	eor	r0, r0
    3728:	0a 94       	dec	r0
    372a:	12 16       	cp	r1, r18
    372c:	13 06       	cpc	r1, r19
    372e:	14 06       	cpc	r1, r20
    3730:	05 06       	cpc	r0, r21
    3732:	08 95       	ret

00003734 <__fp_round>:
    3734:	09 2e       	mov	r0, r25
    3736:	03 94       	inc	r0
    3738:	00 0c       	add	r0, r0
    373a:	11 f4       	brne	.+4      	; 0x3740 <__fp_round+0xc>
    373c:	88 23       	and	r24, r24
    373e:	52 f0       	brmi	.+20     	; 0x3754 <__fp_round+0x20>
    3740:	bb 0f       	add	r27, r27
    3742:	40 f4       	brcc	.+16     	; 0x3754 <__fp_round+0x20>
    3744:	bf 2b       	or	r27, r31
    3746:	11 f4       	brne	.+4      	; 0x374c <__fp_round+0x18>
    3748:	60 ff       	sbrs	r22, 0
    374a:	04 c0       	rjmp	.+8      	; 0x3754 <__fp_round+0x20>
    374c:	6f 5f       	subi	r22, 0xFF	; 255
    374e:	7f 4f       	sbci	r23, 0xFF	; 255
    3750:	8f 4f       	sbci	r24, 0xFF	; 255
    3752:	9f 4f       	sbci	r25, 0xFF	; 255
    3754:	08 95       	ret

00003756 <__fp_split3>:
    3756:	57 fd       	sbrc	r21, 7
    3758:	90 58       	subi	r25, 0x80	; 128
    375a:	44 0f       	add	r20, r20
    375c:	55 1f       	adc	r21, r21
    375e:	59 f0       	breq	.+22     	; 0x3776 <__fp_splitA+0x10>
    3760:	5f 3f       	cpi	r21, 0xFF	; 255
    3762:	71 f0       	breq	.+28     	; 0x3780 <__fp_splitA+0x1a>
    3764:	47 95       	ror	r20

00003766 <__fp_splitA>:
    3766:	88 0f       	add	r24, r24
    3768:	97 fb       	bst	r25, 7
    376a:	99 1f       	adc	r25, r25
    376c:	61 f0       	breq	.+24     	; 0x3786 <__fp_splitA+0x20>
    376e:	9f 3f       	cpi	r25, 0xFF	; 255
    3770:	79 f0       	breq	.+30     	; 0x3790 <__fp_splitA+0x2a>
    3772:	87 95       	ror	r24
    3774:	08 95       	ret
    3776:	12 16       	cp	r1, r18
    3778:	13 06       	cpc	r1, r19
    377a:	14 06       	cpc	r1, r20
    377c:	55 1f       	adc	r21, r21
    377e:	f2 cf       	rjmp	.-28     	; 0x3764 <__fp_split3+0xe>
    3780:	46 95       	lsr	r20
    3782:	f1 df       	rcall	.-30     	; 0x3766 <__fp_splitA>
    3784:	08 c0       	rjmp	.+16     	; 0x3796 <__fp_splitA+0x30>
    3786:	16 16       	cp	r1, r22
    3788:	17 06       	cpc	r1, r23
    378a:	18 06       	cpc	r1, r24
    378c:	99 1f       	adc	r25, r25
    378e:	f1 cf       	rjmp	.-30     	; 0x3772 <__fp_splitA+0xc>
    3790:	86 95       	lsr	r24
    3792:	71 05       	cpc	r23, r1
    3794:	61 05       	cpc	r22, r1
    3796:	08 94       	sec
    3798:	08 95       	ret

0000379a <__fp_zero>:
    379a:	e8 94       	clt

0000379c <__fp_szero>:
    379c:	bb 27       	eor	r27, r27
    379e:	66 27       	eor	r22, r22
    37a0:	77 27       	eor	r23, r23
    37a2:	cb 01       	movw	r24, r22
    37a4:	97 f9       	bld	r25, 7
    37a6:	08 95       	ret

000037a8 <pow>:
    37a8:	fa 01       	movw	r30, r20
    37aa:	ee 0f       	add	r30, r30
    37ac:	ff 1f       	adc	r31, r31
    37ae:	30 96       	adiw	r30, 0x00	; 0
    37b0:	21 05       	cpc	r18, r1
    37b2:	31 05       	cpc	r19, r1
    37b4:	a1 f1       	breq	.+104    	; 0x381e <pow+0x76>
    37b6:	61 15       	cp	r22, r1
    37b8:	71 05       	cpc	r23, r1
    37ba:	61 f4       	brne	.+24     	; 0x37d4 <pow+0x2c>
    37bc:	80 38       	cpi	r24, 0x80	; 128
    37be:	bf e3       	ldi	r27, 0x3F	; 63
    37c0:	9b 07       	cpc	r25, r27
    37c2:	49 f1       	breq	.+82     	; 0x3816 <pow+0x6e>
    37c4:	68 94       	set
    37c6:	90 38       	cpi	r25, 0x80	; 128
    37c8:	81 05       	cpc	r24, r1
    37ca:	61 f0       	breq	.+24     	; 0x37e4 <pow+0x3c>
    37cc:	80 38       	cpi	r24, 0x80	; 128
    37ce:	bf ef       	ldi	r27, 0xFF	; 255
    37d0:	9b 07       	cpc	r25, r27
    37d2:	41 f0       	breq	.+16     	; 0x37e4 <pow+0x3c>
    37d4:	99 23       	and	r25, r25
    37d6:	4a f5       	brpl	.+82     	; 0x382a <pow+0x82>
    37d8:	ff 3f       	cpi	r31, 0xFF	; 255
    37da:	e1 05       	cpc	r30, r1
    37dc:	31 05       	cpc	r19, r1
    37de:	21 05       	cpc	r18, r1
    37e0:	19 f1       	breq	.+70     	; 0x3828 <pow+0x80>
    37e2:	e8 94       	clt
    37e4:	08 94       	sec
    37e6:	e7 95       	ror	r30
    37e8:	d9 01       	movw	r26, r18
    37ea:	aa 23       	and	r26, r26
    37ec:	29 f4       	brne	.+10     	; 0x37f8 <pow+0x50>
    37ee:	ab 2f       	mov	r26, r27
    37f0:	be 2f       	mov	r27, r30
    37f2:	f8 5f       	subi	r31, 0xF8	; 248
    37f4:	d0 f3       	brcs	.-12     	; 0x37ea <pow+0x42>
    37f6:	10 c0       	rjmp	.+32     	; 0x3818 <pow+0x70>
    37f8:	ff 5f       	subi	r31, 0xFF	; 255
    37fa:	70 f4       	brcc	.+28     	; 0x3818 <pow+0x70>
    37fc:	a6 95       	lsr	r26
    37fe:	e0 f7       	brcc	.-8      	; 0x37f8 <pow+0x50>
    3800:	f7 39       	cpi	r31, 0x97	; 151
    3802:	50 f0       	brcs	.+20     	; 0x3818 <pow+0x70>
    3804:	19 f0       	breq	.+6      	; 0x380c <pow+0x64>
    3806:	ff 3a       	cpi	r31, 0xAF	; 175
    3808:	38 f4       	brcc	.+14     	; 0x3818 <pow+0x70>
    380a:	9f 77       	andi	r25, 0x7F	; 127
    380c:	9f 93       	push	r25
    380e:	0d d0       	rcall	.+26     	; 0x382a <pow+0x82>
    3810:	0f 90       	pop	r0
    3812:	07 fc       	sbrc	r0, 7
    3814:	90 58       	subi	r25, 0x80	; 128
    3816:	08 95       	ret
    3818:	46 f0       	brts	.+16     	; 0x382a <pow+0x82>
    381a:	0c 94 89 1b 	jmp	0x3712	; 0x3712 <__fp_nan>
    381e:	60 e0       	ldi	r22, 0x00	; 0
    3820:	70 e0       	ldi	r23, 0x00	; 0
    3822:	80 e8       	ldi	r24, 0x80	; 128
    3824:	9f e3       	ldi	r25, 0x3F	; 63
    3826:	08 95       	ret
    3828:	4f e7       	ldi	r20, 0x7F	; 127
    382a:	9f 77       	andi	r25, 0x7F	; 127
    382c:	5f 93       	push	r21
    382e:	4f 93       	push	r20
    3830:	3f 93       	push	r19
    3832:	2f 93       	push	r18
    3834:	0e 94 cf 1c 	call	0x399e	; 0x399e <log>
    3838:	2f 91       	pop	r18
    383a:	3f 91       	pop	r19
    383c:	4f 91       	pop	r20
    383e:	5f 91       	pop	r21
    3840:	0e 94 4b 1d 	call	0x3a96	; 0x3a96 <__mulsf3>
    3844:	0c 94 2c 1c 	jmp	0x3858	; 0x3858 <exp>
    3848:	29 f4       	brne	.+10     	; 0x3854 <pow+0xac>
    384a:	16 f0       	brts	.+4      	; 0x3850 <pow+0xa8>
    384c:	0c 94 83 1b 	jmp	0x3706	; 0x3706 <__fp_inf>
    3850:	0c 94 cd 1b 	jmp	0x379a	; 0x379a <__fp_zero>
    3854:	0c 94 89 1b 	jmp	0x3712	; 0x3712 <__fp_nan>

00003858 <exp>:
    3858:	0e 94 b3 1b 	call	0x3766	; 0x3766 <__fp_splitA>
    385c:	a8 f3       	brcs	.-22     	; 0x3848 <pow+0xa0>
    385e:	96 38       	cpi	r25, 0x86	; 134
    3860:	a0 f7       	brcc	.-24     	; 0x384a <pow+0xa2>
    3862:	07 f8       	bld	r0, 7
    3864:	0f 92       	push	r0
    3866:	e8 94       	clt
    3868:	2b e3       	ldi	r18, 0x3B	; 59
    386a:	3a ea       	ldi	r19, 0xAA	; 170
    386c:	48 eb       	ldi	r20, 0xB8	; 184
    386e:	5f e7       	ldi	r21, 0x7F	; 127
    3870:	0e 94 61 1d 	call	0x3ac2	; 0x3ac2 <__mulsf3_pse>
    3874:	0f 92       	push	r0
    3876:	0f 92       	push	r0
    3878:	0f 92       	push	r0
    387a:	4d b7       	in	r20, 0x3d	; 61
    387c:	5e b7       	in	r21, 0x3e	; 62
    387e:	0f 92       	push	r0
    3880:	0e 94 17 1d 	call	0x3a2e	; 0x3a2e <modf>
    3884:	e4 e5       	ldi	r30, 0x54	; 84
    3886:	f0 e0       	ldi	r31, 0x00	; 0
    3888:	0e 94 5e 1c 	call	0x38bc	; 0x38bc <__fp_powser>
    388c:	4f 91       	pop	r20
    388e:	5f 91       	pop	r21
    3890:	ef 91       	pop	r30
    3892:	ff 91       	pop	r31
    3894:	e5 95       	asr	r30
    3896:	ee 1f       	adc	r30, r30
    3898:	ff 1f       	adc	r31, r31
    389a:	49 f0       	breq	.+18     	; 0x38ae <exp+0x56>
    389c:	fe 57       	subi	r31, 0x7E	; 126
    389e:	e0 68       	ori	r30, 0x80	; 128
    38a0:	44 27       	eor	r20, r20
    38a2:	ee 0f       	add	r30, r30
    38a4:	44 1f       	adc	r20, r20
    38a6:	fa 95       	dec	r31
    38a8:	e1 f7       	brne	.-8      	; 0x38a2 <exp+0x4a>
    38aa:	41 95       	neg	r20
    38ac:	55 0b       	sbc	r21, r21
    38ae:	0e 94 91 1c 	call	0x3922	; 0x3922 <ldexp>
    38b2:	0f 90       	pop	r0
    38b4:	07 fe       	sbrs	r0, 7
    38b6:	0c 94 85 1c 	jmp	0x390a	; 0x390a <inverse>
    38ba:	08 95       	ret

000038bc <__fp_powser>:
    38bc:	df 93       	push	r29
    38be:	cf 93       	push	r28
    38c0:	1f 93       	push	r17
    38c2:	0f 93       	push	r16
    38c4:	ff 92       	push	r15
    38c6:	ef 92       	push	r14
    38c8:	df 92       	push	r13
    38ca:	7b 01       	movw	r14, r22
    38cc:	8c 01       	movw	r16, r24
    38ce:	68 94       	set
    38d0:	06 c0       	rjmp	.+12     	; 0x38de <__fp_powser+0x22>
    38d2:	da 2e       	mov	r13, r26
    38d4:	ef 01       	movw	r28, r30
    38d6:	0e 94 5e 1d 	call	0x3abc	; 0x3abc <__mulsf3x>
    38da:	fe 01       	movw	r30, r28
    38dc:	e8 94       	clt
    38de:	a5 91       	lpm	r26, Z+
    38e0:	25 91       	lpm	r18, Z+
    38e2:	35 91       	lpm	r19, Z+
    38e4:	45 91       	lpm	r20, Z+
    38e6:	55 91       	lpm	r21, Z+
    38e8:	a6 f3       	brts	.-24     	; 0x38d2 <__fp_powser+0x16>
    38ea:	ef 01       	movw	r28, r30
    38ec:	0e 94 50 1a 	call	0x34a0	; 0x34a0 <__addsf3x>
    38f0:	fe 01       	movw	r30, r28
    38f2:	97 01       	movw	r18, r14
    38f4:	a8 01       	movw	r20, r16
    38f6:	da 94       	dec	r13
    38f8:	69 f7       	brne	.-38     	; 0x38d4 <__fp_powser+0x18>
    38fa:	df 90       	pop	r13
    38fc:	ef 90       	pop	r14
    38fe:	ff 90       	pop	r15
    3900:	0f 91       	pop	r16
    3902:	1f 91       	pop	r17
    3904:	cf 91       	pop	r28
    3906:	df 91       	pop	r29
    3908:	08 95       	ret

0000390a <inverse>:
    390a:	9b 01       	movw	r18, r22
    390c:	ac 01       	movw	r20, r24
    390e:	60 e0       	ldi	r22, 0x00	; 0
    3910:	70 e0       	ldi	r23, 0x00	; 0
    3912:	80 e8       	ldi	r24, 0x80	; 128
    3914:	9f e3       	ldi	r25, 0x3F	; 63
    3916:	0c 94 a5 1a 	jmp	0x354a	; 0x354a <__divsf3>
    391a:	0c 94 83 1b 	jmp	0x3706	; 0x3706 <__fp_inf>
    391e:	0c 94 b8 1d 	jmp	0x3b70	; 0x3b70 <__fp_mpack>

00003922 <ldexp>:
    3922:	0e 94 b3 1b 	call	0x3766	; 0x3766 <__fp_splitA>
    3926:	d8 f3       	brcs	.-10     	; 0x391e <inverse+0x14>
    3928:	99 23       	and	r25, r25
    392a:	c9 f3       	breq	.-14     	; 0x391e <inverse+0x14>
    392c:	94 0f       	add	r25, r20
    392e:	51 1d       	adc	r21, r1
    3930:	a3 f3       	brvs	.-24     	; 0x391a <inverse+0x10>
    3932:	91 50       	subi	r25, 0x01	; 1
    3934:	50 40       	sbci	r21, 0x00	; 0
    3936:	94 f0       	brlt	.+36     	; 0x395c <ldexp+0x3a>
    3938:	59 f0       	breq	.+22     	; 0x3950 <ldexp+0x2e>
    393a:	88 23       	and	r24, r24
    393c:	32 f0       	brmi	.+12     	; 0x394a <ldexp+0x28>
    393e:	66 0f       	add	r22, r22
    3940:	77 1f       	adc	r23, r23
    3942:	88 1f       	adc	r24, r24
    3944:	91 50       	subi	r25, 0x01	; 1
    3946:	50 40       	sbci	r21, 0x00	; 0
    3948:	c1 f7       	brne	.-16     	; 0x393a <ldexp+0x18>
    394a:	9e 3f       	cpi	r25, 0xFE	; 254
    394c:	51 05       	cpc	r21, r1
    394e:	2c f7       	brge	.-54     	; 0x391a <inverse+0x10>
    3950:	88 0f       	add	r24, r24
    3952:	91 1d       	adc	r25, r1
    3954:	96 95       	lsr	r25
    3956:	87 95       	ror	r24
    3958:	97 f9       	bld	r25, 7
    395a:	08 95       	ret
    395c:	5f 3f       	cpi	r21, 0xFF	; 255
    395e:	ac f0       	brlt	.+42     	; 0x398a <ldexp+0x68>
    3960:	98 3e       	cpi	r25, 0xE8	; 232
    3962:	9c f0       	brlt	.+38     	; 0x398a <ldexp+0x68>
    3964:	bb 27       	eor	r27, r27
    3966:	86 95       	lsr	r24
    3968:	77 95       	ror	r23
    396a:	67 95       	ror	r22
    396c:	b7 95       	ror	r27
    396e:	08 f4       	brcc	.+2      	; 0x3972 <ldexp+0x50>
    3970:	b1 60       	ori	r27, 0x01	; 1
    3972:	93 95       	inc	r25
    3974:	c1 f7       	brne	.-16     	; 0x3966 <ldexp+0x44>
    3976:	bb 0f       	add	r27, r27
    3978:	58 f7       	brcc	.-42     	; 0x3950 <ldexp+0x2e>
    397a:	11 f4       	brne	.+4      	; 0x3980 <ldexp+0x5e>
    397c:	60 ff       	sbrs	r22, 0
    397e:	e8 cf       	rjmp	.-48     	; 0x3950 <ldexp+0x2e>
    3980:	6f 5f       	subi	r22, 0xFF	; 255
    3982:	7f 4f       	sbci	r23, 0xFF	; 255
    3984:	8f 4f       	sbci	r24, 0xFF	; 255
    3986:	9f 4f       	sbci	r25, 0xFF	; 255
    3988:	e3 cf       	rjmp	.-58     	; 0x3950 <ldexp+0x2e>
    398a:	0c 94 ce 1b 	jmp	0x379c	; 0x379c <__fp_szero>
    398e:	16 f0       	brts	.+4      	; 0x3994 <ldexp+0x72>
    3990:	0c 94 b8 1d 	jmp	0x3b70	; 0x3b70 <__fp_mpack>
    3994:	0c 94 89 1b 	jmp	0x3712	; 0x3712 <__fp_nan>
    3998:	68 94       	set
    399a:	0c 94 83 1b 	jmp	0x3706	; 0x3706 <__fp_inf>

0000399e <log>:
    399e:	0e 94 b3 1b 	call	0x3766	; 0x3766 <__fp_splitA>
    39a2:	a8 f3       	brcs	.-22     	; 0x398e <ldexp+0x6c>
    39a4:	99 23       	and	r25, r25
    39a6:	c1 f3       	breq	.-16     	; 0x3998 <ldexp+0x76>
    39a8:	ae f3       	brts	.-22     	; 0x3994 <ldexp+0x72>
    39aa:	df 93       	push	r29
    39ac:	cf 93       	push	r28
    39ae:	1f 93       	push	r17
    39b0:	0f 93       	push	r16
    39b2:	ff 92       	push	r15
    39b4:	c9 2f       	mov	r28, r25
    39b6:	dd 27       	eor	r29, r29
    39b8:	88 23       	and	r24, r24
    39ba:	2a f0       	brmi	.+10     	; 0x39c6 <log+0x28>
    39bc:	21 97       	sbiw	r28, 0x01	; 1
    39be:	66 0f       	add	r22, r22
    39c0:	77 1f       	adc	r23, r23
    39c2:	88 1f       	adc	r24, r24
    39c4:	da f7       	brpl	.-10     	; 0x39bc <log+0x1e>
    39c6:	20 e0       	ldi	r18, 0x00	; 0
    39c8:	30 e0       	ldi	r19, 0x00	; 0
    39ca:	40 e8       	ldi	r20, 0x80	; 128
    39cc:	5f eb       	ldi	r21, 0xBF	; 191
    39ce:	9f e3       	ldi	r25, 0x3F	; 63
    39d0:	88 39       	cpi	r24, 0x98	; 152
    39d2:	20 f0       	brcs	.+8      	; 0x39dc <log+0x3e>
    39d4:	80 3e       	cpi	r24, 0xE0	; 224
    39d6:	38 f0       	brcs	.+14     	; 0x39e6 <log+0x48>
    39d8:	21 96       	adiw	r28, 0x01	; 1
    39da:	8f 77       	andi	r24, 0x7F	; 127
    39dc:	0e 94 39 1a 	call	0x3472	; 0x3472 <__addsf3>
    39e0:	ec e7       	ldi	r30, 0x7C	; 124
    39e2:	f0 e0       	ldi	r31, 0x00	; 0
    39e4:	04 c0       	rjmp	.+8      	; 0x39ee <log+0x50>
    39e6:	0e 94 39 1a 	call	0x3472	; 0x3472 <__addsf3>
    39ea:	e9 ea       	ldi	r30, 0xA9	; 169
    39ec:	f0 e0       	ldi	r31, 0x00	; 0
    39ee:	0e 94 5e 1c 	call	0x38bc	; 0x38bc <__fp_powser>
    39f2:	8b 01       	movw	r16, r22
    39f4:	be 01       	movw	r22, r28
    39f6:	ec 01       	movw	r28, r24
    39f8:	fb 2e       	mov	r15, r27
    39fa:	6f 57       	subi	r22, 0x7F	; 127
    39fc:	71 09       	sbc	r23, r1
    39fe:	75 95       	asr	r23
    3a00:	77 1f       	adc	r23, r23
    3a02:	88 0b       	sbc	r24, r24
    3a04:	99 0b       	sbc	r25, r25
    3a06:	0e 94 48 1b 	call	0x3690	; 0x3690 <__floatsisf>
    3a0a:	28 e1       	ldi	r18, 0x18	; 24
    3a0c:	32 e7       	ldi	r19, 0x72	; 114
    3a0e:	41 e3       	ldi	r20, 0x31	; 49
    3a10:	5f e3       	ldi	r21, 0x3F	; 63
    3a12:	0e 94 5e 1d 	call	0x3abc	; 0x3abc <__mulsf3x>
    3a16:	af 2d       	mov	r26, r15
    3a18:	98 01       	movw	r18, r16
    3a1a:	ae 01       	movw	r20, r28
    3a1c:	ff 90       	pop	r15
    3a1e:	0f 91       	pop	r16
    3a20:	1f 91       	pop	r17
    3a22:	cf 91       	pop	r28
    3a24:	df 91       	pop	r29
    3a26:	0e 94 50 1a 	call	0x34a0	; 0x34a0 <__addsf3x>
    3a2a:	0c 94 9a 1b 	jmp	0x3734	; 0x3734 <__fp_round>

00003a2e <modf>:
    3a2e:	fa 01       	movw	r30, r20
    3a30:	dc 01       	movw	r26, r24
    3a32:	aa 0f       	add	r26, r26
    3a34:	bb 1f       	adc	r27, r27
    3a36:	9b 01       	movw	r18, r22
    3a38:	ac 01       	movw	r20, r24
    3a3a:	bf 57       	subi	r27, 0x7F	; 127
    3a3c:	28 f4       	brcc	.+10     	; 0x3a48 <modf+0x1a>
    3a3e:	22 27       	eor	r18, r18
    3a40:	33 27       	eor	r19, r19
    3a42:	44 27       	eor	r20, r20
    3a44:	50 78       	andi	r21, 0x80	; 128
    3a46:	20 c0       	rjmp	.+64     	; 0x3a88 <modf+0x5a>
    3a48:	b7 51       	subi	r27, 0x17	; 23
    3a4a:	90 f4       	brcc	.+36     	; 0x3a70 <modf+0x42>
    3a4c:	ab 2f       	mov	r26, r27
    3a4e:	00 24       	eor	r0, r0
    3a50:	46 95       	lsr	r20
    3a52:	37 95       	ror	r19
    3a54:	27 95       	ror	r18
    3a56:	01 1c       	adc	r0, r1
    3a58:	a3 95       	inc	r26
    3a5a:	d2 f3       	brmi	.-12     	; 0x3a50 <modf+0x22>
    3a5c:	00 20       	and	r0, r0
    3a5e:	71 f0       	breq	.+28     	; 0x3a7c <modf+0x4e>
    3a60:	22 0f       	add	r18, r18
    3a62:	33 1f       	adc	r19, r19
    3a64:	44 1f       	adc	r20, r20
    3a66:	b3 95       	inc	r27
    3a68:	da f3       	brmi	.-10     	; 0x3a60 <modf+0x32>
    3a6a:	0e d0       	rcall	.+28     	; 0x3a88 <modf+0x5a>
    3a6c:	0c 94 38 1a 	jmp	0x3470	; 0x3470 <__subsf3>
    3a70:	61 30       	cpi	r22, 0x01	; 1
    3a72:	71 05       	cpc	r23, r1
    3a74:	a0 e8       	ldi	r26, 0x80	; 128
    3a76:	8a 07       	cpc	r24, r26
    3a78:	b9 46       	sbci	r27, 0x69	; 105
    3a7a:	30 f4       	brcc	.+12     	; 0x3a88 <modf+0x5a>
    3a7c:	9b 01       	movw	r18, r22
    3a7e:	ac 01       	movw	r20, r24
    3a80:	66 27       	eor	r22, r22
    3a82:	77 27       	eor	r23, r23
    3a84:	88 27       	eor	r24, r24
    3a86:	90 78       	andi	r25, 0x80	; 128
    3a88:	30 96       	adiw	r30, 0x00	; 0
    3a8a:	21 f0       	breq	.+8      	; 0x3a94 <modf+0x66>
    3a8c:	20 83       	st	Z, r18
    3a8e:	31 83       	std	Z+1, r19	; 0x01
    3a90:	42 83       	std	Z+2, r20	; 0x02
    3a92:	53 83       	std	Z+3, r21	; 0x03
    3a94:	08 95       	ret

00003a96 <__mulsf3>:
    3a96:	0e 94 5e 1d 	call	0x3abc	; 0x3abc <__mulsf3x>
    3a9a:	0c 94 9a 1b 	jmp	0x3734	; 0x3734 <__fp_round>
    3a9e:	0e 94 8c 1b 	call	0x3718	; 0x3718 <__fp_pscA>
    3aa2:	38 f0       	brcs	.+14     	; 0x3ab2 <__mulsf3+0x1c>
    3aa4:	0e 94 93 1b 	call	0x3726	; 0x3726 <__fp_pscB>
    3aa8:	20 f0       	brcs	.+8      	; 0x3ab2 <__mulsf3+0x1c>
    3aaa:	95 23       	and	r25, r21
    3aac:	11 f0       	breq	.+4      	; 0x3ab2 <__mulsf3+0x1c>
    3aae:	0c 94 83 1b 	jmp	0x3706	; 0x3706 <__fp_inf>
    3ab2:	0c 94 89 1b 	jmp	0x3712	; 0x3712 <__fp_nan>
    3ab6:	11 24       	eor	r1, r1
    3ab8:	0c 94 ce 1b 	jmp	0x379c	; 0x379c <__fp_szero>

00003abc <__mulsf3x>:
    3abc:	0e 94 ab 1b 	call	0x3756	; 0x3756 <__fp_split3>
    3ac0:	70 f3       	brcs	.-36     	; 0x3a9e <__mulsf3+0x8>

00003ac2 <__mulsf3_pse>:
    3ac2:	95 9f       	mul	r25, r21
    3ac4:	c1 f3       	breq	.-16     	; 0x3ab6 <__mulsf3+0x20>
    3ac6:	95 0f       	add	r25, r21
    3ac8:	50 e0       	ldi	r21, 0x00	; 0
    3aca:	55 1f       	adc	r21, r21
    3acc:	62 9f       	mul	r22, r18
    3ace:	f0 01       	movw	r30, r0
    3ad0:	72 9f       	mul	r23, r18
    3ad2:	bb 27       	eor	r27, r27
    3ad4:	f0 0d       	add	r31, r0
    3ad6:	b1 1d       	adc	r27, r1
    3ad8:	63 9f       	mul	r22, r19
    3ada:	aa 27       	eor	r26, r26
    3adc:	f0 0d       	add	r31, r0
    3ade:	b1 1d       	adc	r27, r1
    3ae0:	aa 1f       	adc	r26, r26
    3ae2:	64 9f       	mul	r22, r20
    3ae4:	66 27       	eor	r22, r22
    3ae6:	b0 0d       	add	r27, r0
    3ae8:	a1 1d       	adc	r26, r1
    3aea:	66 1f       	adc	r22, r22
    3aec:	82 9f       	mul	r24, r18
    3aee:	22 27       	eor	r18, r18
    3af0:	b0 0d       	add	r27, r0
    3af2:	a1 1d       	adc	r26, r1
    3af4:	62 1f       	adc	r22, r18
    3af6:	73 9f       	mul	r23, r19
    3af8:	b0 0d       	add	r27, r0
    3afa:	a1 1d       	adc	r26, r1
    3afc:	62 1f       	adc	r22, r18
    3afe:	83 9f       	mul	r24, r19
    3b00:	a0 0d       	add	r26, r0
    3b02:	61 1d       	adc	r22, r1
    3b04:	22 1f       	adc	r18, r18
    3b06:	74 9f       	mul	r23, r20
    3b08:	33 27       	eor	r19, r19
    3b0a:	a0 0d       	add	r26, r0
    3b0c:	61 1d       	adc	r22, r1
    3b0e:	23 1f       	adc	r18, r19
    3b10:	84 9f       	mul	r24, r20
    3b12:	60 0d       	add	r22, r0
    3b14:	21 1d       	adc	r18, r1
    3b16:	82 2f       	mov	r24, r18
    3b18:	76 2f       	mov	r23, r22
    3b1a:	6a 2f       	mov	r22, r26
    3b1c:	11 24       	eor	r1, r1
    3b1e:	9f 57       	subi	r25, 0x7F	; 127
    3b20:	50 40       	sbci	r21, 0x00	; 0
    3b22:	9a f0       	brmi	.+38     	; 0x3b4a <__mulsf3_pse+0x88>
    3b24:	f1 f0       	breq	.+60     	; 0x3b62 <__mulsf3_pse+0xa0>
    3b26:	88 23       	and	r24, r24
    3b28:	4a f0       	brmi	.+18     	; 0x3b3c <__mulsf3_pse+0x7a>
    3b2a:	ee 0f       	add	r30, r30
    3b2c:	ff 1f       	adc	r31, r31
    3b2e:	bb 1f       	adc	r27, r27
    3b30:	66 1f       	adc	r22, r22
    3b32:	77 1f       	adc	r23, r23
    3b34:	88 1f       	adc	r24, r24
    3b36:	91 50       	subi	r25, 0x01	; 1
    3b38:	50 40       	sbci	r21, 0x00	; 0
    3b3a:	a9 f7       	brne	.-22     	; 0x3b26 <__mulsf3_pse+0x64>
    3b3c:	9e 3f       	cpi	r25, 0xFE	; 254
    3b3e:	51 05       	cpc	r21, r1
    3b40:	80 f0       	brcs	.+32     	; 0x3b62 <__mulsf3_pse+0xa0>
    3b42:	0c 94 83 1b 	jmp	0x3706	; 0x3706 <__fp_inf>
    3b46:	0c 94 ce 1b 	jmp	0x379c	; 0x379c <__fp_szero>
    3b4a:	5f 3f       	cpi	r21, 0xFF	; 255
    3b4c:	e4 f3       	brlt	.-8      	; 0x3b46 <__mulsf3_pse+0x84>
    3b4e:	98 3e       	cpi	r25, 0xE8	; 232
    3b50:	d4 f3       	brlt	.-12     	; 0x3b46 <__mulsf3_pse+0x84>
    3b52:	86 95       	lsr	r24
    3b54:	77 95       	ror	r23
    3b56:	67 95       	ror	r22
    3b58:	b7 95       	ror	r27
    3b5a:	f7 95       	ror	r31
    3b5c:	e7 95       	ror	r30
    3b5e:	9f 5f       	subi	r25, 0xFF	; 255
    3b60:	c1 f7       	brne	.-16     	; 0x3b52 <__mulsf3_pse+0x90>
    3b62:	fe 2b       	or	r31, r30
    3b64:	88 0f       	add	r24, r24
    3b66:	91 1d       	adc	r25, r1
    3b68:	96 95       	lsr	r25
    3b6a:	87 95       	ror	r24
    3b6c:	97 f9       	bld	r25, 7
    3b6e:	08 95       	ret

00003b70 <__fp_mpack>:
    3b70:	9f 3f       	cpi	r25, 0xFF	; 255
    3b72:	31 f0       	breq	.+12     	; 0x3b80 <__fp_mpack_finite+0xc>

00003b74 <__fp_mpack_finite>:
    3b74:	91 50       	subi	r25, 0x01	; 1
    3b76:	20 f4       	brcc	.+8      	; 0x3b80 <__fp_mpack_finite+0xc>
    3b78:	87 95       	ror	r24
    3b7a:	77 95       	ror	r23
    3b7c:	67 95       	ror	r22
    3b7e:	b7 95       	ror	r27
    3b80:	88 0f       	add	r24, r24
    3b82:	91 1d       	adc	r25, r1
    3b84:	96 95       	lsr	r25
    3b86:	87 95       	ror	r24
    3b88:	97 f9       	bld	r25, 7
    3b8a:	08 95       	ret

00003b8c <__udivmodhi4>:
    3b8c:	aa 1b       	sub	r26, r26
    3b8e:	bb 1b       	sub	r27, r27
    3b90:	51 e1       	ldi	r21, 0x11	; 17
    3b92:	07 c0       	rjmp	.+14     	; 0x3ba2 <__udivmodhi4_ep>

00003b94 <__udivmodhi4_loop>:
    3b94:	aa 1f       	adc	r26, r26
    3b96:	bb 1f       	adc	r27, r27
    3b98:	a6 17       	cp	r26, r22
    3b9a:	b7 07       	cpc	r27, r23
    3b9c:	10 f0       	brcs	.+4      	; 0x3ba2 <__udivmodhi4_ep>
    3b9e:	a6 1b       	sub	r26, r22
    3ba0:	b7 0b       	sbc	r27, r23

00003ba2 <__udivmodhi4_ep>:
    3ba2:	88 1f       	adc	r24, r24
    3ba4:	99 1f       	adc	r25, r25
    3ba6:	5a 95       	dec	r21
    3ba8:	a9 f7       	brne	.-22     	; 0x3b94 <__udivmodhi4_loop>
    3baa:	80 95       	com	r24
    3bac:	90 95       	com	r25
    3bae:	bc 01       	movw	r22, r24
    3bb0:	cd 01       	movw	r24, r26
    3bb2:	08 95       	ret

00003bb4 <__divmodhi4>:
    3bb4:	97 fb       	bst	r25, 7
    3bb6:	07 2e       	mov	r0, r23
    3bb8:	16 f4       	brtc	.+4      	; 0x3bbe <__divmodhi4+0xa>
    3bba:	00 94       	com	r0
    3bbc:	07 d0       	rcall	.+14     	; 0x3bcc <__divmodhi4_neg1>
    3bbe:	77 fd       	sbrc	r23, 7
    3bc0:	09 d0       	rcall	.+18     	; 0x3bd4 <__divmodhi4_neg2>
    3bc2:	0e 94 c6 1d 	call	0x3b8c	; 0x3b8c <__udivmodhi4>
    3bc6:	07 fc       	sbrc	r0, 7
    3bc8:	05 d0       	rcall	.+10     	; 0x3bd4 <__divmodhi4_neg2>
    3bca:	3e f4       	brtc	.+14     	; 0x3bda <__divmodhi4_exit>

00003bcc <__divmodhi4_neg1>:
    3bcc:	90 95       	com	r25
    3bce:	81 95       	neg	r24
    3bd0:	9f 4f       	sbci	r25, 0xFF	; 255
    3bd2:	08 95       	ret

00003bd4 <__divmodhi4_neg2>:
    3bd4:	70 95       	com	r23
    3bd6:	61 95       	neg	r22
    3bd8:	7f 4f       	sbci	r23, 0xFF	; 255

00003bda <__divmodhi4_exit>:
    3bda:	08 95       	ret

00003bdc <memset>:
    3bdc:	dc 01       	movw	r26, r24
    3bde:	01 c0       	rjmp	.+2      	; 0x3be2 <memset+0x6>
    3be0:	6d 93       	st	X+, r22
    3be2:	41 50       	subi	r20, 0x01	; 1
    3be4:	50 40       	sbci	r21, 0x00	; 0
    3be6:	e0 f7       	brcc	.-8      	; 0x3be0 <memset+0x4>
    3be8:	08 95       	ret

00003bea <strcat>:
    3bea:	fb 01       	movw	r30, r22
    3bec:	dc 01       	movw	r26, r24
    3bee:	0d 90       	ld	r0, X+
    3bf0:	00 20       	and	r0, r0
    3bf2:	e9 f7       	brne	.-6      	; 0x3bee <strcat+0x4>
    3bf4:	11 97       	sbiw	r26, 0x01	; 1
    3bf6:	01 90       	ld	r0, Z+
    3bf8:	0d 92       	st	X+, r0
    3bfa:	00 20       	and	r0, r0
    3bfc:	e1 f7       	brne	.-8      	; 0x3bf6 <strcat+0xc>
    3bfe:	08 95       	ret

00003c00 <_exit>:
    3c00:	f8 94       	cli

00003c02 <__stop_program>:
    3c02:	ff cf       	rjmp	.-2      	; 0x3c02 <__stop_program>
