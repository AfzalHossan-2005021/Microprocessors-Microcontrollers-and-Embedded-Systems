
Experiment_02.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000050  00800060  000000f4  00000168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000828  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005d8  00000000  00000000  00000a84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000354  00000000  00000000  0000105c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  000013b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000391  00000000  00000000  00001404  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000261  00000000  00000000  00001795  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  000019f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ef       	ldi	r30, 0xF4	; 244
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 3b       	cpi	r26, 0xB0	; 176
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 73 00 	call	0xe6	; 0xe6 <main>
  7a:	0c 94 78 00 	jmp	0xf0	; 0xf0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <move_show>:
			row_data = rows[i%8];
			col_data = ~ALPHA[3][i%8];
			_delay_ms(2);
		}
		
		for(int i=0;i<500;i++){
  82:	a0 e0       	ldi	r26, 0x00	; 0
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	46 e9       	ldi	r20, 0x96	; 150
  8c:	50 e0       	ldi	r21, 0x00	; 0
  8e:	bd 01       	movw	r22, r26
  90:	66 0f       	add	r22, r22
  92:	77 1f       	adc	r23, r23
  94:	66 0f       	add	r22, r22
  96:	77 1f       	adc	r23, r23
  98:	66 0f       	add	r22, r22
  9a:	77 1f       	adc	r23, r23
  9c:	60 5a       	subi	r22, 0xA0	; 160
  9e:	7f 4f       	sbci	r23, 0xFF	; 255
  a0:	fc 01       	movw	r30, r24
  a2:	e8 55       	subi	r30, 0x58	; 88
  a4:	ff 4f       	sbci	r31, 0xFF	; 255
  a6:	20 81       	ld	r18, Z
  a8:	28 bb       	out	0x18, r18	; 24
  aa:	fb 01       	movw	r30, r22
  ac:	e8 0f       	add	r30, r24
  ae:	f9 1f       	adc	r31, r25
  b0:	20 81       	ld	r18, Z
  b2:	20 95       	com	r18
  b4:	2b bb       	out	0x1b, r18	; 27
  b6:	e3 ef       	ldi	r30, 0xF3	; 243
  b8:	f1 e0       	ldi	r31, 0x01	; 1
  ba:	31 97       	sbiw	r30, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <move_show+0x38>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <move_show+0x3e>
  c0:	00 00       	nop
  c2:	01 96       	adiw	r24, 0x01	; 1
  c4:	88 30       	cpi	r24, 0x08	; 8
  c6:	91 05       	cpc	r25, r1
  c8:	14 f0       	brlt	.+4      	; 0xce <move_show+0x4c>
  ca:	80 e0       	ldi	r24, 0x00	; 0
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	41 50       	subi	r20, 0x01	; 1
  d0:	51 09       	sbc	r21, r1
  d2:	31 f7       	brne	.-52     	; 0xa0 <move_show+0x1e>
  d4:	11 96       	adiw	r26, 0x01	; 1
  d6:	a9 30       	cpi	r26, 0x09	; 9
  d8:	b1 05       	cpc	r27, r1
  da:	bc f2       	brlt	.-82     	; 0x8a <move_show+0x8>
  dc:	a0 e0       	ldi	r26, 0x00	; 0
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	80 e0       	ldi	r24, 0x00	; 0
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	d2 cf       	rjmp	.-92     	; 0x8a <move_show+0x8>

000000e6 <main>:
	}
}

int main(void)
{    
	row_ddr =0xff;
  e6:	8f ef       	ldi	r24, 0xFF	; 255
  e8:	87 bb       	out	0x17, r24	; 23
	col_ddr = 0xff;
  ea:	8a bb       	out	0x1a, r24	; 26
	//static_show();
	//flush_show();
    move_show();
  ec:	0e 94 41 00 	call	0x82	; 0x82 <move_show>

000000f0 <_exit>:
  f0:	f8 94       	cli

000000f2 <__stop_program>:
  f2:	ff cf       	rjmp	.-2      	; 0xf2 <__stop_program>
